"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8054],{79443:(e,t,i)=>{i.d(t,{Z:()=>n});const n=(0,i(67294).createContext)(void 0)},80944:(e,t,i)=>{i.d(t,{Z:()=>a});var n=i(67294),o=i(79443);const a=function(){const e=(0,n.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e}},30547:(e,t,i)=>{i.d(t,{Z:()=>o});var n=i(67294);const o=function(e){let{children:t,hidden:i,className:o}=e;return n.createElement("div",{role:"tabpanel",hidden:i,className:o},t)}},49366:(e,t,i)=>{i.d(t,{Z:()=>r});var n=i(67294),o=i(80944),a=i(86010);const r=function(e){const{lazy:t,platform:i,block:r,defaultValue:l,values:s,groupId:c,className:d}=e,u=n.Children.toArray(e.children),p=s??u.map((e=>({value:e.props.value,label:e.props.label}))),h=l??u.find((e=>e.props.default))?.props.value,{tabGroupChoices:m,setTabGroupChoices:y}=(0,o.Z)(),[f,v]=(0,n.useState)(h);(0,n.useEffect)((()=>{if(null!=c){const e=m[c];null!=e&&e!==f&&(p.some((t=>t.value===e))?v(e):v(h))}}),[i,m[c]]);const g=e=>{v(e),null!=c&&y(c,e)},b=p.length>1;return n.createElement("div",{className:"tabs-container"},b&&n.createElement(n.Fragment,null,n.createElement("div",{className:"sm:hidden"},n.createElement("label",{htmlFor:"tabs",className:"sr-only"},"Select a tab"),n.createElement("select",{id:"tabs",name:"tabs",value:f,onChange:e=>g(e.currentTarget.value),className:"block w-full focus:ring-blue-500 focus:border-blue-500 border-gray-300 rounded-md"},p.map((e=>{let{value:t,label:i}=e;return n.createElement("option",{value:t,key:t},i??t)})))),n.createElement("div",{className:"hidden sm:block"},n.createElement("nav",{className:"flex space-x-4","aria-label":"Tabs"},p.map((e=>{let{value:t,label:i}=e;return n.createElement("button",{key:t,onClick:()=>g(t),className:(0,a.Z)(f===t?"bg-blue-100 text-blue-700":"text-gray-500 hover:text-gray-700","px-3 py-2 font-medium text-sm rounded-md"),"aria-current":f===t?"page":void 0},i??t)}))))),t?(0,n.cloneElement)(u.filter((e=>e.props.value===f))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},u.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==f})))))}},86315:(e,t,i)=>{i.r(t),i.d(t,{contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=i(87462),o=(i(67294),i(3905));i(8209),i(49366),i(30547);const a={title:"Overview",sidebar_position:1},r=void 0,l={unversionedId:"security/overview",id:"security/overview",isDocsHomePage:!1,title:"Overview",description:'Most applications need a way to control which users can write or read certain data. For example, you might build an application where senior staff members can READ and WRITE documents in the "menuItems" collection while junior staff members can only READ. Ditto\'s security is controlled by identities. Each Ditto instance must identify itself to other peers in order to syncronize with them.',source:"@site/docs/common/security/overview.mdx",sourceDirName:"security",slug:"/security/overview",permalink:"/common/security/overview",editUrl:"https://github.com/getditto/docs/edit/main/docs/common/security/overview.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Overview",sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"3 - Node.js Example",permalink:"/common/guides/kafka/nodejs"},next:{title:"Authentication",permalink:"/common/security/authentication"}},s=[{value:"Get started",id:"get-started",children:[{value:"Playground",id:"playground",children:[],level:3},{value:"Production identities",id:"production-identities",children:[],level:3},{value:"Parts of a Ditto Identity",id:"parts-of-a-ditto-identity",children:[],level:3}],level:2},{value:"Ditto Identity Lifecycle",id:"ditto-identity-lifecycle",children:[],level:2}],c={toc:s},d="wrapper";function u(e){let{components:t,...i}=e;return(0,o.kt)(d,(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Most applications need a way to control which users can write or read certain data. For example, you might build an application where senior staff members can ",(0,o.kt)("inlineCode",{parentName:"p"},"READ")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"WRITE")," documents in the ",(0,o.kt)("inlineCode",{parentName:"p"},'"menuItems"')," collection while junior staff members can only ",(0,o.kt)("inlineCode",{parentName:"p"},"READ"),". Ditto's security is controlled by ",(0,o.kt)("strong",{parentName:"p"},"identities"),". Each Ditto instance must identify itself to other peers in order to syncronize with them. "),(0,o.kt)("h2",{id:"get-started"},"Get started"),(0,o.kt)("p",null,"These sections will describe how you can:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Identify users "),(0,o.kt)("li",{parentName:"ol"},"Give users read or write control "),(0,o.kt)("li",{parentName:"ol"},"Integrate with your existing authentication systems")),(0,o.kt)("p",null,"There are several types of identities.  Every installation of an app that uses\nDitto has its own identity. This identity is used to identify each unique peer\nin the mesh network. Each Ditto Identity is associated to a single Ditto client\nvia a globally unique AppId and may not be used across multiple Ditto apps. Each identity has an ",(0,o.kt)("inlineCode",{parentName:"p"},"appID"),", an authentication certificate, and a set of ",(0,o.kt)("a",{parentName:"p",href:"./designing-permissions"},"access control permissions")," which you specify. This information is used\nto accept or reject syncronization with peers. "),(0,o.kt)("h3",{id:"playground"},"Playground"),(0,o.kt)("p",null,'When you start prototyping with Ditto you can use a "playground" identity.\nThe playground identitiy offers no real security. Playground certificates should\nabsolutely not be deployed to any production environments.'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"../mesh-network/online-playground"},"Online Playground")," - for prototyping with Ditto for hybrid offline/online synchornization. Start here!")),(0,o.kt)("h3",{id:"production-identities"},"Production identities"),(0,o.kt)("p",null,"Once you are ready to deploy, this can be swapped for a production identity where security is\nenforced."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./authentication"},"Online With Authentication")," - for hybrid offline/online synchronization with customized permissioning."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./shared-key"},"Shared Key")," - an intermediate level of security for offline-only applications where all devices are trusted.")),(0,o.kt)("h3",{id:"parts-of-a-ditto-identity"},"Parts of a Ditto Identity"),(0,o.kt)("p",null,"For more detailed information on what is contained within Ditto Identity certificates, see ",(0,o.kt)("a",{parentName:"p",href:"../how-it-works/certificate-security"},"Certificate Security"),"."),(0,o.kt)("h2",{id:"ditto-identity-lifecycle"},"Ditto Identity Lifecycle"),(0,o.kt)("p",null,"While highly configurable, each Ditto Identity has a typical life cycle. First,\nthe Ditto Identity is constructed. Typically the only prerequisites are a Ditto\npersistence root (working directory for local data storage, where configured)\nand a globally unique Ditto AppId. In order to sync, all app instances,\nregardless of SDK language, ",(0,o.kt)("em",{parentName:"p"},"must"),' have the same globally unique Ditto AppId.\nTherefore this value will typically be incorporated in the App\'s bundle or\nprovided to the App when it starts. The Ditto Big Peer can create AppIds for\nyou, but it is not the authentication provider. Ditto Cloud is a proxy to your\nown "source of truth" for identities, credential validation, and permissions.'),(0,o.kt)("p",null,"Next the Ditto Identity is consumed by the Ditto constructor, yielding a\nconfigured ",(0,o.kt)("inlineCode",{parentName:"p"},"Ditto")," instance. The Ditto instance will contain a Ditto\nAuthenticator and your own implementation of the ",(0,o.kt)("inlineCode",{parentName:"p"},"DittoAuthEventHandler"),"\ninterface, which can provide login credentials. Ditto will then contact the\nconfigured Auth Url and supply the login credentials to an Authentication\nProvider. If the credentials are valid, then the Authentication Provider will\nreturn to Ditto an Authentication Token, validating its credentials and granting\nthe Ditto instance individualized permissions. The Ditto instance can now sync\nwith other peers."))}u.isMDXComponent=!0},86010:(e,t,i)=>{function n(e){var t,i,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(i=n(e[t]))&&(o&&(o+=" "),o+=i);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}i.d(t,{Z:()=>o});const o=function(){for(var e,t,i=0,o="";i<arguments.length;)(e=arguments[i++])&&(t=n(e))&&(o&&(o+=" "),o+=t);return o}}}]);