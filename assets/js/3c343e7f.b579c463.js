(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9562],{59030:(e,t,n)=>{"use strict";n.r(t),n.d(t,{contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var i=n(87462),o=(n(67294),n(3905)),a=n(98318);const r={title:"Changelog",sidebar_position:20},s=void 0,d={unversionedId:"changelog",id:"changelog",isDocsHomePage:!1,title:"Changelog",description:"",source:"@site/docs/main/changelog.mdx",sourceDirName:".",slug:"/changelog",permalink:"/changelog",editUrl:"https://github.com/getditto/docs/tree/main/docs/main/changelog.mdx",tags:[],version:"current",sidebarPosition:20,frontMatter:{title:"Changelog",sidebar_position:20}},c=[],l={toc:c},p="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,i.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(a.Z,{mdxType:"Changelog"}))}h.isMDXComponent=!0},98318:(e,t,n)=>{"use strict";n.d(t,{Y:()=>b,Z:()=>D});var i=n(67294),o=n(80944),a=n(50494),r=n(49366),s=n(30547),d=n(52263),c=n(18464),l=n(99013),p=n(81249),h=n.n(p),u=n(30381),f=n.n(u),m=n(9980),g=n.n(m);let y=n(99151)||{},w=n(91395);y.bigpeer=w;const v=function(e){const t=g()(),n=["android","cocoa","cpp","dotnet","js","rustsdk","bigpeer"];let i={};return Object.keys(e).forEach((o=>{n.includes(o)&&(i[o]=[],Object.keys(e[o]).sort(((e,t)=>"Ditto"===e||"DittoObjC"===e||"DittoSwift"===e||"Ditto"===t||"DittoObjC"===t||"DittoSwift"===t?-1:t.length-e.length)).forEach((n=>{Object.keys(e[o][n]).filter((e=>"latest"!==e)).sort(((e,t)=>h().compare(t,e))).forEach((a=>{let r=e[o][n][a],s={framework:n,version:a,apiReferenceDocsURL:r.api_reference_docs_url,dateReleased:f()(r.date_released).format("ddd MMM Do YYYY, h:mm a"),description:t.render(r.description)};if("cocoa"===o&&(s.installationSnippet=t.render(c.C`
              ~~~ruby
              pod '${n}', '=${a}'
              ~~~
              `),s.friendlyName="Cocoa",s.friendlyDescription="iOS 12.0 and higher","DittoObjC"===n?s.languageOrPlatform="ObjC":"DittoSwift"===n&&(s.languageOrPlatform="Swift")),"android"===o){const e=n.toLowerCase();s.installationSnippet=t.render(c.C`
              ~~~html
              implementation "live.ditto:${e}:${a}"
              ~~~`),s.friendlyName="Android",s.friendlyDescription="Android v7.1 and higher"}"cpp"===o&&(s.friendlyName="C++",s.friendlyDescription="C++11 and higher",s.installationSnippet=t.render(c.C`
              iOS
              ~~~shell
              curl -O https://software.ditto.live/cpp-ios/Ditto/${a}/dist/Ditto.tar.gz && tar xvfz Ditto.tar.gz
              ~~~

              Linux x64_64
              ~~~shell
              curl -O https://software.ditto.live/cpp-linux-x86_64/Ditto/${a}/dist/Ditto.tar.gz && tar xvfz Ditto.tar.gz
              ~~~
              `)),"dotnet"===o&&(s.friendlyName=".NET",s.friendlyDescription=".NET Standard 2.1",s.installationSnippet=t.render(c.C`
              Command Line
              ~~~html
              Install-Package Ditto -Version ${a}
              ~~~

              PackageReference
              ~~~xml
              <PackageReference Include="Ditto" Version=${a}" />
              ~~~
              `)),"js"===o&&(s.friendlyName="JS",s.friendlyDescription="Web only",s.installationSnippet=t.render(c.C`
              ~~~shell
              npm install --save @dittolive/ditto@${a}
              ~~~

              If you have yarn:

              ~~~shell
              yarn add @dittolive/ditto@${a}
              ~~~
              `)),"rustsdk"===o&&(s.friendlyName="Rust",s.friendlyDescription="Rust 1.31 (2018 Edition)",s.installationSnippet=t.render(c.C`
              ~~~toml
              [dependencies.dittolive-ditto]
              version = ${a}
              ~~~
              `)),"bigpeer"===o&&(s.friendlyName="Big Peer",s.friendlyDescription="Cloud",s.installationSnippet=""),i[o].push(s)}))})))})),i}(y);function _(e){let{sdkInfos:t,title:n}=e;return i.createElement("div",null,t.map(((e,t)=>i.createElement("div",{key:t,className:"margin-bottom--md"},i.createElement("h3",null,n," Version ",e.version," "),i.createElement("p",null,"Released: ",e.dateReleased),i.createElement("p",{className:""},"Release Notes:"),i.createElement("div",{dangerouslySetInnerHTML:{__html:e.description}}),e.installationSnippet.length>0&&i.createElement(i.Fragment,null,i.createElement("p",null,"Installation: "),i.createElement("div",{dangerouslySetInnerHTML:{__html:e.installationSnippet}})),e.apiReferenceDocsURL&&i.createElement("a",{role:"button",style:{color:"white",textDecoration:"none"},className:"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 text-white",href:e.apiReferenceDocsURL},"API Reference URL")))))}function D(){const{tabGroupChoices:e}=(0,o.Z)(),{siteConfig:t}=(0,d.Z)(),n=v,c=a.Z.find((t=>t.id===e.platform));return i.createElement("div",{className:"prose prose-lg max-w-none"},i.createElement("div",{className:"col margin-vert--lg",style:{maxWidth:"800px"}},i.createElement(r.Z,{defaultValue:c?.id||"swift",groupId:"programming-language",values:[{label:"JavaScript",value:"javascript"},{label:"Swift",value:"swift"},{label:"ObjC",value:"objc"},{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"},{label:"C#",value:"csharp"},{label:"C++",value:"cpp"},{label:"Rust",value:"rust"},{label:"Big Peer",value:"bigpeer"}]},i.createElement(s.Z,{value:"javascript"},i.createElement(_,{title:"JavaScript",sdkInfos:n.js})),i.createElement(s.Z,{value:"swift"},i.createElement(_,{title:"DittoSwift",sdkInfos:n.cocoa.filter((e=>"DittoSwift"==e.framework))})),i.createElement(s.Z,{value:"objc"},i.createElement(_,{title:"DittoObjC",sdkInfos:n.cocoa.filter((e=>"DittoObjC"===e.framework))})),i.createElement(s.Z,{value:"java"},i.createElement(_,{title:"Java Android",sdkInfos:n.android})),i.createElement(s.Z,{value:"kotlin"},i.createElement(_,{title:"Kotlin Android",sdkInfos:n.android})),i.createElement(s.Z,{value:"csharp"},i.createElement(_,{title:"C# / .NET",sdkInfos:n.dotnet})),i.createElement(s.Z,{value:"cpp"},i.createElement(_,{title:"C++ Linux / iOS",sdkInfos:n.cpp})),i.createElement(s.Z,{value:"rust"},i.createElement(_,{title:"Rust",sdkInfos:n.rustsdk})),i.createElement(s.Z,{value:"bigpeer"},i.createElement(_,{title:"Big Peer",sdkInfos:n.bigpeer})))))}function b(e){let{framework:t,variant:n}=e,o=function(e){let t;for(var n in v[e])if(t=v[e][n],!t.version.match(/.*alpha.*/)&&!t.version.match(/.*beta.*/))break;return t}(t),a="";switch(t){case"js":a=c.C`
        # using npm
        npm install @dittolive/ditto@${o.version} --save

        # using yarn
        yarn add @dittolive/ditto@${o.version}
      `;break;case"cocoa":"swift"===n&&(a=c.C`
        pod 'DittoSwift', '=${o.version}'
      `),"objc"===n&&(a=c.C`
        pod 'DittoObjC', '=${o.version}'
      `);break;case"android":a=c.C`
      dependencies {
        // ...
        implementation "live.ditto:ditto:${o.version}"
      }
      `;case"dotnet":"package-manager"===n&&(a=c.C`Install-Package Ditto -Version ${o.version}`),"cli"===n&&(a=c.C`dotnet add package Ditto --version ${o.version}`),"package-reference"===n&&(a=c.C`<PackageReference Include="Ditto" Version="${o.version}" />`);break;case"cpp":a=`curl -O https://software.ditto.live/cpp-${n}/Ditto/${o.version}/dist/Ditto.tar.gz && tar xvfz Ditto.tar.gz`;break;case"rustsdk":a=c.C`
      [dependencies.dittolive-ditto]
      version = "${o.version}"
      `}return i.createElement(l.Z,null,a)}},50494:(e,t,n)=>{"use strict";n.d(t,{Z:()=>w});var i=n(87462),o=n(86010),a=n(67294),r=n(45697),s=n.n(r),d=n(44225),c=n(90401),l=n(23184),p=n(90858),h=n(89713),u=n(63680),f=n(78372),m=n(30396);const g=e=>{let{className:t,...n}=e;return a.createElement(d.t,(0,i.Z)({className:(0,o.Z)("text-[#3ddb85]",t)},n))},y=e=>{let{className:t,...n}=e;return a.createElement(c.A,(0,i.Z)({className:(0,o.Z)("text-text",t)},n))};y.propTypes=g.propTypes={className:s().string};const w=[{id:"javascript",name:"JavaScript",icon:function(e){return a.createElement("svg",(0,i.Z)({viewBox:"0 0 48 48",fill:"none",xmlns:"http://www.w3.org/2000/svg"},e),a.createElement("path",{d:"M0 10C0 4.47715 4.47715 0 10 0H38C43.5229 0 48 4.47715 48 10V38C48 43.5229 43.5228 48 38 48H10C4.47715 48 0 43.5228 0 38V10Z",fill:"#F5DE19"}),a.createElement("path",{d:"M32.3894 37.6804C32.8 38.5145 33.4379 39.2155 34.2296 39.7027C35.0213 40.1899 35.9346 40.4435 36.8642 40.4342C38.7402 40.4342 39.9398 39.4962 39.9398 38.1968C39.9398 36.6478 38.7075 36.0936 36.6422 35.19L35.5097 34.7047C32.2396 33.3123 30.071 31.5688 30.071 27.8822C30.071 24.4865 32.6527 21.8997 36.7024 21.8997C38.0134 21.805 39.3232 22.0984 40.4686 22.7433C41.6139 23.3882 42.544 24.356 43.1428 25.5261L39.6025 27.7893C39.3719 27.2092 38.9704 26.7128 38.4512 26.3661C37.9321 26.0194 37.3198 25.8387 36.6956 25.8479C36.4232 25.8206 36.1482 25.8504 35.888 25.9353C35.6278 26.0202 35.3881 26.1584 35.1842 26.341C34.9804 26.5237 34.8168 26.7468 34.7039 26.9961C34.5911 27.2455 34.5314 27.5156 34.5287 27.7893C34.5287 29.1472 35.3703 29.698 37.3134 30.5431L38.4459 31.0284C42.2943 32.6789 44.4698 34.3604 44.4698 38.1417C44.4698 42.219 41.2668 44.453 36.9658 44.453C35.2899 44.5597 33.619 44.1793 32.1546 43.3574C30.6902 42.5356 29.495 41.3076 28.7131 39.8215L32.3894 37.6804ZM16.3917 38.0728C17.1025 39.3344 17.7496 40.4015 19.3055 40.4015C20.7925 40.4015 21.7323 39.8198 21.7323 37.5565V22.1579H26.2605V37.6168C26.2605 42.305 23.5067 44.4392 19.4983 44.4392C18.0814 44.5166 16.6742 44.1635 15.4617 43.4263C14.2493 42.689 13.2883 41.6022 12.7051 40.3086L16.3917 38.0728Z",fill:"black"}))}},{id:"android",name:"Android",icon:g},{id:"ios",name:"iOS",icon:y},{id:"csharp",name:"C#",icon:e=>{let{className:t,...n}=e;return a.createElement(u.F,(0,i.Z)({className:(0,o.Z)("text-[#08940e]",t)},n))}},{id:"http",name:"HTTP",icon:h.d},{id:"raspberrypi",name:"RaspberryPi",icon:e=>{let{className:t,...n}=e;return a.createElement(m.n,(0,i.Z)({className:(0,o.Z)("text-[#cc2555]",t)},n))}},{id:"rust",name:"Rust",icon:e=>{let{className:t,...n}=e;return a.createElement(f.T,(0,i.Z)({className:(0,o.Z)("text-[black]",t)},n))}},{id:"cpp",name:"C++",icon:e=>{let{className:t,...n}=e;return a.createElement(l.q,(0,i.Z)({className:(0,o.Z)("text-[#283492]",t)},n))}},{id:"python",name:"Python",icon:p.i,disabled:!0}]},99013:(e,t,n)=>{"use strict";n.d(t,{Z:()=>b});var i=n(87462),o=n(67294),a=n(86010),r=n(23746),s=n(10195),d=n(87594),c=n.n(d),l=n(95999),p=n(68793),h=n(62435),u=n(71418);const f={codeBlockContainer:"codeBlockContainer_EiTO",codeBlockContent:"codeBlockContent_X2I6",codeBlockTitle:"codeBlockTitle_PQMO",codeBlock:"codeBlock_UxnK",copyButton:"copyButton_V-PD",codeBlockLines:"codeBlockLines_W6UD"};var m=n(32822);const g=/{([\d,-]+)}/,y=["js","jsBlock","jsx","python","html"],w={js:{start:"\\/\\/",end:""},jsBlock:{start:"\\/\\*",end:"\\*\\/"},jsx:{start:"\\{\\s*\\/\\*",end:"\\*\\/\\s*\\}"},python:{start:"#",end:""},html:{start:"\x3c!--",end:"--\x3e"}},v=["highlight-next-line","highlight-start","highlight-end"],_=function(e){void 0===e&&(e=y);const t=e.map((e=>{const{start:t,end:n}=w[e];return`(?:${t}\\s*(${v.join("|")})\\s*${n})`})).join("|");return new RegExp(`^\\s*(?:${t})\\s*$`)},D=e=>{switch(e){case"js":case"javascript":case"ts":case"typescript":return _(["js","jsBlock"]);case"jsx":case"tsx":return _(["js","jsBlock","jsx"]);case"html":return _(["js","jsBlock","html"]);case"python":case"py":return _(["python"]);default:return _()}};function b(e){let{children:t,className:n,metastring:d,title:y}=e;const{prism:w}=(0,m.LU)(),[v,_]=(0,o.useState)(!1),[b,T]=(0,o.useState)(!1);(0,o.useEffect)((()=>{T(!0)}),[]);const S=(0,m.bc)(d)||y,x=(0,o.useRef)(null);let A=[];const I=Array.isArray(t)?t.join(""):t;if(d&&g.test(d)){const e=d.match(g)[1];A=c()(e).filter((e=>e>0))}let P=n?.replace(/language-/,"");!P&&w.defaultLanguage&&(P=w.defaultLanguage);let C=I.replace(/\n$/,"");if(0===A.length&&void 0!==P){let e="";const t=D(P),n=I.replace(/\n$/,"").split("\n");let i;for(let o=0;o<n.length;){const a=o+1,r=n[o].match(t);if(null!==r){switch(r.slice(1).reduce(((e,t)=>e||t),void 0)){case"highlight-next-line":e+=`${a},`;break;case"highlight-start":i=a;break;case"highlight-end":e+=`${i}-${a-1},`}n.splice(o,1)}else o+=1}A=c()(e),C=n.join("\n")}const k=()=>{(0,s.Z)(C),_(!0),setTimeout((()=>_(!1)),2e3)};return o.createElement(r.ZP,(0,i.Z)({},r.lG,{key:String(b),theme:u.Z,code:C,language:P}),(e=>{let{className:t,style:n,tokens:r,getLineProps:s,getTokenProps:d}=e;return o.createElement("div",{className:f.codeBlockContainer},S&&o.createElement("div",{style:n,className:f.codeBlockTitle},S),o.createElement("div",{className:(0,a.Z)(f.codeBlockContent,P)},o.createElement("pre",{tabIndex:0,className:(0,a.Z)(t,f.codeBlock,"thin-scrollbar")},o.createElement("code",{className:f.codeBlockLines},r.map(((e,t)=>{1===e.length&&""===e[0].content&&(e[0].content="\n");const n=s({line:e,key:t}),r=A.includes(t+1);A.includes(t+1)&&(n.className+="bg-gray-800 docusaurus-highlight-code-line");let c=(0,a.Z)(n.className,r&&"bg-gray-700");return o.createElement("span",(0,i.Z)({key:t},n,{className:c}),e.map(((e,t)=>{let n={...d({token:e,key:t})},r=n.className;return r.includes("inserted-sign")&&(r=(0,a.Z)(r,"bg-green-900")),r.includes("deleted-sign")&&(r=(0,a.Z)(r,"bg-red-900")),o.createElement("span",(0,i.Z)({key:t},n,{className:r}))})))})))),o.createElement("button",{ref:x,type:"button","aria-label":(0,l.I)({id:"theme.CodeBlock.copyButtonAriaLabel",message:"Copy code to clipboard",description:"The ARIA label for copy code blocks button"}),className:(0,a.Z)(f.copyButton,"clean-btn",v?"bg-green-500":""),onClick:k},v?o.createElement("div",null,o.createElement(p.Z,{className:"w-4 h-4 inline mr-1"}),o.createElement("span",{className:"text-xs"},"Copied")):o.createElement("div",null,o.createElement(h.Z,{className:"w-4 h-4 inline mr-1"}),o.createElement("span",{className:"text-xs"},"Copy")))))}))}},30547:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var i=n(67294);const o=function(e){let{children:t,hidden:n,className:o}=e;return i.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},49366:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});var i=n(67294),o=n(80944),a=n(86010);const r=function(e){const{lazy:t,platform:n,block:r,defaultValue:s,values:d,groupId:c,className:l}=e,p=i.Children.toArray(e.children),h=d??p.map((e=>({value:e.props.value,label:e.props.label}))),u=s??p.find((e=>e.props.default))?.props.value,{tabGroupChoices:f,setTabGroupChoices:m}=(0,o.Z)(),[g,y]=(0,i.useState)(u);(0,i.useEffect)((()=>{if(null!=c){const e=f[c];null!=e&&e!==g&&(h.some((t=>t.value===e))?y(e):y(u))}}),[n,f[c]]);const w=e=>{y(e),null!=c&&m(c,e)},v=h.length>1;return i.createElement("div",{className:"tabs-container"},v&&i.createElement(i.Fragment,null,i.createElement("div",{className:"sm:hidden"},i.createElement("label",{htmlFor:"tabs",className:"sr-only"},"Select a tab"),i.createElement("select",{id:"tabs",name:"tabs",value:g,onChange:e=>w(e.currentTarget.value),className:"block w-full focus:ring-blue-500 focus:border-blue-500 border-gray-300 rounded-md"},h.map((e=>{let{value:t,label:n}=e;return i.createElement("option",{value:t,key:t},n??t)})))),i.createElement("div",{className:"hidden sm:block"},i.createElement("nav",{className:"flex space-x-4","aria-label":"Tabs"},h.map((e=>{let{value:t,label:n}=e;return i.createElement("button",{key:t,onClick:()=>w(t),className:(0,a.Z)(g===t?"bg-blue-100 text-blue-700":"text-gray-500 hover:text-gray-700","px-3 py-2 font-medium text-sm rounded-md"),"aria-current":g===t?"page":void 0},n??t)}))))),t?(0,i.cloneElement)(p.filter((e=>e.props.value===g))[0],{className:"margin-vert--md"}):i.createElement("div",{className:"margin-vert--md"},p.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==g})))))}},46700:(e,t,n)=>{var i={"./af":42786,"./af.js":42786,"./ar":30867,"./ar-dz":14130,"./ar-dz.js":14130,"./ar-kw":96135,"./ar-kw.js":96135,"./ar-ly":56440,"./ar-ly.js":56440,"./ar-ma":47702,"./ar-ma.js":47702,"./ar-sa":16040,"./ar-sa.js":16040,"./ar-tn":37100,"./ar-tn.js":37100,"./ar.js":30867,"./az":31083,"./az.js":31083,"./be":9808,"./be.js":9808,"./bg":68338,"./bg.js":68338,"./bm":67438,"./bm.js":67438,"./bn":8905,"./bn-bd":76225,"./bn-bd.js":76225,"./bn.js":8905,"./bo":11560,"./bo.js":11560,"./br":1278,"./br.js":1278,"./bs":80622,"./bs.js":80622,"./ca":2468,"./ca.js":2468,"./cs":5822,"./cs.js":5822,"./cv":50877,"./cv.js":50877,"./cy":47373,"./cy.js":47373,"./da":24780,"./da.js":24780,"./de":59740,"./de-at":60217,"./de-at.js":60217,"./de-ch":60894,"./de-ch.js":60894,"./de.js":59740,"./dv":5300,"./dv.js":5300,"./el":50837,"./el.js":50837,"./en-au":78348,"./en-au.js":78348,"./en-ca":77925,"./en-ca.js":77925,"./en-gb":22243,"./en-gb.js":22243,"./en-ie":46436,"./en-ie.js":46436,"./en-il":47207,"./en-il.js":47207,"./en-in":44175,"./en-in.js":44175,"./en-nz":76319,"./en-nz.js":76319,"./en-sg":31662,"./en-sg.js":31662,"./eo":92915,"./eo.js":92915,"./es":55655,"./es-do":55251,"./es-do.js":55251,"./es-mx":96112,"./es-mx.js":96112,"./es-us":71146,"./es-us.js":71146,"./es.js":55655,"./et":5603,"./et.js":5603,"./eu":77763,"./eu.js":77763,"./fa":76959,"./fa.js":76959,"./fi":11897,"./fi.js":11897,"./fil":42549,"./fil.js":42549,"./fo":94694,"./fo.js":94694,"./fr":94470,"./fr-ca":63049,"./fr-ca.js":63049,"./fr-ch":52330,"./fr-ch.js":52330,"./fr.js":94470,"./fy":5044,"./fy.js":5044,"./ga":29295,"./ga.js":29295,"./gd":2101,"./gd.js":2101,"./gl":38794,"./gl.js":38794,"./gom-deva":27884,"./gom-deva.js":27884,"./gom-latn":23168,"./gom-latn.js":23168,"./gu":95349,"./gu.js":95349,"./he":24206,"./he.js":24206,"./hi":30094,"./hi.js":30094,"./hr":30316,"./hr.js":30316,"./hu":22138,"./hu.js":22138,"./hy-am":11423,"./hy-am.js":11423,"./id":29218,"./id.js":29218,"./is":90135,"./is.js":90135,"./it":90626,"./it-ch":10150,"./it-ch.js":10150,"./it.js":90626,"./ja":39183,"./ja.js":39183,"./jv":24286,"./jv.js":24286,"./ka":12105,"./ka.js":12105,"./kk":47772,"./kk.js":47772,"./km":18758,"./km.js":18758,"./kn":79282,"./kn.js":79282,"./ko":33730,"./ko.js":33730,"./ku":1408,"./ku.js":1408,"./ky":33291,"./ky.js":33291,"./lb":36841,"./lb.js":36841,"./lo":55466,"./lo.js":55466,"./lt":57010,"./lt.js":57010,"./lv":37595,"./lv.js":37595,"./me":39861,"./me.js":39861,"./mi":35493,"./mi.js":35493,"./mk":95966,"./mk.js":95966,"./ml":87341,"./ml.js":87341,"./mn":5115,"./mn.js":5115,"./mr":10370,"./mr.js":10370,"./ms":9847,"./ms-my":41237,"./ms-my.js":41237,"./ms.js":9847,"./mt":72126,"./mt.js":72126,"./my":56165,"./my.js":56165,"./nb":64924,"./nb.js":64924,"./ne":16744,"./ne.js":16744,"./nl":93901,"./nl-be":59814,"./nl-be.js":59814,"./nl.js":93901,"./nn":83877,"./nn.js":83877,"./oc-lnc":92135,"./oc-lnc.js":92135,"./pa-in":15858,"./pa-in.js":15858,"./pl":64495,"./pl.js":64495,"./pt":89520,"./pt-br":57971,"./pt-br.js":57971,"./pt.js":89520,"./ro":96459,"./ro.js":96459,"./ru":21793,"./ru.js":21793,"./sd":40950,"./sd.js":40950,"./se":10490,"./se.js":10490,"./si":90124,"./si.js":90124,"./sk":64249,"./sk.js":64249,"./sl":14985,"./sl.js":14985,"./sq":51104,"./sq.js":51104,"./sr":49131,"./sr-cyrl":79915,"./sr-cyrl.js":79915,"./sr.js":49131,"./ss":85893,"./ss.js":85893,"./sv":98760,"./sv.js":98760,"./sw":91172,"./sw.js":91172,"./ta":27333,"./ta.js":27333,"./te":23110,"./te.js":23110,"./tet":52095,"./tet.js":52095,"./tg":27321,"./tg.js":27321,"./th":9041,"./th.js":9041,"./tk":19005,"./tk.js":19005,"./tl-ph":75768,"./tl-ph.js":75768,"./tlh":89444,"./tlh.js":89444,"./tr":72397,"./tr.js":72397,"./tzl":28254,"./tzl.js":28254,"./tzm":51106,"./tzm-latn":30699,"./tzm-latn.js":30699,"./tzm.js":51106,"./ug-cn":9288,"./ug-cn.js":9288,"./uk":67691,"./uk.js":67691,"./ur":13795,"./ur.js":13795,"./uz":6791,"./uz-latn":60588,"./uz-latn.js":60588,"./uz.js":6791,"./vi":65666,"./vi.js":65666,"./x-pseudo":14378,"./x-pseudo.js":14378,"./yo":75805,"./yo.js":75805,"./zh-cn":83839,"./zh-cn.js":83839,"./zh-hk":55726,"./zh-hk.js":55726,"./zh-mo":99807,"./zh-mo.js":99807,"./zh-tw":74152,"./zh-tw.js":74152};function o(e){var t=a(e);return n(t)}function a(e){if(!n.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}o.keys=function(){return Object.keys(i)},o.resolve=a,e.exports=o,o.id=46700},91395:e=>{"use strict";e.exports=JSON.parse('{"DittoKit":{"latest":{"description":"Fix bug where Big Peer would sometimes panic if an SDK peer managed to create multiple Ditto instances with the same persistence directory. We are seeing this error more than we originally hoped. This change makes any occurrence non-fatal until we fix the root cause.  There will be another followup change that will re-enable alerting for this event.","version":"0.30.0","date_released":"2022-08-23T20:27:41.606Z"},"0.30.0":{"description":" Fix bug where Big Peer would sometimes panic if an SDK peer managed to create multiple Ditto instances with the same persistence directory. We are seeing this error more than we originally hoped. This change makes any occurrence non-fatal until we fix the root cause.  There will be another followup change that will re-enable alerting for this event.","version":"0.30.0","date_released":"2022-08-23T20:27:41.606Z"},"0.29.0":{"description":"* Fix bug where HTTP API upserts would not always be reflected in subsequent find requests. \\n* Properly consider limit+offset+order_by for active queries","version":"0.29.0","date_released":"2022-08-18T20:27:41.606Z"},"0.28.0":{"description":"* Minor bug fixes and performance improvements","version":"0.20.0","date_released":"2022-08-14T08:08:47.875Z"},"0.27.0":{"description":"* Supports Ditto SDK through version 2.0.x. See [the v2 Migration Guide](/http/common/v2/) for details.","version":"0.27.0","date_released":"2022-08-03T08:08:47.875Z"},"0.26.0":{"description":"* Minor bug fixes and performance improvements","version":"0.20.0","date_released":"2022-08-01T08:08:47.875Z"},"0.25.0":{"description":"* Minor bug fixes and performance improvements.\\n * Add collection and document id to RequeryRequired requests as part of the live query webhook and CDC.","version":"0.20.0","date_released":"2022-07-23T08:08:47.875Z"},"0.24.0":{"description":"* Minor bug fixes and performance improvements","version":"0.20.0","date_released":"2022-07-12T08:08:47.875Z"},"0.23.0":{"description":"* Minor bug fixes and performance improvements","version":"0.23.0","date_released":"2022-06-24T08:08:47.875Z"},"0.22.0":{"description":"* Minor bug fixes and performance improvements","version":"0.22.0","date_released":"2022-06-06T08:08:47.875Z"},"0.21.0":{"description":"* Minor bug fixes and performance improvements","version":"0.21.0","date_released":"2022-05-26T08:08:47.875Z"},"0.20.0":{"description":"* Supports Ditto SDK through version 1.1.6\\n* Parity between document and timeseries HTTP APIs\\n* HTTP API calls that were GET with a body now also accept POST. They will accept both methods and will behave same no mater which method is used.","version":"0.20.0","date_released":"2022-05-12T08:08:47.875Z"},"0.17.0":{"description":"* Supports Ditto SDK through version 1.1.5, including improvements to replication efficency.\\n\\n* Adds HTTP API RPC `Remove` and `Update` commands.\\n\\nWith `remove`, users may provide a query and delete all matching records.  The\\n`update` command mimics Ditto SDK update behavior and applies a series of\\nupdates to all matching documents. This includes: `set`, `increment`, and\\n`replaceWithCounter`.\\n\\nAll HTTP API Headers used by Ditto will be prefixed with `X-DITTO-`\\n\\n- `X-HYDRA-ENSURE-DELETE` is now `X-DITTO-ENSURE-DELETE`\\n- `X-HYDRA-CLIENT-ID` is now `X-DITTO-CLIENT-ID`\\n- `X-HYDRA-ENSURE-INSERT` is now `X-DITTO-ENSURE-INSERT`\\n- `X-ENSURE-INSERT` is now `X-DITTO-ENSURE-INSERT`\\n\\nThe old header names are now deprecated.\\n\\nHTTP API delete document method now checks for conflicting changes from the\\nsame CLIENT-ID. These conflicts would sometimes cause a deletion to be ignored.\\nThe HTTP API now will check if the `X-DITTO-ENSURE-DELETE` is present and\\nperforms the deletion even when a conflicting add occurrs. Use the\\n`X-DITTO-ENSURE-DELETE` header to ensure deletions are commited before the HTTP\\nresponse is returned.\\n\\nAPI users should continue to ensure different instances of the HTTP API Client\\ndo *not* share the same value for `X-DITTO-CLIENT-ID` header. Further, batch\\nHTTP API requests are preferred to having multiple in-flight Insert, Delete, and\\nUpdate API requests are the same time.  \\n\\nHTTP API Requests have a default timeout of 5 seconds. \\n\\nImproved the error message for HTTP API Requests targeting unavailable transactions.","version":"0.17.0","date_released":"2022-05-06T08:08:47.875Z"}}}')},99151:e=>{"use strict";e.exports=JSON.parse('{"cocoa":{"DittoKit":{"latest":{"description":"* Note that this is a release with breaking changes, even just in terms of clients running 0.4.0 not being able to communicate with clients running 0.3.X releases.\\n* Fixes for memory leaks.\\n* Performance improvements.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.4.0-alpha1/api-reference/","date_released":"2020-09-29T08:18:47.875Z"},"0.1.5":{"description":"* Improved handling of retrieving numeric fields from documents\\n* mDNS/AWDL now correctly filters remote peers by app name\\n* Single document update operation closures now have the document as an optional parameter","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.1.5/api-reference/","date_released":"2019-10-13T22:37:39.873Z"},"0.1.6":{"description":"* The full SDK API is now usable from Objective-C. Some classes that couldn\'t be represented in Objective-C have counterparts with an ObjC suffix","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.1.6/api-reference/","date_released":"2019-10-15T11:57:12.001Z"},"0.1.7":{"description":"* Various Bluetooth Low Energy related fixes to make Bluetooth-based communication more reliable.\\n* Accessing a collection using the `collection` function on `DittoStore` is no longer a throwing call and the `name` parameter has been removed.\\n* Accessing a collection can now be done by using a subscript on `DittoStore`, e.g. `store[\\"my-collection\\"]`.\\n* Live query and transport condition updates are now delivered on the main queue by default. You can specify different queues to be used if required.\\n* Adds `queriesHash` and `queriesHashMnemonic` to `DittoStore`, which allow you to get either a numberc hash or string-based mnemonic representation of a client\'s state in relation to the specified queries.\\n* Fixes a `DittoDocument`-related memory leak.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.1.7/api-reference/","date_released":"2019-10-29T08:09:30.315Z"},"0.1.8":{"description":"* Fixed Bluetooth Low Energy issue on iOS where sync may never complete, particularly with multiple devices\\n* Cocoa SDK detects when WiFi is disabled\\n* Significant performance improvements in synchronization processing","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.1.8/api-reference/","date_released":"2019-11-14T03:22:32.479Z"},"0.1.9":{"description":"* Fixed Bluetooth LE issue specific to older iOS devices (iPhone 6, iPad Mini 4) where sync can fail after the device is locked","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.1.9/api-reference/","date_released":"2019-11-25T11:37:40.912Z"},"0.2.0":{"description":"* iOS: New function observePeers() to monitor connections to other Ditto devices\\n* Improved query results performance\\n* Fixed two bugs that could lead to a crash\\n* Many networking improvements to speed up sync on iOS and Android\\n\\nNote: SyncKit 0.2 is incompatible with version 0.1.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.2.0/api-reference/","date_released":"2019-12-17T11:51:23.638Z"},"0.2.1":{"description":"* Fixes a crash that can occur when calling stop().","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.2.1/api-reference/","date_released":"2020-01-09T04:38:59.387Z"},"0.2.2":{"description":"* Faster Bluetooth sync between iOS devices when reopening app from background","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.2.2/api-reference/","date_released":"2020-02-03T00:22:30.307Z"},"0.3.0":{"description":"* DittoKit 0.3 includes incompatible changes to data storage and networking - please uninstall all apps based on DittoKit 0.2 first\\n* The CocoaPod \u201cDittoKit\u201d is now Objective-C. The Swift version is published as \u201cDittoKitSwift\u201d. To continue working with Ditto in Swift, update your Podfile and import statement\\n* Support for attaching large binary files to documents and syncing them on demand\\n* Many SDK functions no longer throw exceptions and the \u201ctry\u201d operator is no longer needed\\n* When creating documents you can no longer specify the id by providing an `_id` key. Instead you must specify an id as an extra argument to the `insert` function, if you want to explicitly set a document\u2019s id\\n* A document\u2019s id property is now `id` rather than `_id`\\n* The parameters for a live query callback have changed\\n* The sort order for a query is now controlled by an ascending/descending enum\\n* Faster sync performance\\n* Ability to connect to a peer at a known address using the Server transport type\\n* You can set your Ditto license key by configuring \u201cDittoAccessLicense\u201d in Info.plist","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.3.0/api-reference/","date_released":"2020-06-04T10:09:43.663Z"},"0.3.1":{"description":"* Added a new LAN transport mode WiFiFixedPort to listen for connections on a known port.\\n* DittoKit has a new sdkVersion property describing which build of DittoKit is installed. Please include this information in support requests.\\n* Fixed bug where an attachment transfer may not resume after being interrupted.\\n* Fixed bug where a long-lasting Bluetooth connection may spontaneously disconnect and reconnect.\\n* Improvements to reconnection speed.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.3.1/api-reference/","date_released":"2020-07-16T01:16:25.754Z"},"0.3.2":{"description":"* Fixes a memory leak in the Cocoa SDK when using findByID() to query documents.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.3.2/api-reference/","date_released":"2020-07-22T01:31:22.954Z"},"0.3.3":{"description":"* Improved LAN background sync for iOS apps","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.3.3/api-reference/","date_released":"2020-08-04T05:05:57.389Z"},"0.3.4":{"description":"* Fixed a bug with query compilation where integer literals in the query would\\nlead to a query compilation failure.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.3.4/api-reference/","date_released":"2020-08-10T14:25:51.535Z"},"0.3.5":{"description":"* Fixed an issue where inserting data as default data (setting the `isDefault`\\nparameter to true) could lead to data that would not merge as expected.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.3.5/api-reference/","date_released":"2020-09-04T19:30:09.440Z"},"0.4.0-alpha1":{"description":"* Note that this is a release with breaking changes, even just in terms of clients running 0.4.0 not being able to communicate with clients running 0.3.X releases.\\n* Fixes for memory leaks.\\n* Performance improvements.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKit/0.4.0-alpha1/api-reference/","date_released":"2020-09-29T08:18:47.875Z"}},"DittoKitSwift":{"latest":{"description":"* Note that this is a release with breaking changes, even just in terms of clients running 0.4.0 not being able to communicate with clients running 0.3.X releases.\\n* Fixes for memory leaks.\\n* Performance improvements.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKitSwift/0.4.0-alpha1/api-reference/","date_released":"2020-09-29T08:46:26.731Z"},"0.3.1":{"description":"* Added a new LAN transport mode WiFiFixedPort to listen for connections on a known port.\\n* DittoKit has a new sdkVersion property describing which build of DittoKit is installed. Please include this information in support requests.\\n* Fixed bug where an attachment transfer may not resume after being interrupted.\\n* Fixed bug where a long-lasting Bluetooth connection may spontaneously disconnect and reconnect.\\n* Improvements to reconnection speed.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKitSwift/0.3.1/api-reference/","date_released":"2020-07-16T01:27:39.752Z"},"0.3.2":{"description":"* Fixes a memory leak in the Cocoa SDK when using findByID() to query documents.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKitSwift/0.3.2/api-reference/","date_released":"2020-07-22T01:42:59.976Z"},"0.3.3":{"description":"* Improved LAN background sync for iOS apps","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKitSwift/0.3.3/api-reference/","date_released":"2020-08-04T05:15:54.368Z"},"0.3.4":{"description":"* Fixed a bug with query compilation where integer literals in the query would\\nlead to a query compilation failure.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKitSwift/0.3.4/api-reference/","date_released":"2020-08-10T14:31:52.225Z"},"0.3.5":{"description":"* Fixed an issue where inserting data as default data (setting the `isDefault`\\nparameter to true) could lead to data that would not merge as expected.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKitSwift/0.3.5/api-reference/","date_released":"2020-09-04T19:36:44.327Z"},"0.4.0-alpha1":{"description":"* Note that this is a release with breaking changes, even just in terms of clients running 0.4.0 not being able to communicate with clients running 0.3.X releases.\\n* Fixes for memory leaks.\\n* Performance improvements.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoKitSwift/0.4.0-alpha1/api-reference/","date_released":"2020-09-29T08:46:26.731Z"}},"DittoSyncKit":{"latest":{"description":"* `DITLogger` class added, which allows extra logging functionality through\\n  `setCustomLogCallback` and `setLogFile`/`setLogFileURL`.\\n* `CFBundleShortVersionString` in the framework\'s Info.plist now only contains\\n  alphanumeric characters, which should resolve any issues with submitting apps\\n  to TestFlight or the App Store.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.653Z"},"1.0.0-alpha1":{"description":"* Note that this is a release with breaking changes and clients using releases\\nin the 1.0 series will not be able to communicate with clients running a version\\nthat is anything less than 1.0. This should hopefully not be an issue because\\nthis release of the SDK has changed the name to be DittoSyncKit as opposed to\\nDittoKit.\\n* Lots of performance improvements and some bug fixes.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKit/1.0.0-alpha1/api-reference/","date_released":"2020-10-09T18:31:20.120Z"},"1.0.0-alpha3":{"description":"* Added new `observeWithNextSignal` API to allow the application to control the\\ndelivery of the next observe callback event.\\n* Fixed several issues related to attachments that could delay sync.\\n* Simplified log statements","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKit/1.0.0-alpha3/api-reference/","date_released":"2020-11-04T18:53:13.403Z"},"1.0.0-alpha4":{"description":"* Fix issue where attachments could stop being fetched incorrectly.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKit/1.0.0-alpha4/api-reference/","date_released":"2020-11-10T11:14:57.436Z"},"1.0.0-alpha5":{"description":"* Added a new intermediate security identity for a shared secret key. This is a simplistic authentication mode which is normally only suitable for private apps where all the users and devices are trusted.\\n* Fixed an issue that prevented Counter values from syncing correctly\\n* Renamed DittoAttachmentStatus to DittoAttachmentFetchEvent and subsequently Incomplete status to Progress.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKit/1.0.0-alpha5/api-reference/","date_released":"2020-11-22T20:57:11.310Z"},"1.0.0-alpha6":{"description":"* Performance and stability improvements.\\n* Fix default data insertion such that merge semantics are consistent and\\n  duplicate data isn\'t created.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKit/1.0.0-alpha6/api-reference/","date_released":"2020-12-15T01:00:39.147Z"},"1.0.0-alpha7":{"description":"* `DITLogger` class added, which allows extra logging functionality through\\n  `setCustomLogCallback` and `setLogFile`/`setLogFileURL`.\\n* `CFBundleShortVersionString` in the framework\'s Info.plist now only contains\\n  alphanumeric characters, which should resolve any issues with submitting apps\\n  to TestFlight or the App Store.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.653Z"}},"DittoSyncKitSwift":{"latest":{"description":"* `DittoLogger` class added, which allows extra logging functionality through\\n  `setCustomLogCallback` and `setLogFile`/`setLogFileURL`.\\n* `CFBundleShortVersionString` in the framework\'s Info.plist now only contains\\n  alphanumeric characters, which should resolve any issues with submitting apps\\n  to TestFlight or the App Store.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKitSwift/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"},"1.0.0-alpha1":{"description":"* Note that this is a release with breaking changes and clients using releases\\nin the 1.0 series will not be able to communicate with clients running a version\\nthat is anything less than 1.0. This should hopefully not be an issue because\\nthis release of the SDK has changed the name to be DittoSyncKitSwift as opposed\\nto DittoKitSwift.\\n* Lots of performance improvements and some bug fixes.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKitSwift/1.0.0-alpha1/api-reference/","date_released":"2020-10-09T20:22:39.894Z"},"1.0.0-alpha3":{"description":"* Added new `observeWithNextSignal` API to allow the application to control the\\ndelivery of the next observe callback event.\\n* Fixed several issues related to attachments that could delay sync.\\n* Simplified log statements","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKitSwift/1.0.0-alpha3/api-reference/","date_released":"2020-11-06T11:50:36.667Z"},"1.0.0-alpha4":{"description":"* Fix issue where attachments could stop being fetched incorrectly.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKitSwift/1.0.0-alpha4/api-reference/","date_released":"2020-11-10T11:27:15.848Z"},"1.0.0-alpha5":{"description":"* Added a new intermediate security identity for a shared secret key. This is a simplistic authentication mode which is normally only suitable for private apps where all the users and devices are trusted. \\n* Fixed an issue that prevented Counter values from syncing correctly\\n* Renamed DittoAttachmentStatus to DittoAttachmentFetchEvent and subsequently Incomplete status to Progre\\nss.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKitSwift/1.0.0-alpha5/api-reference/","date_released":"2020-11-22T21:17:53.361Z"},"1.0.0-alpha6":{"description":"* Performance and stability improvements.\\n* Fix default data insertion such that merge semantics are consistent and\\n  duplicate data isn\'t created.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKitSwift/1.0.0-alpha6/api-reference/","date_released":"2020-12-15T01:00:39.148Z"},"1.0.0-alpha7":{"description":"* `DittoLogger` class added, which allows extra logging functionality through\\n  `setCustomLogCallback` and `setLogFile`/`setLogFileURL`.\\n* `CFBundleShortVersionString` in the framework\'s Info.plist now only contains\\n  alphanumeric characters, which should resolve any issues with submitting apps\\n  to TestFlight or the App Store.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSyncKitSwift/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"}},"DittoObjC":{"1.0.0-alpha8":{"description":"* Site IDs, which make up part of a Ditto identity object, are now unsigned,\\n64-bit integers instead of unsigned 32-bit integers.\\n* Fix a crash that could occur if an offset with a value greater than the number\\nof matching documents was provided.\\n* Fix a potential crash that would occur if a live query had `stop` called on it\\nimmediately after it was created.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.0-alpha8/api-reference/","date_released":"2021-01-22T15:09:01.907Z"},"latest":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/4.0.1/api-reference/","date_released":"2023-04-06T18:54:11.831Z"},"1.0.0-alpha9":{"description":"* Fixed a bug where mDNS advertising may continue after Ditto is stopped.\\n* Fixed a hang that could occur creating an attachment fetcher while requesting many attachments at once.\\n* Fixed sync failure when there are multiple overlapping subscriptions or live queries with the same query string for the same collection.\\n* Fixed a potential crash and other sync failures that could occur under certain conditions.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.0-alpha9/api-reference/","date_released":"2021-02-05T00:58:10.294Z"},"1.0.0":{"description":"* This release is not compatible with any previous SDK releases. There are a\\nnumber of breaking changes both in terms of the SDK API and in terms of the\\ninternal systems used by the SDK to perform operations such as synchronization.\\nIf you have previously made use of the Ditto SDK and wish to update to this\\nversion then note that you will need to delete all existing Ditto data otherwise\\nyou will run into errors. If you have existing data that you need to keep then\\nplease contact us and we can advise you as to how you can migrate your data.\\n* The most notable API breaking changes are:\\n  * Document IDs are no longer restricted to just strings. You can now create\\n    a document ID that is a string, integer, boolean, array, map, or null. This\\n    means that when making `findByID` or `insert` calls you now need to provide\\n    a `DITDocumentID` object rather than a string. Similarly, when you access a\\n    document\'s ID it will now return a `DITDocumentID` object instead of a\\n    string.\\n  * The `start()` and `stop()` functions on the `Ditto` object have been renamed\\n    to `startSync()` and `stopSync()` respectively. They now also don\'t accept\\n    any arguments. If you wish to specify which transports you would like the\\n    Ditto SDK to make use of (along with any configuration that they might\\n    require) you now need to use the `setTransportConfig` function on the\\n    `Ditto` object, and pass to that a transport config object. The default\\n    transports that will be enabled are still the same as they were in previous\\n    releases of the SDK though, so if you have no custom requirements then you\\n    can simply change your `start()` call to `startSync()`.\\n* Lots of performance improvements and bug fixes.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.0/api-reference/","date_released":"2021-04-22T00:29:50.320Z"},"1.0.1":{"description":"* If you provide an invalid query then you will now get a better error message.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.1/api-reference/","date_released":"2021-05-04T16:02:44.151Z"},"1.0.2":{"description":"* Add support for subscripting `DITDocumentID`s in order to get nested values\\nwhen a document ID is based on an array or a dictionary.\\n* Deprecated `.toNative()` on `DITDocumentID`. You should use `.value`\\ninstead.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.2/api-reference/","date_released":"2021-05-20T21:39:10.588Z"},"1.0.3":{"description":"* Bluetooth sync performance improvements with L2CAP support added.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.3/api-reference/","date_released":"2021-06-10T16:34:52.104Z"},"1.0.4":{"description":"* Fix issue with AWDL transport where it could end up in a stuck state.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.4/api-reference/","date_released":"2021-06-11T22:36:42.265Z"},"1.0.5":{"description":"* Added a new `find` function that accepts a query containing placeholders in\\n  the form of `$args.my_arg` along with a map of query arguments in the form of\\n  `{ \\"my_arg\\": \\"some value\\" }`. The placeholders in the query will be replaced\\n  by a query-appropriate representation of the relevant value from the map of\\n  query arguments.\\n\\n  For example, a query of `color == $args.color` with a query arguments map of\\n  `{ \\"color\\": \\"red\\" }` would internally be treated as a query of:\\n  `color == \\"red\\"`.\\n* Added the ability to get a hash and/or a mnemonic (string) representation of\\n  the matching documents from a live query event. This means you can do\\n  something like this:\\n\\n  ```objc\\n  DITLiveQuery *liveQuery = [[collection findAll] observe:^(NSArray<DITDocument *> *docs, DITLiveQueryEvent *event)\\n      [event hash:docs]; // e.g. `1950015808188223905`\\n      [event hashMnemonic:docs]; // e.g. `locate-quality-tina--helena-remote-cat`\\n      // ...\\n  }];\\n  ```\\n* Fix for using floats in queries.\\n* Accessing the `store` property of a `Ditto` instance will no longer throw an\\n  error if you have not yet activated your `Ditto` instance with a valid license\\n  token.\\n* Deprecated `setAccessLicense` and added a new function, `setLicenseToken`,\\n  which will set an error out param if your provided license token is expired\\n  or invalid somehow.\\n* Deprecated `startSync` and added a new function, `tryStartSync`, which will\\n  set an error out param if your `Ditto` instance hasn\'t yet been activated via\\n  a successful call to `setLicenseToken`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.5/api-reference/","date_released":"2021-06-25T22:36:18.096Z"},"1.0.6":{"description":"* Add `value` accessor on `DITDocumentPath`, `DITMutableDocumentPath`, and\\n`DITDocumentIDPath` types to allow accessing a nested value in a document/ID as\\nan `id`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.6/api-reference/","date_released":"2021-07-08T18:22:41.808Z"},"1.0.7":{"description":"* Fix bug where sync may fail if an unusually long `deviceName` is configured\\n* Fix intermittent crash when Bluetooth L2CAP connections fail\\n* Fix intermittent crash when using the presence viewer component and the app is backgrounded","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.7/api-reference/","date_released":"2021-07-22T23:38:10.554Z"},"1.0.8":{"description":"* Improved debug logging.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"},"1.0.9":{"description":"* Added support for getting information about all of the collections that the device is aware of. This is achieved by accessing `collections()` through the store object and then using the same sort of API used when getting documents in collections, i.e. `exec/observe/etc`.\\n* Added multicast as a transport option to the `LAN` config part of `TransportConfig`.\\n* Added new identity types: `Online` and `OnlinePlayground.` An `Online` identity should be used when running Ditto in secure production mode, logging on to Ditto Cloud, or using an on-premises authentication server. User permissions are centrally managed. Sync will not work until a successful login has occurred. An `OnlinePlayground` identity should be used when you want to test a Ditto Cloud app without authentication (\\"Playground mode\\"). This mode offers no security and must only be used for development.\\n* The `Production` identity has been renamed to `Manual`.\\n* Added a `DITAuthenticator` type, accessible via the `Ditto` object, which allows you to perform login operations when you\'re using an `Online` identity.\\n* Similarly, added a `DITAuthenticationDelegate` type that needs to be used when using an `Online` identity.\\n* Report an error if more than one Ditto instance is started using the same working directory.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.9/api-reference/","date_released":"2021-09-03T22:38:24.690Z"},"1.0.10":{"description":"* Fix for incorrectly included header.\\n* Fix to stop a change in site ID from leading to an unnecessary error.\\n* Improve handling of persisted authentication data. Note that this might lead\\n  to a one-off change to a peer\'s site ID if you weren\'t and continue to not be\\n  specifying an explicit site ID when creating your identity.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.10/api-reference/","date_released":"2021-09-10T16:21:51.194Z"},"1.0.11":{"description":"- Fixed AWDL peers never re-connecting after transport is toggled.\\n- Fixed mDNS transport crash.\\n- Fixed sporadic hangs and crashes when using Online identity.\\n- Added `DITWriteStrategy` enum.\\n- Added methods `-[Collection insert:writeStrategy:error]` and `-[Collection insert:withID:writeStrategy:error]`, allowing to specify the behavior when inserting a document with an ID that matches the ID of a document already in the store.\\n- Added `isAuthenticated` and `userID` methods to `DITAuthenticator`.\\n- Deprecated `-[Collection insert:isDefault:error]` and `-[Collection insert:withID:isDefault:error]` in favor of write strategy variants.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.11/api-reference/","date_released":"2021-10-08T05:09:27.624Z"},"1.0.12":{"description":"- Added `global` section to `TransportConfig` allowing P2P sync to be contained within certain groups of devices by putting them in the same \\"sync group\\".","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.12/api-reference/","date_released":"2021-10-18T10:00:50.920Z"},"1.0.13":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.13/api-reference/","date_released":"2021-10-18T17:02:38.549Z"},"1.0.14":{"description":"* Add support for array projections to DittoQL.\\n* Deprecate the `Online` identity in favor of the new `OnlineWithAuthentication`\\n  identity.\\n* Deprecate the `Development` identity in favor of the new `OfflinePlayground`\\n  identity.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.14/api-reference/","date_released":"2021-10-25T08:31:34.910Z"},"1.0.15-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.15-alpha1/api-reference/","date_released":"2021-10-27T10:33:50.885Z"},"1.0.15":{"description":"* Ensure that when performing a `sort` that if a document that matches the\\n  filter specified via the accompanying `find` call doesn\'t have the key\\n  specified in the `sort` expression then it won\'t lead to an error. Now, if\\n  you\'re sorting in a descending order then the documents without the key\\n  specified in the `sort` will appear at the end of the set of results, after\\n  all of the documents that do have the key present. If you\'re sorting in an\\n  ascending order then the documents without the `sort` key will appear first in\\n  the set of documents, before all of the documents that do contain the `sort`\\n  key.\\n* Fix a bug where some transports related calls were not being run on the\\n  correct thread and so could lead to a crash.\\n* Add an extra initializer for `OnlinePlayground` identities: `initOnlinePlaygroundWithAppID:(NSString *)appID enableDittoCloudSync:(BOOL)enableDittoCloudSync`","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.15/api-reference/","date_released":"2021-11-05T22:03:49.597Z"},"1.0.16":{"description":"* Fix an issue with live queries that involved a limit, no offset, at least one\\n  document being deleted, and some other conditions being met. Live queries that\\n  met these conditions could report incorrect sets of matching documents.\\n* Fix an issue that could potentially lead to an infinite loop in the\\n  replication system, meaning no sync progress would be made.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.16/api-reference/","date_released":"2021-11-19T22:39:48.765Z"},"1.0.17":{"description":"* Fix an issue with write strategies not working correctly. Unexpected results\\n  could occur when performing sequences of operations on documents.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.17/api-reference/","date_released":"2021-11-26T00:11:42.917Z"},"1.0.18-alpha1":{"description":"* Fixed an issue where document IDs that were specified inside the document\'s\\n  value as opposed to being specified explicitly (as a separate argument to\\n  `insert`) weren\'t being processed correctly, potentially leading to bugs with\\n  merge and overwrite behaviors.\\n* macOS (including Apple Silicon) and iOS simulator (on an Apple Silicon device)\\n  support has been added.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.18-alpha1/api-reference/","date_released":"2021-12-08T17:25:36.987Z"},"1.0.18-alpha2":{"description":"* Improve attachment sync performance.\\n* Fix an issue where memory usage could grow very quickly when using a live\\n  query and performing lots of operations that led to a live query update.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.18-alpha2/api-reference/","date_released":"2021-12-14T16:32:13.955Z"},"1.0.18":{"description":"* Fixed some small memory leaks.\\n* Reduced the opportunity for rapid memory growth in some scenarios.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.18/api-reference/","date_released":"2021-12-20T13:22:16.631Z"},"1.0.19":{"description":"- Fixed: collections were not appearing in the data browser under certain permission configurations.\\n- Fixed: race condition when subscriptions were configured from multiple threads in parallel (sometimes leading to a crash).","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.0.19/api-reference/","date_released":"2021-12-23T20:42:05.709Z"},"1.1.0":{"description":"- Changed: improved peer-to-peer algorithms to create meshes that are more efficient and diverse.\\n- Changed: improved routing algorithms for more efficiency.\\n- Changed: improved performance of query parsing.\\n- Added: property `isSyncActive` to class `Ditto`.\\n- Added: methods `logout` and `logout:` to class `DITAuthenticator`.\\n- Added: set of APIs to observe authentication status, see (see API reference for `DITAuthenticator` and `DITAuthenticationDelegate`).\\n- Added: method `upsert:` & friends to classes `DITCollection` and `DITScopedWriteTransaction` (as a replacement for `insert:` & friends) which by default merges the newly inserted document if one with the same ID already exists.\\n- Deprecated: properties `isAuthenticated` and `userID` of class `DITAuthenticator` in favor of newly introduced property `status`.\\n- Deprecated: methods `insert:` & frinds of classes `DITCollection` and `DITScopedWriteTransaction` in favor of newly introduced `upsert:` & friends.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.0/api-reference/","date_released":"2022-01-28T11:21:11.092Z"},"1.1.1":{"description":"- Changed: Optimized the performance of accessing the value of a `Document`\\n- Added: Experimental Bus API\\n  - Changed: `DITBus.delegate` property is now weak\\n  - Added: `-sendSingleUnreliableMessage:toAddress:completion:` method to `DITBus` class\\n  - Added: `-sendSingleReliableMessage:toAddress:completion:` method to `DITBus` class\\n  - Added: `-openStreamToAddress:reliability:completion:` method to `DITBus` class\\n  - Added: `-ditBus:didReceiveSingleMessage:` method to `DITBusDelegate` protocol\\n  - Added: `-ditBus:didReceiveIncomingStream:fromPeer:` method to `DITBusDelegate` protocol\\n  - Removed: `-ditBus:didReceiveMessage:` method from `DITBusDelegate` protocol\\n  - Added: `DITBusStream` class\\n  - Added: `DITBusStreamDelegate` protocol\\n- Added: Experimental mesh roles API\\n  - Added: `-setMeshRole(meshRole:ditto:)` method to `DITExperimental` class\\n  - Added: `-setPriorityForMeshRole(_:forMeshRole:ditto:)` to `DITExperimental` class\\n- Fixed: Improved AWDL reliability on iOS 12","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.1/api-reference/","date_released":"2022-02-12T05:38:19.843Z"},"1.1.2":{"description":"- Added: property `isReady` to experimental `DITBusStream` to check if a message may be enqueued.\\n- Added: method `setOfflineOnlyLicenseToken:error:` to class `DITDitto` as replacement for now deprecated `setLicenseToken:error:`.\\n- Deprecated: method `setLicenseToken:error:` of class `DITDitto`, please use newly added `setOfflineOnlyLicenseToken:error:` instead.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.2/api-reference/","date_released":"2022-02-28T14:36:18.965Z"},"1.1.3":{"description":"- Added: `DittoOnlinePlaygroundV2Identity` identity type and corresponding initializers for `DITIdentity` (`initOnlinePlaygroundV2WithAppID:...`) allowing for basic authentication for playgrounds\\n\\n- Deprecated: `DittoOnlinePlaygroundIdentity` identity type and corresponding initializers, use newly added `DittoOnlinePlaygroundV2Identity` instead\\n\\n- Fixed: document IDs are now validated when synced and removed if invalid (some of our early versions of the SDK stored malformed IDs under certain circumstances)","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.3/api-reference/","date_released":"2022-03-22T10:13:57.387Z"},"1.1.4":{"description":"- Changed: improved replication performance in some scenarios.\\n- Fixed: a document containing untrusted strings could be incorrectly decoded by the Objective-C SDK.\\n- Fixed: some integers were being incorrectly encoded.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.4/api-reference/","date_released":"2022-04-08T06:25:26.109Z"},"1.1.5":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.5/api-reference/","date_released":"2022-04-08T08:00:56.518Z"},"1.1.6":{"description":"- Fixed: a correctness issue in replication when peer permissions changed in the middle of a replication exchange.\\n- Fixed: error when querying a collection and there was a type mismatch for a field being used in a comparison in the query. \\n- Fixed: restarting an app too quickly could lead to multiple connection attempts to rejoin peers in the mesh.\\n- Fixed: apps using `OnlinePlaygroundV2` identities could experience a one minute delay before peer-to-peer sync occurs.\\n- Fixed: cloud sync would stop working when setting a newly created transport config.\\n- Changed: improvements to Ditto mesh performance via fastest-available-transport prioritization.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.6/api-reference/","date_released":"2022-05-09T12:04:39.208Z"},"1.1.7":{"description":"* Synchronized version bump release.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.7/api-reference/","date_released":"2022-05-13T14:18:18.404Z"},"1.1.8":{"description":"- Synchronized version bump release.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.8/api-reference/","date_released":"2022-06-03T07:13:20.809Z"},"1.1.9-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.9-alpha1/api-reference/","date_released":"2022-06-09T03:12:41.863Z"},"1.1.9":{"description":"- Changed: reduced CRDT memory overhead.\\n\\n- Changed: HTTP/WebSocket service now allows any origin for CORS, so it may be used from a webapp on localhost.\\n\\n- Fixed: a peer using an online identity would fail to sync peer-to-peer after app restarts.\\n\\n- Fixed: `DITDittoDelegate` method `ditto:identityProviderAuthenticationRequest:` would receive a `DITAuthenticationRequest` with some properties being incorrectly set to `nil`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.9/api-reference/","date_released":"2022-06-16T01:27:09.701Z"},"1.1.10":{"description":"* Changed: reduced total memory overhead during sync.\\n* Fixed: private class inside the Ditto SDK was named CBOR and conflicted with a\\n  private Apple class named exactly the same, which produced a warning at launch\\n  time.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.10/api-reference/","date_released":"2022-07-07T19:53:12.941Z"},"2.0.0-alpha1":{"description":"This is a preview release of Ditto v2. Full changelog will be provided with the official release.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/2.0.0-alpha1/api-reference/","date_released":"2022-07-20T11:55:36.277Z"},"2.0.0":{"description":"- Note: peers running `2.0.0` are able to sync with peers running at least version `1.1.8` of the SDK.\\n- Added: support for explicitly typing values as registers. This is via 2 new types: `DITRegister` and `DITMutableRegister`, and new `lwwRegister` value accessors added to `DITDocumentPath` and `DITMutableDocumentPath`.\\n- Added: `DITCounter` and `DITMutableCounter` types resembling the CRDT type underneath, which replace the old counter mechanics. A new `counter` value accessor has been added to `DITDocumentPath` and `DITMutableDocumentPath`, which returns a `DITCounter` or a `DITMutableCounter` respectively, if one is present at the document path specified.\\n- Added: support for accessing and creating RGAs (Replicated Growable Arrays), which was the default CRDT type for arrays in Ditto v1. There are 2 new types: `DITRGA` and `DITMutableRGA` in v2, and new `rga` value accessors added to `DITDocumentPath` and `DITMutableDocumentPath`. Note that these are deprecated though and arrays should instead be used in registers (which is now the default).\\n- Changed: arrays now default to being `Register` arrays. This means that when you want to update a property in a document that\'s an array you need to set the whole value as the new array. You can\'t perform mutating operations on an array in a document other than to fully replace it.\\n- Added: value accessor properties have been added to `DITDocumentID`: `value`, `string{Value}`, `boolValue`, `integer{Value}`, `number{Value}`, `array{Value}`, `dictionary{Value}`.\\n- Added: `DITIdentity` method variants `initSharedKey:...` without the `siteID` parameter, leaving this up to Ditto to generate.\\n- Changed: `DittoSignalNextBlock` has been renamed to `DITSignalNextBlock`.\\n- Changed: the keys `DittoAccessLicense` and `DittoLicenseToken` in `Info.plist` will now throw an exception instead of logging a deprecation warning. Please use the key `DittoOfflineOnlyLicenseToken` instead.\\n- Changed: renamed identity type `DittoOnlinePlaygroundV2Identity` to just `DittoOnlinePlaygroundIdentity`, including the corresponding `DITIdentity` initializers. This replaces the previously deprecated identity of type `DittoOnlinePlaygroundIdentity`, including he corresponding `DITIdentity` initializers.\\n- Changed: renamed method `DITDitto` method `tryStartSync:` to just `startSync:` which replaces the previously deprecated `DITDitto` method `startSync`.\\n- Removed: deprecated `DITRemotePeerV2` property `meshRole`, please use `queryOverlapGroup` instead.\\n- Removed: deprecated `DITDocumentID` method `toNative`, please use `value` instead.\\n- Removed: all deprecated variants of `DITScopedWriteTransaction` method `insert:...`, please use the corresponding `upsert:...` variants instead.\\n- Removed: all deprecated variants of `DITCollection` method `insert:...`, please use the corresponding `upsert:...` variants instead.\\n- Removed: deprecated identities of type `DittoDevelopment-` and `-OnlineIdentity`, including the corresponding `DITIdentity` initializers. Please use the available ones instead.\\n- Removed: deprecated `DITDitto` methods `setAccessLicense:` and `setLicenseToken:error:`, please use `setOfflineOnlyLicenseToken:error:` instead.\\n- Removed: deprecated `DITDitto` getter `activated`, please use the `activated` property, or the `isActivated` getter instead.\\n- Removed: deprecated `DITAuthenticator` properties `isAuthenticated` and `userID`, please use `status` instead.\\n- Removed: `DITWriteStrategyOverwrite`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/2.0.0/api-reference/","date_released":"2022-08-03T14:54:09.474Z"},"2.0.1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/2.0.1/api-reference/","date_released":"2022-08-14T04:57:21.614Z"},"2.0.2":{"description":"- Added: method `-[DITSubscription cancel]` allowing explicit cancelling of a subscription.\\n- Fixed: memory leak, observer objects returned by `-[DITAuthenticator observeStatus]` were never deallocated.\\n- Changed: performing an `-exec` call, outside the scope of a `[store write:^{ }]` block, no longer tries to obtain a write transaction and instead uses a read transaction.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/2.0.2/api-reference/","date_released":"2022-08-27T01:58:42.458Z"},"2.0.3":{"description":"- Fixed: rare crash due to a race condition within Ditto\'s Bluetooth subsystem.\\n- Changed: presence data is no longer synced with the big peer.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/2.0.3/api-reference/","date_released":"2022-08-31T17:20:10.069Z"},"2.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/2.0.4/api-reference/","date_released":"2022-09-01T18:31:12.160Z"},"2.0.5":{"description":"- Fixed: a very rare deadlock when starting sync immediately after creating the Ditto instance.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/2.0.5/api-reference/","date_released":"2022-09-08T22:20:09.223Z"},"1.1.11":{"description":"* Synchronized version bump release.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/1.1.11/api-reference/","date_released":"2022-09-09T23:11:14.191Z"},"2.0.6":{"description":"- Fixed: Ensure Ditto internal auth client is shut down correctly when it\'s no longer needed","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/2.0.6/api-reference/","date_released":"2022-09-15T23:46:31.616Z"},"2.0.7":{"description":"- Changed: New lock file ensures we have only 1 SDK instance per working dir\\n- Removed: Bitcode is no longer embedded in the Ditto SDK as use of this technology has been deprecated by Apple.\\n- Fixed: Reduced the amount of disk space used by sync metadata by up to 50% in some cases","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/2.0.7/api-reference/","date_released":"2022-09-23T03:02:34.819Z"},"2.0.8":{"description":"- Added: `appID` property to `DITDitto` class\\n- Added: `persistenceDirectory` property to `DITDitto` class\\n- Fixed: Errors using `DittoSwift` package as a dependency from another Swift package\\n- Fixed: Symlinks in macOS xcframework are now preserved","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/2.0.8/api-reference/","date_released":"2022-10-28T00:14:53.150Z"},"2.1.0":{"description":"- Deprecated: `-observe:`, `-observeWithDeliveryQueue:eventHandler:`, `-observeWithNextSignal:` and `-observeWithNextSignalAndDeliveryQueue:eventHandler:` methods of `DITPendingCollectionsOperation`, `DITPendingCursorOperation` and `DITPendingIDSpecificOperation`. Please use the corresponding `-observeLocal:`, `-observeLocalWithDeliveryQueue:eventHandler:`, `-observeLocalWithNextSignal:` and `-observeLocalWithNextSignalAndDeliveryQueue:eventHandler:` variants along with a separate call to `-subscribe` instead. See https://docs.ditto.live/ios/common/concepts/syncing-data#subscribe","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/2.1.0/api-reference/","date_released":"2022-11-02T23:51:32.168Z"},"3.0.0-alpha1":{"description":"- Removed: the `DITRGA` constructor. You cannot create new RGAs.\\n- Removed: the deprecated `DITMutableRGA` type. You cannot mutate existing RGAs.\\n- Removed: `-observe:`, `-observeWithDeliveryQueue:eventHandler:`, `-observeWithNextSignal:` and `-observeWithNextSignalAndDeliveryQueue:eventHandler:` methods of `DITPendingCollectionsOperation`, `DITPendingCursorOperation`, and `DITPendingIDSpecificOperation`. Please use the corresponding `-observeLocal:`, `-observeLocalWithDeliveryQueue:eventHandler:`, `-observeLocalWithNextSignal:` and `-observeLocalWithNextSignalAndDeliveryQueue:eventHandler:` variants along with a separate call to `-subscribe` instead. See https://docs.ditto.live/ios/common/concepts/syncing-data#subscribe\\n- Added: class `DITPresence` as entry point for all of presence functionality, accessible via the newly introduced `presence` property on the `DITDitto` object.\\n- Added: property `presence` of type `DITPresence` to `DITDitto` providing access to all of presence functionality.\\n- Added: class `DITPresenceGraph` and related classes `DITAddress`, `DITConnection`, `DITConnectionType`, and `DITPeer`.\\n- Deprecated: `observePeersV1:` and `observePeersV2:` methods of `DITDitto`, please use `observe:` of `DITPresence` instead (accessible via newly introduced `presence` property of `DITDitto`).\\n- Deprecated: `DITRemotePeer`, replaced by `DITPeer`.\\n- Deprecated: `DITPeersObserver`, replaced by `DITObserver` protocol.\\n- Deprecated: `DITPeersObserverV2`, replaced by `DITObserver` protocol.\\n- Removed: all `persistenceDirectory` arguments from all of the identity type constructors.\\n- Changed: performance improvements.\\n- Added `disableSyncWithV2` method to `Ditto`. This allows you to explicitly opt-in to disabling the ability to sync with Ditto peers running any version of the SDK in the v2 series of releases. Assuming this succeeds then this peer will only be able to sync with other peers using SDKs in the v3 series of releases. Note that this disabling of sync spreads to peers that sync with a peer that has disabled, or has (transitively) had disabled, syncing with v2 SDK peers.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/3.0.0-alpha1/api-reference/","date_released":"2022-12-01T20:01:08.477Z"},"3.0.0-alpha2":{"description":"-Fixed: Incorrect import of `DITAddress.h` header.\\n- Improved: reliability if app crashes occur while persisting authentication data.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/3.0.0-alpha2/api-reference/","date_released":"2022-12-06T16:01:43.032Z"},"3.0.0-alpha3":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/3.0.0-alpha3/api-reference/","date_released":"2022-12-12T13:19:14.642Z"},"3.0.0":{"description":"- Removed: the `DITRGA` constructor. You cannot create new RGAs.\\n- Removed: the deprecated `DITMutableRGA` type. You cannot mutate existing RGAs.\\n- Removed: `-observe:`, `-observeWithDeliveryQueue:eventHandler:`, `-observeWithNextSignal:` and `-observeWithNextSignalAndDeliveryQueue:eventHandler:` methods of `DITPendingCollectionsOperation`, `DITPendingCursorOperation`, and `DITPendingIDSpecificOperation`. Please use the corresponding `-observeLocal:`, `-observeLocalWithDeliveryQueue:eventHandler:`, `-observeLocalWithNextSignal:` and `-observeLocalWithNextSignalAndDeliveryQueue:eventHandler:` variants along with a separate call to `-subscribe` instead. See https://docs.ditto.live/ios/common/concepts/syncing-data#subscribe\\n- Added: class `DITPresence` as entry point for all of presence functionality, accessible via the newly introduced `presence` property on the `DITDitto` object.\\n- Added: property `presence` of type `DITPresence` to `DITDitto` providing access to all of presence functionality.\\n- Added: class `DITPresenceGraph` and related classes `DITAddress`, `DITConnection`, `DITConnectionType`, and `DITPeer`.\\n- Deprecated: `observePeersV1:` and `observePeersV2:` methods of `DITDitto`, please use `observe:` of `DITPresence` instead (accessible via newly introduced `presence` property of `DITDitto`).\\n- Deprecated: `DITRemotePeer`, replaced by `DITPeer`.\\n- Deprecated: `DITPeersObserver`, replaced by `DITObserver` protocol.\\n- Deprecated: `DITPeersObserverV2`, replaced by `DITObserver` protocol.\\n- Removed: all `persistenceDirectory` arguments from all of the identity type constructors.\\n- Changed: performance improvements.\\n- Added: `disableSyncWithV2` method to `Ditto`. This allows you to explicitly opt-in to disabling the ability to sync with Ditto peers running any version of the SDK in the v2 series of releases. Assuming this succeeds then this peer will only be able to sync with other peers using SDKs in the v3 series of releases. Note that this disabling of sync spreads to peers that sync with a peer that has disabled, or has (transitively) had disabled, syncing with v2 SDK peers.\\n- Improved: reliability if app crashes occur while persisting authentication data.\\n- Improved: log increased detail to help debug blocked write transactions.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/3.0.0/api-reference/","date_released":"2022-12-16T13:38:16.055Z"},"3.0.1":{"description":"- Added: `DITDiskUsage` class which can be used to monitor disk usage.\\n- Added: `diskUsage` property to `DITDitto` class for access to a `DITDiskUsage` instance.\\n- Added: `DITDiskUsageItem` class which contains data about the space used by files in the Ditto working directory.\\n- Added: `routingHint` property to `DITGlobalConfig` class.\\n- Added: `-initWithSyncGroup:routingHint:` initializer to `DITGlobalConfig` class.\\n- Added: `NO_PREFERRED_ROUTE_HINT` constant, used internally by `DITGlobalConfig` if no routing hint is specified.\\n- Changed: better readability of data sizes and durations in logs.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/3.0.1/api-reference/","date_released":"2023-01-14T02:57:17.845Z"},"4.0.0-alpha2":{"description":"* Added: `disableSyncWithV3` functionality to `DITDitto`. Calling this will permanently remove the ability for the device that it is called on to sync with devices running v3 of the SDK. It also means that the device will then start performing AddWins removes when calling `remove()`. Any other device running v4 of the SDK that syncs with a device that has called `disableSyncWithV3` (or has themselves synced with another device that has called `disableSyncWithV3`, etc - if any chain of syncing exists that involves a device that has called `disableSyncWithV3`) will also no longer be able to sync with v3 peers and will perform AddWins removes when calling `remove()`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/4.0.0-alpha2/api-reference/","date_released":"2023-01-16T22:16:17.834Z"},"3.0.2":{"description":"* Synchronized version bump release.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/3.0.2/api-reference/","date_released":"2023-01-20T21:20:59.565Z"},"3.0.3-alpha2":{"description":"- Resolved an issue where presence evictions could deadlock on startup with large numbers of peers","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/3.0.3-alpha2/api-reference/","date_released":"2023-01-23T18:05:04.218Z"},"3.0.3":{"description":"- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/3.0.3/api-reference/","date_released":"2023-01-26T14:35:21.148Z"},"4.0.0-beta1":{"description":"- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.\\n- Fixed: an issue preventing clean Ditto shutdown.\\n- Fixed: AddWins removes will now be used if `disableSyncWithV3` has been called on the `Ditto` object or the a peer has synced with another peer that has called `disableSyncWithV3`, or they have synced with another peer that has called `disableSyncWithV3`, etc.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/4.0.0-beta1/api-reference/","date_released":"2023-01-26T23:37:37.230Z"},"3.0.4":{"description":"- Added: `-evictWithLogHint:` method to `DITPendingIDSpecificOperation`, allowing for a custom message to be added to write transaction hints\\n- Added: `-removeWithLogHint:` method to `DITPendingIDSpecificOperation`, allowing for a custom message to be added to write transaction hints\\n- Added: `-writeWithLogHint:block:` method to `DITStore`, allowing for a custom message to be added to write transaction hints\\n- Changed: Slow or blocked write transactions now log hints showing the waiting and blocking transactions","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/3.0.4/api-reference/","date_released":"2023-01-28T00:10:06.406Z"},"3.0.5":{"description":"- Changed: some threads spawned by the SDK no longer wait up to 30 seconds before being stopped.\\n- Changed: added more logging when a peer is unable to connect to another peer because of no overlapping supported protocol versions.\\n- Fixed: replication hanging under some circumstances, especially WebSocket connections to Big Peer\\n- Fixed: retrieving `NSData` value at a specific key-path for a document could return a base64 string in certain edge cases.\\n- Fixed: cancelling subscriptions for queries with args would not work, the subscription would remain active indefinitely.\\n- Fixed: some memory leaks.\\n- Fixed: using the `DittoBus` no longer leads to `Ditto` instances not being deallocated properly.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/3.0.5/api-reference/","date_released":"2023-03-01T05:31:26.128Z"},"3.0.6":{"description":"- Fixed: Issue where Ditto instance using `OnlinePlayground` identity doesn\'t shut down properly\\n- Fixed: Potential crash on Windows and Linux from invoking `startSync()` if LAN transport is enabled.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/3.0.6/api-reference/","date_released":"2023-03-16T01:00:24.189Z"},"4.0.0":{"description":"- Added: AddWins removes will now be used if `disableSyncWithV3` has been called on the `Ditto` object or the a peer has synced with another peer that has called `disableSyncWithV3`, or they have synced with another peer that has called `disableSyncWithV3`, etc.\\n- Changed: If a problem occurs with an app\'s authentication webhook, the Small Peer that is trying to authenticate will log more detailed information for the developer.\\n- Changed: old multi-hop connections are now automatically disconnected when direct connections are established with peers, freeing up unneeded resources faster.\\n- Changed: reduced severity level for some routine log statements which were previously emitted at a WARN level.\\n- Deprecated: the DittoObjC SDK has been deprecated as of March 1st, 2023. DittoSwift is our sole SDK for Apple platforms going forward. If an Objective-C SDK is a hard requirement for you, please let us know.\\n- Fixed: some threads spawned by the SDK no longer wait up to 30 seconds before being stopped.\\n- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.\\n- Fixed: replication hanging under some circumstances, especially WebSocket connections to Big Peer\\n- Fixed: a possible crash if Ditto is configured with an invalid App ID. An error message is emitted instead.\\n- Fixed: an issue preventing clean Ditto shutdown.\\n- Fixed: cancelling subscriptions for queries with args would not work, the subscription would remain active indefinitely.\\n- Fixed: some memory leaks.\\n- Fixed: using the\xa0`DITBus`\xa0no longer leads to\xa0`DITDitto`\xa0instances not being deallocated properly.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/4.0.0/api-reference/","date_released":"2023-03-22T22:48:53.413Z"},"4.0.1":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/4.0.1/api-reference/","date_released":"2023-04-06T18:54:11.831Z"},"3.0.7":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoObjC/3.0.7/api-reference/","date_released":"2023-04-07T16:28:10.248Z"}},"DittoSwift":{"1.0.0-alpha8":{"description":"* Site IDs, which make up part of a Ditto identity object, are now unsigned,\\n64-bit integers instead of unsigned 32-bit integers.\\n* Fix a crash that could occur if an offset with a value greater than the number\\nof matching documents was provided.\\n* Fix a potential crash that would occur if a live query had `stop` called on it\\nimmediately after it was created.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.0-alpha8/api-reference/","date_released":"2021-01-22T15:09:01.907Z"},"latest":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/4.0.1/api-reference/","date_released":"2023-04-06T18:54:11.831Z"},"1.0.0-alpha9":{"description":"* Fixed a bug where mDNS advertising may continue after Ditto is stopped.\\n* Fixed a hang that could occur creating an attachment fetcher while requesting many attachments at once.\\n* Fixed sync failure when there are multiple overlapping subscriptions or live queries with the same query string for the same collection.\\n* Fixed a potential crash and other sync failures that could occur under certain conditions.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.0-alpha9/api-reference/","date_released":"2021-02-05T00:58:10.294Z"},"1.0.0":{"description":"* This release is not compatible with any previous SDK releases. There are a\\nnumber of breaking changes both in terms of the SDK API and in terms of the\\ninternal systems used by the SDK to perform operations such as synchronization.\\nIf you have previously made use of the Ditto SDK and wish to update to this\\nversion then note that you will need to delete all existing Ditto data otherwise\\nyou will run into errors. If you have existing data that you need to keep then\\nplease contact us and we can advise you as to how you can migrate your data.\\n* The most notable API breaking changes are:\\n  * Document IDs are no longer restricted to just strings. You can now create\\n    a document ID that is a string, integer, boolean, array, map, or null. This\\n    means that when making `findByID` or `insert` calls you now need to provide\\n    a `DittoDocumentID` object rather than a string. Similarly, when you access\\n    a document\'s ID it will now return a `DittoDocumentID` object instead of a\\n    string.\\n  * The `start()` and `stop()` functions on the `Ditto` object have been renamed\\n    to `startSync()` and `stopSync()` respectively. They now also don\'t accept\\n    any arguments. If you wish to specify which transports you would like the\\n    Ditto SDK to make use of (along with any configuration that they might\\n    require) you now need to use the `setTransportConfig` function on the\\n    `Ditto` object, and pass to that a transport config object. The default\\n    transports that will be enabled are still the same as they were in previous\\n    releases of the SDK though, so if you have no custom requirements then you\\n    can simply change your `start()` call to `startSync()`.\\n* Lots of performance improvements and bug fixes.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.0/api-reference/","date_released":"2021-04-22T00:29:50.320Z"},"1.0.1":{"description":"* If you provide an invalid query then you will now get a better error message.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.1/api-reference/","date_released":"2021-05-04T16:02:44.151Z"},"1.0.2":{"description":"* Add support for subscripting `DittoDocumentID`s in order to get nested values\\nwhen a document ID is based on an array or a dictionary.\\n* Deprecated `.toNative()` on `DittoDocumentID`. You should use `.value`\\ninstead.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.2/api-reference/","date_released":"2021-05-20T21:39:10.588Z"},"1.0.3":{"description":"* Bluetooth sync performance improvements with L2CAP support added.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.3/api-reference/","date_released":"2021-06-10T16:34:52.104Z"},"1.0.4":{"description":"* Fix issue with AWDL transport where it could end up in a stuck state.\\n* Deprecate the `find(query:)` function on `DittoScopedWriteTransaction` and add\\n  a new version of `find(:)` that doesn\'t require the `query` argument label.\\n  This makes this consistent with the `find(:)` function on `DittoCollection`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.4/api-reference/","date_released":"2021-06-11T22:36:42.265Z"},"1.0.5":{"description":"* Added a new `find` function that accepts a query containing placeholders in\\n  the form of `$args.my_arg` along with a map of query arguments in the form of\\n  `{ \\"my_arg\\": \\"some value\\" }`. The placeholders in the query will be replaced\\n  by a query-appropriate representation of the relevant value from the map of\\n  query arguments.\\n\\n  For example, a query of `color == $args.color` with a query arguments map of\\n  `{ \\"color\\": \\"red\\" }` would internally be treated as a query of:\\n  `color == \\"red\\"`.\\n* Added the ability to get a hash and/or a mnemonic (string) representation of\\n  the matching documents from a live query event. This means you can do\\n  something like this:\\n\\n  ```swift\\n  let liveQuery = collection.findAll().observe() { docs, event in\\n      event.hash(docs); // e.g. `1950015808188223905`\\n      event.hashMnemonic(docs); // e.g. `locate-quality-tina--helena-remote-cat`\\n      // ...\\n  }\\n  ```\\n* Fix for using floats in queries.\\n* Accessing the `store` property of a `Ditto` instance will no longer throw an\\n  error if you have not yet activated your `Ditto` instance with a valid license\\n  token.\\n* Deprecated `setAccessLicense` and added a new function, `setLicenseToken`,\\n  which will throw an appropriate error if your provided license token is\\n  expired or invalid somehow.\\n* Deprecated `startSync` and added a new function, `tryStartSync`, which will\\n  throw an error if your `Ditto` instance hasn\'t yet been activated via a\\n  successful call to `setLicenseToken`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.5/api-reference/","date_released":"2021-06-25T22:36:18.096Z"},"1.0.6":{"description":"* Add `value` accessor on `DittoDocumentPath`, `DittoMutableDocumentPath`, and\\n`DittoDocumentIDPath` types to allow accessing a nested value in a document/ID\\nas an `Any?`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.6/api-reference/","date_released":"2021-07-08T18:22:41.809Z"},"1.0.7":{"description":"* Fix bug where sync may fail if an unusually long `deviceName` is configured\\n* Fix intermittent crash when Bluetooth L2CAP connections fail\\n* Fix intermittent crash when using the presence viewer component and the app is backgrounded","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.7/api-reference/","date_released":"2021-07-22T23:38:10.554Z"},"1.0.8":{"description":"* Improved debug logging.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"},"1.0.9":{"description":"* Added support for getting information about all of the collections that the device is aware of. This is achieved by accessing `collections()` through the store object and then using the same sort of API used when getting documents in collections, i.e. `exec/observe/etc`.\\n* Added multicast as a transport option to the `LAN` config part of `TransportConfig`.\\n* Added new identity types: `Online` and `OnlinePlayground.` An `Online` identity should be used when running Ditto in secure production mode, logging on to Ditto Cloud, or using an on-premises authentication server. User permissions are centrally managed. Sync will not work until a successful login has occurred. An `OnlinePlayground` identity should be used when you want to test a Ditto Cloud app without authentication (\\"Playground mode\\"). This mode offers no security and must only be used for development.\\n* The `Production` identity has been renamed to `Manual`.\\n* Added a `DittoAuthenticator` type, accessible via the `Ditto` object, which allows you to perform login operations when you\'re using an `Online` identity.\\n* Similarly, added an `DittoAuthenticationDelegate` type that needs to be used when using an `Online` identity.\\n* Report an error if more than one Ditto instance is started using the same working directory.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.9/api-reference/","date_released":"2021-09-03T22:38:24.690Z"},"1.0.10":{"description":"* Fix to stop a change in site ID from leading to an unnecessary error.\\n* Improve handling of persisted authentication data. Note that this might lead\\n  to a one-off change to a peer\'s site ID if you weren\'t and continue to not be\\n  specifying an explicit site ID when creating your identity.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.10/api-reference/","date_released":"2021-09-10T16:21:51.194Z"},"1.0.11":{"description":"- Added `DittoWriteStrategy` enum.\\n- Added method `insertWithStrategy()` to `DittoCollection`, allowing to specify the behavior when inserting a document with an ID that matches the ID of a document already in the store.\\n- Fixed AWDL peers never re-connecting after transport is toggled.\\n- Fixed mDNS transport crash.\\n- Fixed sporadic hangs and crashes when using Online identity.\\n- Added `isAuthenticated()` method and `userID` property to `DittoAuthenticator`.\\n- Fixed Codable support for non-string IDs and `Float` and `Double` types.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.11/api-reference/","date_released":"2021-10-08T05:09:27.624Z"},"1.0.12":{"description":"- Added `global` section to `TransportConfig` allowing P2P sync to be contained within certain groups of devices by putting them in the same \\"sync group\\".\\n- Fixed Xcode warning regarding .swiftsourceinfo files being present.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.12/api-reference/","date_released":"2021-10-18T10:00:50.921Z"},"1.0.13":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.13/api-reference/","date_released":"2021-10-18T17:02:38.549Z"},"1.0.14":{"description":"* Add support for array projections to DittoQL.\\n* Deprecate the `online` identity in favor of the new `onlineWithAuthentication`\\n  identity.\\n* Deprecate the `development` identity in favor of the new `offlinePlayground`\\n  identity.\\n* Add an `auth` property to `Ditto` that provides access to a\\n  `DittoAuthenticator` when using an appropriate identity with your `Ditto`\\n  instance.\\n* Add support for using a document ID that is an object that conforms to\\n  `Codable`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.14/api-reference/","date_released":"2021-10-25T08:31:34.911Z"},"1.0.15-alpha1":{"description":"* Fix a bug where large integers (greater than `Int.max`) would mistakenly try\\n  to get internally represented by an `Int`. They are now correctly represented\\n  using a `UInt` instead.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.15-alpha1/api-reference/","date_released":"2021-10-27T10:33:50.885Z"},"1.0.15":{"description":"* Ensure that when performing a `sort` that if a document that matches the\\n  filter specified via the accompanying `find` call doesn\'t have the key\\n  specified in the `sort` expression then it won\'t lead to an error. Now, if\\n  you\'re sorting in a descending order then the documents without the key\\n  specified in the `sort` will appear at the end of the set of results, after\\n  all of the documents that do have the key present. If you\'re sorting in an\\n  ascending order then the documents without the `sort` key will appear first in\\n  the set of documents, before all of the documents that do contain the `sort`\\n  key.\\n* Fixed handling of large integers in documents. Integers larger than `Int.max`\\n  were still trying to be handled as `Int`s, leading to crashes. We now\\n  correctly handle them as `UInt`s when appropriate.\\n* Add the ability to directly set values inside the closure passed to an\\n  `update` call with assignments done via `=` sets, e.g.\\n  `collection.findByID(\\"123\\").update { $0![\\"color\\"] = \\"white\\" }`\\n* Fix a bug where some transports related calls were not being run on the\\n  correct thread and so could lead to a crash.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.15/api-reference/","date_released":"2021-11-05T22:03:49.597Z"},"1.0.16":{"description":"* Fix an issue with live queries that involved a limit, no offset, at least one\\n  document being deleted, and some other conditions being met. Live queries that\\n  met these conditions could report incorrect sets of matching documents.\\n* Fix an issue that could potentially lead to an infinite loop in the\\n  replication system, meaning no sync progress would be made.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.16/api-reference/","date_released":"2021-11-19T22:39:48.765Z"},"1.0.17":{"description":"* Fix an issue with write strategies not working correctly. Unexpected results\\n  could occur when performing sequences of operations on documents.\\n* Fix a bug with `Codable`-conforming enums that was causing a runtime error.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.17/api-reference/","date_released":"2021-11-26T00:11:42.917Z"},"1.0.18-alpha1":{"description":"* Fixed an issue where document IDs that were specified inside the document\'s\\n  value as opposed to being specified explicitly (as a separate argument to\\n  `insert`) weren\'t being processed correctly, potentially leading to bugs with\\n  merge and overwrite behaviors.\\n* macOS (including Apple Silicon) and iOS simulator (on an Apple Silicon device)\\n  support has been added.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.18-alpha1/api-reference/","date_released":"2021-12-08T17:25:36.987Z"},"1.0.18-alpha2":{"description":"* Improve attachment sync performance.\\n* Fix an issue where memory usage could grow very quickly when using a live\\n  query and performing lots of operations that led to a live query update.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.18-alpha2/api-reference/","date_released":"2021-12-14T16:32:13.955Z"},"1.0.18":{"description":"* Fixed a number of `Codable`-related bugs. One of the more notable fixes\\n  involves `Codable`-conforming types from `Foundation` now working as you\'d\\n  expect.\\n* Fixed some small memory leaks.\\n* Reduced the opportunity for rapid memory growth in some scenarios.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.18/api-reference/","date_released":"2021-12-20T13:22:16.631Z"},"1.0.19":{"description":"- Fixed: collections were not appearing in the data browser under certain permission configurations.\\n- Fixed: race condition when subscriptions were configured from multiple threads in parallel (sometimes leading to a crash).","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.0.19/api-reference/","date_released":"2021-12-23T20:42:05.710Z"},"1.1.0":{"description":"- Changed: improved peer-to-peer algorithms to create meshes that are more efficient and diverse.\\n- Changed: improved routing algorithms for more efficiency.\\n- Changed: improved performance of query parsing.\\n- Added: property `isSyncActive` to class `Ditto`.\\n- Added: method `logout()` to class `DittoAuthenticator`.\\n- Added: set of APIs to observe authentication status (see API reference for `DittoAuthenticator` and `DittoAuthenticationDelegate`).\\n- Added: method `upsert()` to classes `DittoCollection` and `DittoScopedWriteTransaction` (as a replacement for `insert()` & friends) which by default merges the newly inserted document if one with the same ID already exists.\\n- Deprecated: properties `isAuthenticated` and `userID` of class `DittoAuthenticator` in favor of newly introduced property `status`.\\n- Deprecated: methods `insert()` & frinds of classes `DittoCollection` and `DittoScopedWriteTransaction` in favor of newly introduced `upsert()`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.0/api-reference/","date_released":"2022-01-28T11:21:11.092Z"},"1.1.1":{"description":"- Changed: Optimized the performance of accessing the value of a `Document`\\n- Added: Combine publisher APIs obviating the CombineDitto extension library\\n  - Added: `remotePeersPublisher()` method to `Ditto` class\\n  - Added: `fetchAttachmentPublisher(attachmentToken:)` method to `DittoCollection` class\\n  - Added: `liveQueryPublisher()` method to `DittoPendingCursorOperation` class\\n  - Added: `singleDocumentLiveQueryPublisher()` method to `DittoPendingIDSpecificOperation` class\\n- Added: Experimental Bus API\\n  - Added: `dittoBus(_, didReceiveSingleMessage:)` method to `DittoBusDelegate` protocol\\n  - Added: `dittoBus(_, didReceiveIncomingStream:, fromPeer:)` method to `DittoBusDelegate` protocol\\n  - Removed: `dittoBus(_, didReceive:)` method from `DittoBusDelegate protocol\\n- Added: Experimental mesh roles API\\n  - Added: `setMeshRole(meshRole:, ditto:)` method to `DittoExperimental` class\\n  - Added: `setPriorityForMeshRole(_, forMeshRole:, ditto:)` to `DittoExperimental` class\\n- Fixed: Improved AWDL reliability on iOS 12","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.1/api-reference/","date_released":"2022-02-12T05:38:19.843Z"},"1.1.2":{"description":"- Added: property `isReady` to experimental `DittoBusStream` to check if a message may be enqueued.\\n- Added: method `setOfflineOnlyLicenseToken()` to class `Ditto` as replacement for now deprecated `setLicenseToken()`.\\n- Changed: made `DittoBusStream`, `DittoRemotePeerV2`, and `DittoAddress` adopt `Equatable` and `Hashable` protocols.\\n- Changed: made `DittoRemotePeerV2` adopt the `Identifiable` protocol.\\n- Deprecated: method `setLicenseToken()` of class `Ditto`, please use newly added `setOfflineOnlyLicenseToken()` instead.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.2/api-reference/","date_released":"2022-02-28T14:36:18.965Z"},"1.1.3":{"description":"- Added: `onlinePlaygroundV2` case to `DittoIdentity` allowing for basic authentication for playgrounds\\n\\n- Deprecated: `onlinePlayground` case of `DittoIdentity`, use newly added `onlinePlaygroundV2` instead\\n\\n- Fixed: sync issues due to inconsistent handling of app IDs across SDKs\\n\\n- Fixed: document IDs are now validated when synced and removed if invalid (some of our early versions of the SDK stored malformed IDs under certain circumstances)","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.3/api-reference/","date_released":"2022-03-22T10:13:57.388Z"},"1.1.4":{"description":"- Changed: improved replication performance in some scenarios.\\n- Fixed: accessing a `DittoMutableDocument`\'s `value` property now correctly decodes data such that it works in the same way as `DittoDocument`\'s `value` property.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.4/api-reference/","date_released":"2022-04-08T06:25:26.109Z"},"1.1.5":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.5/api-reference/","date_released":"2022-04-08T08:00:56.518Z"},"1.1.6":{"description":"- Fixed: a correctness issue in replication when peer permissions changed in the middle of a replication exchange.\\n- Fixed: error when querying a collection and there was a type mismatch for a field being used in a comparison in the query. \\n- Fixed: restarting an app too quickly could lead to multiple connection attempts to rejoin peers in the mesh.\\n- Fixed: apps using `OnlinePlaygroundV2` identities could experience a one minute delay before peer-to-peer sync occurs.\\n- Fixed: cloud sync would stop working when setting a newly created transport config.\\n- Changed: improvements to Ditto mesh performance via fastest-available-transport prioritization.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.6/api-reference/","date_released":"2022-05-09T12:04:39.208Z"},"1.1.7":{"description":"Synchronized version bump release.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.7/api-reference/","date_released":"2022-05-13T14:18:18.404Z"},"1.1.8":{"description":"- Fixed: Ditto with `onlinePlaygroundV2` identity would fail to sync with the Big Peer if internet access isn\'t available at the time when Ditto is instantiated.\\n\\n- Fixed: `DittoSwift` contained an invalid development signature.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.8/api-reference/","date_released":"2022-06-03T07:13:20.809Z"},"1.1.9-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.9-alpha1/api-reference/","date_released":"2022-06-09T03:12:41.864Z"},"1.1.9":{"description":"- Changed: reduced CRDT memory overhead.\\n\\n- Changed: HTTP/WebSocket service now allows any origin for CORS, so it may be used from a webapp on localhost.\\n\\n- Fixed: a peer using an online identity would fail to sync peer-to-peer after app restarts.\\n\\n- Fixed: `DittoDelegate` method `dittoIdentityProviderAuthenticationRequest(ditto:request:)` would receive a `DittoAuthenticationRequest` with some properties being incorrectly set to `nil`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.9/api-reference/","date_released":"2022-06-16T01:27:09.701Z"},"1.1.10":{"description":"* Changed: reduced total memory overhead during sync.\\n* Fixed: private class inside the Ditto SDK was named CBOR and conflicted with a\\n  private Apple class named exactly the same, which produced a warning at launch\\n  time.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.10/api-reference/","date_released":"2022-07-07T19:53:12.941Z"},"2.0.0-alpha1":{"description":"This is a preview release of Ditto v2. Full changelog will be provided with the official release.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/2.0.0-alpha1/api-reference/","date_released":"2022-07-20T11:55:36.278Z"},"2.0.0":{"description":"- Note: peers running `2.0.0` are able to sync with peers running at least version `1.1.8` of the SDK.\\n- Added: support for explicitly typing values as registers. This is via 2 new types: `DittoRegister` and `DittoMutableRegister`, and new `registerValue` value accessors added to `DittoDocumentPath` and `DittoMutableDocumentPath`.\\n- Added: `DittoCounter` and `DittoMutableCounter` types resembling the CRDT type underneath, which replace the old counter mechanics. A new `counter` value accessor has been added to `DittoDocumentPath` and `DittoMutableDocumentPath`, which returns a `DittoCounter` or a `DittoMutableCounter` respectively, if one is present at the document path specified.\\n- Added: support for accessing and creating RGAs (Replicated Growable Arrays), which was the default CRDT type for arrays in Ditto v1. There are 2 new types: `DittoRGA` and `DittoMutableRGA` in v2, and new `rga` value accessors added to `DittoDocumentPath` and `DittoMutableDocumentPath`. Note that these are deprecated though and arrays should instead be used in registers (which is now the default).\\n- Changed: arrays now default to being `Register` arrays. This means that when you want to update a property in a document that\'s an array you need to set the whole value as the new array. You can\'t perform mutating operations on an array in a document other than to fully replace it.\\n- Added: value accessor properties have been added to `DittoDocumentID`: `value`, `string{Value}`, `bool{Value}`, `int{Value}`, `uint{Value}`, `float{Value}`, `double{Value}`, `array{Value}`, `dictionary{Value}`.\\n- Changed: the keys `DittoAccessLicense` and `DittoLicenseToken` in `Info.plist` will now fail with a fatal error instead of logging a deprecation warning. Please use the key `DittoOfflineOnlyLicenseToken` instead.\\n- Changed: renamed identity `onlinePlaygroundV2` to just `onlinePlayground`, which replaces the previously deprecated `onlinePlayground`.\\n- Changed: renamed `Ditto` method `tryStartSync()` to just `startSync()`, which replaces the previously deprecated `startSync()`.\\n- Removed: deprecated `DittoRemotePeerV2` property `meshRole`, please `queryOverlapGroup` instead.\\n- Removed: deprecated type `DittoPeersObserver`, please use `DittoObserver` instead.\\n- Removed: deprecated `DittoDocumentID` method `toNative()`, please use property `value` instead.\\n- Removed: deprecated `DittoScopedWriteTransaction` method `find(query:)`, please use `find()` instead.\\n- Removed: deprecated `DittoScopedWriteTransaction` methods `insert()` and `insertWithStrategy()`, please use `upsert()` and `upsertWithStrategy()` instead.\\n- Removed: deprecated `DittoCollection` methods `insert()` and `insertWithStrategy()`, please use `upsert()` and `upsertWithStrategy()` instead.\\n- Removed: deprecated identities `development` and `online`, please use the available ones instead.\\n- Removed: deprecated `Ditto` methods `setAccessLicense()` and `setLicenseToken()`, please use `setOfflineOnlyLicenseToken()` instead.\\n- Removed: deprecated `Ditto` method `setTransportConfig()`, please set the `transportConfig` property directly.\\n- Removed: deprecated `DittoAuthenticator` method `isAuthenticated()` and property `userID`, please use `status` instead.\\n- Removed: `DittoWriteStrategy.overwrite`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/2.0.0/api-reference/","date_released":"2022-08-03T14:54:09.475Z"},"2.0.1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/2.0.1/api-reference/","date_released":"2022-08-14T04:57:21.615Z"},"2.0.2":{"description":"- Added: method `cancel()` to `DittoSubscription` allowing explicit cancelling of a subscription.\\n- Fixed: memory leak, observer objects returned by `observeStatus()` of `DittoAuthenticator` were never deallocated.\\n- Fixed: Reduced size of DittoSwift framework\\n- Changed: performing an `.exec()` call, outside the scope of a `store.write { }` block, no longer tries to obtain a write transaction and instead uses a read transaction.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/2.0.2/api-reference/","date_released":"2022-08-27T01:58:42.458Z"},"2.0.3":{"description":"- Fixed: rare crash due to a race condition within Ditto\'s Bluetooth subsystem.\\n- Changed: presence data is no longer synced with the big peer.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/2.0.3/api-reference/","date_released":"2022-08-31T17:20:10.069Z"},"2.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/2.0.4/api-reference/","date_released":"2022-09-01T18:31:12.160Z"},"2.0.5":{"description":"- Fixed: a very rare deadlock when starting sync immediately after creating the Ditto instance.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/2.0.5/api-reference/","date_released":"2022-09-08T22:20:09.224Z"},"1.1.11":{"description":"- Fixed: a very rare deadlock when starting sync immediately after creating the Ditto instance.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/1.1.11/api-reference/","date_released":"2022-09-09T23:11:14.193Z"},"2.0.6":{"description":"- Fixed: Ensure Ditto internal auth client is shut down correctly when it\'s no longer needed\\n- Fixed: The SwiftPM `.zip` artifact included an unintended `.swiftsourceinfo` file which causes mismatched versions of the Swift toolchain to cause errors. CocoaPods artifacts were unaffected.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/2.0.6/api-reference/","date_released":"2022-09-15T23:46:31.616Z"},"2.0.7":{"description":"- Changed: New lock file ensures we have only 1 SDK instance per working dir\\n- Removed: Bitcode is no longer embedded in the Ditto SDK as use of this technology has been deprecated by Apple.\\n- Fixed: Swift package manifest is now updated on the `main` branch.\\n- Fixed: Reduced the amount of disk space used by sync metadata by up to 50% in some cases","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/2.0.7/api-reference/","date_released":"2022-09-23T03:02:34.820Z"},"2.0.8":{"description":"- Added: `appID` property to `Ditto` class\\n- Added: `persistenceDirectory` property to `Ditto` class","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/2.0.8/api-reference/","date_released":"2022-10-28T00:14:53.152Z"},"2.1.0":{"description":"- Deprecated: `observe()` and `observeWithNextSignal()` methods of `DittoPendingCollectionsOperation`, `DittoPendingCursorOperation` and `DittoPendingIDSpecificOperation`. Please use the corresponding `observeLocal(deliverOn:eventHandler:)` and `observeLocalWithNextSignal(deliverOn:eventHandler:)` variants along with a separate call to`subscribe()` instead. See https://docs.ditto.live/ios/common/concepts/syncing-data#subscribe","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/2.1.0/api-reference/","date_released":"2022-11-02T23:51:32.169Z"},"3.0.0-alpha1":{"description":"- Removed: the `DittoRGA` constructor. You cannot create new RGAs.\\n- Removed: the deprecated `DittoMutableRGA` type. You cannot mutate existing RGAs.\\n- Deprecated: `DittoDocument.typed<Codable>(as:)` method.\\n- Deprecated: `DittoMutableDocument.typed<Codable>(as:)` method.\\n- Deprecated: `DittoTypedDocument<Decodable>` class.\\n- Deprecated: `DittoCollection.upsert<Encodable>(_,writeStrategy:)` method.\\n- Deprecated: `DittoPendingIDSpecificOperation.update<Codable>(using:)` method.\\n- Deprecated: `DittoScopedWriteTransaction.upsert<Codable>(_,writeStrategy:)` method.\\n- Deprecated: `DittoWriteTransactionPendingIDSpecificOperation.update<Codable>(using:)` method.\\n- Removed: `observe()` and `observeWithNextSignal()` methods of `DittoPendingCollectionsOperation`, `DittoPendingCursorOperation`, and `DittoPendingIDSpecificOperation`. Please use the corresponding `observeLocal(deliverOn:eventHandler:)` and `observeLocalWithNextSignal(deliverOn:eventHandler:)` variants along with a separate call to `subscribe()` instead. See https://docs.ditto.live/ios/common/concepts/syncing-data#subscribe\\n- Added: class `DittoPresence` as entry point for all of presence functionality, accessible via the newly introduced `presence` property on the `Ditto` object.\\n- Added: struct `DittoPresenceGraph` and related sub-types `DittoAddress`, `DittoConnection`, `DittoConnectionType`, and `DittoPeer`.\\n- Added `DittoPresence.GraphPublisher`, replaces the now deprecated `Ditto.RemotePeersPublisher`. You can get a graph publisher via the `graphPublisher()` on the newly introduced `DittoPresence` (accessible via newly introduced `presence` property of `Ditto`).\\n- Deprecated: methods `observePeers()` and `observePeersV2()` of `Ditto`, please use `observe()` of `DittoPresence` instead (accessible via newly introduced `presence` property of `Ditto`).\\n- Deprecated: `DITRemotePeer`, replaced by `DITPeer`.\\n- Deprecated: `DITPeersObserver`, replaced by `DITObserver` protocol.\\n- Deprecated: `DITPeersObserverV2`, replaced by `DITObserver` protocol.\\n- Deprecated: `Ditto.RemotePeersPublisher` and corresponding `remotePeersPublisher()` method on `Ditto`. Please use newly introduced `DittoPresence.GraphPublisher` and method `graphPublisher()` of `DittoPresence` instead.\\n- Removed: all `persistenceDirectory` arguments from all of the identity type constructors.\\n- Changed: performance improvements.\\n- Added `disableSyncWithV2` method to `Ditto`. This allows you to explicitly opt-in to disabling the ability to sync with Ditto peers running any version of the SDK in the v2 series of releases. Assuming this succeeds then this peer will only be able to sync with other peers using SDKs in the v3 series of releases. Note that this disabling of sync spreads to peers that sync with a peer that has disabled, or has (transitively) had disabled, syncing with v2 SDK peers.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/3.0.0-alpha1/api-reference/","date_released":"2022-12-01T20:01:08.478Z"},"3.0.0-alpha2":{"description":"-Fixed: Incorrect import of `DITAddress.h` header in DittoObjC, which was causing an issue in DittoSwift.\\n- Improved: reliability if app crashes occur while persisting authentication data.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/3.0.0-alpha2/api-reference/","date_released":"2022-12-06T16:01:43.035Z"},"3.0.0-alpha3":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/3.0.0-alpha3/api-reference/","date_released":"2022-12-12T13:19:14.644Z"},"3.0.0":{"description":"- Removed: the `DittoRGA` constructor. You cannot create new RGAs.\\n- Removed: the deprecated `DittoMutableRGA` type. You cannot mutate existing RGAs.\\n- Deprecated: `DittoDocument.typed<Codable>(as:)` method.\\n- Deprecated: `DittoMutableDocument.typed<Codable>(as:)` method.\\n- Deprecated: `DittoTypedDocument<Decodable>` class.\\n- Deprecated: `DittoCollection.upsert<Encodable>(_,writeStrategy:)` method.\\n- Deprecated: `DittoPendingIDSpecificOperation.update<Codable>(using:)` method.\\n- Deprecated: `DittoScopedWriteTransaction.upsert<Codable>(_,writeStrategy:)` method.\\n- Deprecated: `DittoWriteTransactionPendingIDSpecificOperation.update<Codable>(using:)` method.\\n- Removed: `observe()` and `observeWithNextSignal()` methods of `DittoPendingCollectionsOperation`, `DittoPendingCursorOperation`, and `DittoPendingIDSpecificOperation`. Please use the corresponding `observeLocal(deliverOn:eventHandler:)` and `observeLocalWithNextSignal(deliverOn:eventHandler:)` variants along with a separate call to `subscribe()` instead. See https://docs.ditto.live/ios/common/concepts/syncing-data#subscribe\\n- Added: class `DittoPresence` as entry point for all of presence functionality, accessible via the newly introduced `presence` property on the `Ditto` object.\\n- Added: struct `DittoPresenceGraph` and related sub-types `DittoAddress`, `DittoConnection`, `DittoConnectionType`, and `DittoPeer`.\\n- Added `DittoPresence.GraphPublisher`, replaces the now deprecated `Ditto.RemotePeersPublisher`. You can get a graph publisher via the `graphPublisher()` on the newly introduced `DittoPresence` (accessible via newly introduced `presence` property of `Ditto`).\\n- Deprecated: methods `observePeers()` and `observePeersV2()` of `Ditto`, please use `observe()` of `DittoPresence` instead (accessible via newly introduced `presence` property of `Ditto`).\\n- Deprecated: `DITRemotePeer`, replaced by `DITPeer`.\\n- Deprecated: `DITPeersObserver`, replaced by `DITObserver` protocol.\\n- Deprecated: `DITPeersObserverV2`, replaced by `DITObserver` protocol.\\n- Deprecated: `Ditto.RemotePeersPublisher` and corresponding `remotePeersPublisher()` method on `Ditto`. Please use newly introduced `DittoPresence.GraphPublisher` and method `graphPublisher()` of `DittoPresence` instead.\\n- Removed: all `persistenceDirectory` arguments from all of the identity type constructors.\\n- Changed: performance improvements.\\n- Added: `disableSyncWithV2` method to `Ditto`. This allows you to explicitly opt-in to disabling the ability to sync with Ditto peers running any version of the SDK in the v2 series of releases. Assuming this succeeds then this peer will only be able to sync with other peers using SDKs in the v3 series of releases. Note that this disabling of sync spreads to peers that sync with a peer that has disabled, or has (transitively) had disabled, syncing with v2 SDK peers.\\n- Improved: reliability if app crashes occur while persisting authentication data.\\n- Added: `statusPublisher()` method to `DittoAuthenticator`.\\n- Added: `DittoAuthenticator.StatusPublisher`, a Combine publisher for `DittoAuthenticationStatus` change events.\\n- Improved: log increased detail to help debug blocked write transactions.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/3.0.0/api-reference/","date_released":"2022-12-16T13:38:16.056Z"},"3.0.1":{"description":"- Added: `DiskUsage` class which can be used to monitor disk usage.\\n- Added: `diskUsage` property to `Ditto` class for access to a `DiskUsage` instance.\\n- Added: `diskUsagePublisher()` method to `Ditto` class, returning a `DiskUsagePublisher`.\\n- Added: `DiskUsageItem` class which contains data about the space used by files in the Ditto working directory.\\n- Changed: better readability of data sizes and durations in logs.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/3.0.1/api-reference/","date_released":"2023-01-14T02:57:17.846Z"},"4.0.0-alpha2":{"description":"* Added: `disableSyncWithV3` functionality to `Ditto`. Calling this will permanently remove the ability for the device that it is called on to sync with devices running v3 of the SDK. It also means that the device will then start performing AddWins removes when calling `remove()`. Any other device running v4 of the SDK that syncs with a device that has called `disableSyncWithV3` (or has themselves synced with another device that has called `disableSyncWithV3`, etc - if any chain of syncing exists that involves a device that has called `disableSyncWithV3`) will also no longer be able to sync with v3 peers and will perform AddWins removes when calling `remove()`.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/4.0.0-alpha2/api-reference/","date_released":"2023-01-16T22:16:17.836Z"},"3.0.2":{"description":"- Fixed issue preventing clean Ditto shutdown","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/3.0.2/api-reference/","date_released":"2023-01-20T21:20:59.567Z"},"3.0.3-alpha2":{"description":"- Resolved an issue where presence evictions could deadlock on startup with large numbers of peers","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/3.0.3-alpha2/api-reference/","date_released":"2023-01-23T18:05:04.218Z"},"3.0.3":{"description":"- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/3.0.3/api-reference/","date_released":"2023-01-26T14:35:21.149Z"},"4.0.0-beta1":{"description":"- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.\\n- Fixed: an issue preventing clean Ditto shutdown.\\n- Fixed: AddWins removes will now be used if `disableSyncWithV3` has been called on the `Ditto` object or the a peer has synced with another peer that has called `disableSyncWithV3`, or they have synced with another peer that has called `disableSyncWithV3`, etc.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/4.0.0-beta1/api-reference/","date_released":"2023-01-26T23:37:37.230Z"},"3.0.4":{"description":"- Changed: Slow or blocked write transactions now log hints showing the waiting and blocking transactions","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/3.0.4/api-reference/","date_released":"2023-01-28T00:10:06.407Z"},"3.0.5":{"description":"- Changed: some threads spawned by the SDK no longer wait up to 30 seconds before being stopped.\\n- Changed: added more logging when a peer is unable to connect to another peer because of no overlapping supported protocol versions.\\n- Fixed: replication hanging under some circumstances, especially WebSocket connections to Big Peer\\n- Fixed: cancelling subscriptions for queries with args would not work, the subscription would remain active indefinitely.\\n- Fixed: some memory leaks.\\n- Fixed: using the `DittoBus` no longer leads to `Ditto` instances not being deallocated properly.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/3.0.5/api-reference/","date_released":"2023-03-01T05:31:26.129Z"},"3.0.6":{"description":"- Fixed: `FetchAttachmentPublisher.Progress` struct properties are now public\\n- Fixed: Issue where Ditto instance using `OnlinePlayground` identity doesn\'t shut down properly\\n- Fixed: Potential crash on Windows and Linux from invoking `startSync()` if LAN transport is enabled.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/3.0.6/api-reference/","date_released":"2023-03-16T01:00:24.190Z"},"4.0.0":{"description":"- Added: AddWins removes will now be used if `disableSyncWithV3` has been called on the `Ditto` object or the a peer has synced with another peer that has called `disableSyncWithV3`, or they have synced with another peer that has called `disableSyncWithV3`, etc.\\n- Changed: If a problem occurs with an app\'s authentication webhook, the Small Peer that is trying to authenticate will log more detailed information for the developer.\\n- Changed: old multi-hop connections are now automatically disconnected when direct connections are established with peers, freeing up unneeded resources faster.\\n- Changed: reduced severity level for some routine log statements which were previously emitted at a WARN level.\\n- Fixed: some threads spawned by the SDK no longer wait up to 30 seconds before being stopped.\\n- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.\\n- Fixed: replication hanging under some circumstances, especially WebSocket connections to Big Peer\\n- Fixed: a possible crash if Ditto is configured with an invalid App ID. An error message is emitted instead.\\n- Fixed: an issue preventing clean Ditto shutdown.\\n- Fixed: cancelling subscriptions for queries with args would not work, the subscription would remain active indefinitely.\\n- Fixed: some memory leaks.\\n- Fixed: using the\xa0`DittoBus`\xa0no longer leads to\xa0`Ditto`\xa0instances not being deallocated properly.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/4.0.0/api-reference/","date_released":"2023-03-22T22:48:53.414Z"},"4.0.1":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/4.0.1/api-reference/","date_released":"2023-04-06T18:54:11.831Z"},"3.0.7":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/cocoa/DittoSwift/3.0.7/api-reference/","date_released":"2023-04-07T16:28:10.249Z"}}},"android":{"DittoKit":{"latest":{"description":"* Fixed an issue where extensive writes can cause a session time-out","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.4.0-alpha6/api-reference/","date_released":"2020-09-25T03:16:16.530Z"},"0.1.3":{"description":"* Improved handling of retrieving numeric fields from documents\\n* Fixes a bug where observe would not create a subscription","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.1.3/api-reference/","date_released":"2019-10-08T12:37:33.490Z"},"0.2.0":{"description":"* Improved query results performance\\n* Fixed two bugs that could lead to a crash\\n* Many networking improvements to speed up sync on iOS and Android\\n\\nNote: SyncKit 0.2 is incompatible with version 0.1.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.2.0/api-reference/","date_released":"2019-12-17T16:49:51.462Z"},"0.2.1":{"description":"* Fixes a crash that can occur when calling stop().","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.2.1/api-reference/","date_released":"2020-01-09T06:28:10.519Z"},"0.2.2":{"description":"* Reduced minimum Android SDK API level from 26 to 25 to support Android 7.1 devices.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.2.2/api-reference/","date_released":"2020-02-14T00:11:12.911Z"},"0.2.3":{"description":"* Fixed an issue where DittoKit would not work in 32-bit contexts.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.2.3/api-reference/","date_released":"2020-05-05T09:42:14.418Z"},"0.3.0":{"description":"* DittoKit 0.3 includes incompatible changes to data storage and networking - please uninstall all apps based on DittoKit 0.2 first\\n* Support for attaching large binary files to documents and syncing them on demand\\n* When creating documents you can no longer specify the id by providing an `_id` key. Instead you must specify an id as an extra argument to the `insert` function, if you want to explicitly set a document\u2019s id\\n* A document\u2019s id property is now `id` rather than `_id`\\n* The parameters for a live query callback have changed\\n* The sort order for a query is now controlled by an ascending/descending enum\\n* Fixed crash when inserting large amounts of data into a document\\n* Faster sync performance\\n* Ability to connect to a peer at a known address using the Server transport type","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.3.0/api-reference/","date_released":"2020-06-04T10:39:58.291Z"},"0.3.1":{"description":"* Added a new LAN transport mode WiFiFixedPort to listen for connections on a known port.\\n* Android phones using the Bluetooth transport will no longer change their device name.\\n* DittoKit has a new sdkVersion property describing which build of DittoKit is installed. Please include this information in support requests.\\n* Fixed bug where an attachment transfer may not resume after being interrupted.\\n* Fixed bug where a long-lasting Bluetooth connection may spontaneously disconnect and reconnect.\\n* Improvements to reconnection speed.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.3.1/api-reference/","date_released":"2020-07-16T01:36:06.187Z"},"0.3.2":{"description":"* Fixes bug where Android phones sometimes do not activate Bluetooth if it is enabled after launching the app","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.3.2/api-reference/","date_released":"2020-07-30T05:32:14.485Z"},"0.3.3":{"description":"* Android-specific performance improvements for large collections\\n* Java: DittoDocument\'s \\"value\\" field has been replaced with \\"getValue()\\"","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.3.3/api-reference/","date_released":"2020-08-07T03:31:47.579Z"},"0.3.4":{"description":"* Fixed a bug with query compilation where integer literals in the query would\\nlead to a query compilation failure.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.3.4/api-reference/","date_released":"2020-08-10T15:13:36.013Z"},"0.3.5":{"description":"* Fixed an issue where inserting data as default data (setting the `isDefault`\\nparameter to true) could lead to data that would not merge as expected.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.3.5/api-reference/","date_released":"2020-09-04T20:04:42.643Z"},"0.4.0-alpha1":{"description":"* Note that this is a release with breaking changes, even just in terms of\\nclients running 0.4.0 not being able to communicate with clients running 0.3.X\\nreleases.\\n* Fixes for memory leaks.\\n* Performance improvements.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.4.0-alpha1/api-reference/","date_released":"2020-09-09T21:42:09.729Z"},"0.4.0-alpha2":{"description":"From the 0.4.0-alpha1 release notes:\\n\\n* Note that this is a release with breaking changes, even just in terms of\\nclients running 0.4.0 not being able to communicate with clients running 0.3.X\\nreleases.\\n* Fixes for memory leaks.\\n* Performance improvements.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.4.0-alpha2/api-reference/","date_released":"2020-09-10T08:16:25.426Z"},"0.4.0-alpha3":{"description":"* Fixed an error where presence data was failing to be deserialized properly.","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.4.0-alpha3/api-reference/","date_released":"2020-09-11T09:34:06.493Z"},"0.4.0-alpha4":{"description":"* Fixes an issue where deletes might not propagate correctly in a multi-hop mesh","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.4.0-alpha4/api-reference/","date_released":"2020-09-18T02:12:36.268Z"},"0.4.0-alpha5":{"description":"* Fixed finalizer logic with the following types:\\n    * `DittoAttachment`\\n    * `DittoAttachmentFetcher`\\n    * `DittoKit`\\n    * `DittoLiveQuery`\\n    * `DittoSubscription`","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.4.0-alpha5/api-reference/","date_released":"2020-09-23T21:10:11.700Z"},"0.4.0-alpha6":{"description":"* Fixed an issue where extensive writes can cause a session time-out","api_reference_docs_url":"https://software.ditto.live/android/DittoKit/0.4.0-alpha6/api-reference/","date_released":"2020-09-25T03:16:16.530Z"}},"DittoSyncKit":{"latest":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"},"1.0.0-alpha1":{"description":"* Note that this is a release with breaking changes and clients using releases\\nin the 1.0 series will not be able to communicate with clients running a version\\nthat is anything less than 1.0. This should hopefully not be an issue because\\nthis release of the SDK has changed the name to be DittoSyncKit as opposed to\\nDittoKit.\\n* Lots of performance improvements and some bug fixes.","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha1/api-reference/","date_released":"2020-10-08T21:23:54.081Z"},"1.0.0-alpha2":{"description":"* Decreases the file size of the AAR","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha2/api-reference/","date_released":"2020-10-09T21:04:09.999Z"},"1.0.0-alpha3":{"description":"* Added new observeWithNextSignal API to allow the application to control the delivery of the next observe callback ev\\nent.\\n* Fixed several issues related to attachments that could delay sync.\\n* Simplified log statements","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha3/api-reference/","date_released":"2020-11-04T07:46:13.521Z"},"1.0.0-alpha4":{"description":"* Fix issue where attachments could stop being fetched incorrectly.","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha4/api-reference/","date_released":"2020-11-09T18:15:59.228Z"},"1.0.0-alpha5":{"description":"* Added a new intermediate security identity for a shared secret key. This is a simplistic authentication mode which is normally only suitable for private apps where all the users and devices are trusted. \\n* Fixed an issue that prevented Counter values from syncing correctly\\n* Renamed DittoAttachmentStatus to DittoAttachmentFetchEvent and subsequently Incomplete status to Progre\\nss.","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha5/api-reference/","date_released":"2020-11-23T04:43:47.655Z"},"1.0.0-alpha6":{"description":"* Performance and stability improvements.\\n* Fix default data insertion such that merge semantics are consistent and\\n  duplicate data isn\'t created.","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha6/api-reference/","date_released":"2020-12-15T01:00:39.148Z"},"1.0.0-alpha7":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/android/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"}},"Ditto":{"1.0.0-alpha8":{"description":"* Site IDs, which make up part of a Ditto identity object, are now unsigned,\\n64-bit integers instead of unsigned 32-bit integers.\\n* Fix a crash that could occur if an offset with a value greater than the number\\nof matching documents was provided.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.0-alpha8/api-reference/","date_released":"2021-01-22T15:09:01.907Z"},"latest":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/4.0.1/api-reference/","date_released":"2023-04-06T18:54:11.831Z"},"1.0.0-alpha9":{"description":"* Fixed a bug where mDNS advertising may continue after Ditto is stopped.\\n* Fixed a hang that could occur creating an attachment fetcher while requesting many attachments at once.\\n* Fixed sync failure when there are multiple overlapping subscriptions or live queries with the same query string for the same collection.\\n* Fixed a potential crash and other sync failures that could occur under certain conditions.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.0-alpha9/api-reference/","date_released":"2021-02-05T00:58:10.294Z"},"1.0.0":{"description":"* This release is not compatible with any previous SDK releases. There are a\\nnumber of breaking changes both in terms of the SDK API and in terms of the\\ninternal systems used by the SDK to perform operations such as synchronization.\\nIf you have previously made use of the Ditto SDK and wish to update to this\\nversion then note that you will need to delete all existing Ditto data otherwise\\nyou will run into errors. If you have existing data that you need to keep then\\nplease contact us and we can advise you as to how you can migrate your data.\\n* The most notable API breaking changes are:\\n  * Document IDs are no longer restricted to just strings. You can now create\\n    a document ID that is a string, integer, boolean, array, map, or null. This\\n    means that when making `findByID` or `insert` calls you now need to provide\\n    a `DittoDocumentID` object rather than a string. Similarly, when you access\\n    a document\'s ID it will now return a `DittoDocumentID` object instead of a\\n    string.\\n  * The `start()` and `stop()` functions on the `Ditto` object have been renamed\\n    to `startSync()` and `stopSync()` respectively. They now also don\'t accept\\n    any arguments. If you wish to specify which transports you would like the\\n    Ditto SDK to make use of (along with any configuration that they might\\n    require) you now need to use the `setTransportConfig` function on the\\n    `Ditto` object, and pass to that a transport config object. The default\\n    transports that will be enabled are still the same as they were in previous\\n    releases of the SDK though, so if you have no custom requirements then you\\n    can simply change your `start()` call to `startSync()`.\\n* Lots of performance improvements and bug fixes.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.0/api-reference/","date_released":"2021-04-22T00:29:50.320Z"},"1.0.1":{"description":"* If you provide an invalid query then you will now get a better error message.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.1/api-reference/","date_released":"2021-05-04T16:02:44.151Z"},"1.0.2":{"description":"* Add support for subscripting `DittoDocumentID`s in order to get nested values\\nwhen a document ID is based on an array or a map.\\n* Deprecated `.toNative()` on `DittoDocumentID`. You should use `.value`\\ninstead.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.2/api-reference/","date_released":"2021-05-20T21:39:10.588Z"},"1.0.3":{"description":"* Bluetooth sync performance improvements.\\n* Enable configuration of advertisement power and frequency.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.3/api-reference/","date_released":"2021-06-10T16:34:52.104Z"},"1.0.4":{"description":"* Bluetooth sync performance improvements with L2CAP support added, which will\\n  be used when available.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.4/api-reference/","date_released":"2021-06-11T22:36:42.265Z"},"1.0.5":{"description":"* Added a new `find` function that accepts a query containing placeholders in\\n  the form of `$args.my_arg` along with a map of query arguments in the form of\\n  `{ \\"my_arg\\": \\"some value\\" }`. The placeholders in the query will be replaced\\n  by a query-appropriate representation of the relevant value from the map of\\n  query arguments.\\n\\n  For example, a query of `color == $args.color` with a query arguments map of\\n  `{ \\"color\\": \\"red\\" }` would internally be treated as a query of:\\n  `color == \\"red\\"`.\\n* Added the ability to get a hash and/or a mnemonic (string) representation of\\n  the matching documents from a live query event. This means you can do\\n  something like this:\\n\\n  ```kotlin\\n  val liveQuery = collection.findAll().observe() { docs, event ->\\n      event.hash(docs); // e.g. `1950015808188223905`\\n      event.hashMnemonic(docs); // e.g. `locate-quality-tina--helena-remote-cat`\\n      // ...\\n  }\\n  ```\\n* Fix for using floats in queries.\\n* Accessing the `store` property of a `Ditto` instance will no longer throw an\\n  error if you have not yet activated your `Ditto` instance with a valid license\\n  token.\\n* Deprecated `setAccessLicense` and added a new function, `setLicenseToken`,\\n  which will throw an appropriate error if your provided license token is\\n  expired or invalid somehow.\\n* Deprecated `startSync` and added a new function, `tryStartSync`, which will\\n  throw an error if your `Ditto` instance hasn\'t yet been activated via a\\n  successful call to `setLicenseToken`.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.5/api-reference/","date_released":"2021-06-25T22:36:18.096Z"},"1.0.6":{"description":"* Add `value` accessor on `DittoDocumentPath`, `DittoMutableDocumentPath`, and\\n`DittoDocumentIDPath` types to allow accessing a nested value in a document/ID\\nas an `Any?`.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.6/api-reference/","date_released":"2021-07-08T18:22:41.809Z"},"1.0.7":{"description":"* Fix bug where sync may fail if an unusually long `deviceName` is configured","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.7/api-reference/","date_released":"2021-07-22T23:38:10.554Z"},"1.0.8":{"description":"* Improved debug logging.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"},"1.0.9":{"description":"* Added support for getting information about all of the collections that the device is aware of. This is achieved by accessing `collections()` through the store object and then using the same sort of API used when getting documents in collections, i.e. `exec/observe/etc`.\\n* Added multicast as a transport option to the `LAN` config part of `TransportConfig`.\\n* Added new identity types: `Online` and `OnlinePlayground.` An `Online` identity should be used when running Ditto in secure production mode, logging on to Ditto Cloud, or using an on-premises authentication server. User permissions are centrally managed. Sync will not work until a successful login has occurred. An `OnlinePlayground` identity should be used when you want to test a Ditto Cloud app without authentication (\\"Playground mode\\"). This mode offers no security and must only be used for development.\\n* The `Production` identity has been renamed to `Manual`.\\n* Added a `DittoAuthenticator` type, accessible via the `Ditto` object, which allows you to perform login operations when you\'re using an `Online` identity.\\n* Similarly, added a `DittoAuthenticationCallback` type that needs to be used when using an `Online` identity.\\n* Report an error if more than one Ditto instance is started using the same working directory.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.9/api-reference/","date_released":"2021-09-03T22:38:24.690Z"},"1.0.10":{"description":"* Fix to stop a change in site ID from leading to an unnecessary error.\\n* Improve handling of persisted authentication data. Note that this might lead\\n  to a one-off change to a peer\'s site ID if you weren\'t and continue to not be\\n  specifying an explicit site ID when creating your identity.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.10/api-reference/","date_released":"2021-09-10T16:21:51.194Z"},"1.0.11":{"description":"- Added `DittoWriteStrategy` enum.\\n- Added method `insertWithStrategy()` to `DittoCollection`, allowing to specify the behavior when inserting a document with an ID that matches the ID of a document already in the store.\\n- Added `isAuthenticated` method and `userID` property to `DittoAuthenticator`.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.11/api-reference/","date_released":"2021-10-08T05:09:27.624Z"},"1.0.12":{"description":"- Added `global` section to `TransportConfig` allowing P2P sync to be contained within certain groups of devices by putting them in the same \\"sync group\\".","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.12/api-reference/","date_released":"2021-10-18T10:00:50.921Z"},"1.0.13":{"description":"- Changed `DittoIdentity`\'s property `appID` to be of type `String` instead of `UUID`.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.13/api-reference/","date_released":"2021-10-18T17:02:38.549Z"},"1.0.14":{"description":"* Add support for array projections to DittoQL.\\n* Deprecate the `Online` identity in favor of the new `OnlineWithAuthentication`\\n  identity.\\n* Deprecate the `Development` identity in favor of the new `OfflinePlayground`\\n  identity.\\n* Make outgoing BLE connections and MTU customisable.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.14/api-reference/","date_released":"2021-10-25T08:31:34.911Z"},"1.0.15-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.15-alpha1/api-reference/","date_released":"2021-10-27T10:33:50.885Z"},"1.0.15":{"description":"* Ensure that when performing a `sort` that if a document that matches the\\n  filter specified via the accompanying `find` call doesn\'t have the key\\n  specified in the `sort` expression then it won\'t lead to an error. Now, if\\n  you\'re sorting in a descending order then the documents without the key\\n  specified in the `sort` will appear at the end of the set of results, after\\n  all of the documents that do have the key present. If you\'re sorting in an\\n  ascending order then the documents without the `sort` key will appear first in\\n  the set of documents, before all of the documents that do contain the `sort`\\n  key.\\n* Add versions of `loginWithToken` and `loginWithCredentials` that can be used\\n  with Java that don\'t require returning `null` at the end of the lambda.\\n* Remove the empty default implementations of `authenticationRequired` and\\n  `authenticationExpiringSoon` on `DittoAuthenticationCallback`.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.15/api-reference/","date_released":"2021-11-05T22:03:49.597Z"},"1.0.16":{"description":"* Fix an issue with live queries that involved a limit, no offset, at least one\\n  document being deleted, and some other conditions being met. Live queries that\\n  met these conditions could report incorrect sets of matching documents.\\n* Fix an issue that could potentially lead to an infinite loop in the\\n  replication system, meaning no sync progress would be made.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.16/api-reference/","date_released":"2021-11-19T22:39:48.766Z"},"1.0.17":{"description":"* Fix an issue with write strategies not working correctly. Unexpected results\\n  could occur when performing sequences of operations on documents.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.17/api-reference/","date_released":"2021-11-26T00:11:42.917Z"},"1.0.18-alpha1":{"description":"* Fixed an issue where document IDs that were specified inside the document\'s\\n  value as opposed to being specified explicitly (as a separate argument to\\n  `insert`) weren\'t being processed correctly, potentially leading to bugs with\\n  merge and overwrite behaviors.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.18-alpha1/api-reference/","date_released":"2021-12-08T17:25:36.987Z"},"1.0.18-alpha2":{"description":"* Improve attachment sync performance.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.18-alpha2/api-reference/","date_released":"2021-12-14T16:32:13.955Z"},"1.0.18":{"description":"* Reduced the opportunity for rapid memory growth in some scenarios.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.18/api-reference/","date_released":"2021-12-20T13:22:16.631Z"},"1.0.19":{"description":"- Fixed: collections were not appearing in the data browser under certain permission configurations.\\n- Fixed: race condition when subscriptions were configured from multiple threads in parallel (sometimes leading to a crash).\\n- Fixed: crash when calling `tryStartSync()` due to new Bluetooth rules and permissions in Android 12.\\n- Fixed: \\"Receiver not registered\\" exception occuring due to a race condition in Bluetooth registration.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.0.19/api-reference/","date_released":"2021-12-23T20:42:05.710Z"},"1.1.0":{"description":"- Changed: improved peer-to-peer algorithms to create meshes that are more efficient and diverse.\\n- Changed: improved routing algorithms for more efficiency.\\n- Changed: improved performance of query parsing.\\n- Added: property `isSyncActive` to class `Ditto`.\\n- Added: method `logout()` to class `DittoAuthenticator`.\\n- Added: set of APIs to observe authentication status (see API reference for `DittoAuthenticator` and `DittoAuthenticationCallback`).\\n- Added: method `upsert()` to classes `DittoCollection` and `DittoScopedWriteTransaction` (as a replacement for `insert()` & friends) which by default merges the newly inserted document if one with the same ID already exists.\\n- Deprecated: properties `isAuthenticated` and `userId` of class `DittoAuthenticator` in favor of newly introduced property `status`.\\n- Deprecated: methods `insert()` & frinds of classes `DittoCollection` and `DittoScopedWriteTransaction` in favor of newly introduced `upsert()`.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.0/api-reference/","date_released":"2022-01-28T11:21:11.093Z"},"1.1.1":{"description":"- Changed: Optimized the performance of accessing the value of a `Document`\\n- Added: Experimental mesh roles API\\n  - Added: `DittoExperimental` class\\n  - Added: `setMeshRole()` method to `DittoExperimental` class\\n  - Added: `setPriorityForMeshRole()` method to `DittoExperimental` class","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.1/api-reference/","date_released":"2022-02-12T05:38:19.843Z"},"1.1.2":{"description":"- Added: method `setOfflineOnlyLicenseToken()` to class `Ditto` as replacement for now deprecated `setLicenseToken()`.\\n- Deprecated: method `setLicenseToken()` of class `Ditto`, please use newly added `setOfflineOnlyLicenseToken()` instead.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.2/api-reference/","date_released":"2022-02-28T14:36:18.966Z"},"1.1.3":{"description":"- Added: `OnlinePlaygroundV2` identity allowing for basic authentication for playgrounds\\n\\n- Deprecated: `OnlinePlayground` identity, use newly added `OnlinePlaygroundV2` instead\\n\\n- Fixed: document IDs are now validated when synced and removed if invalid (some of our early versions of the SDK stored malformed IDs under certain circumstances)","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.3/api-reference/","date_released":"2022-03-22T10:13:57.388Z"},"1.1.4":{"description":"- Changed: improved replication performance in some scenarios.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.4/api-reference/","date_released":"2022-04-08T06:25:26.110Z"},"1.1.5":{"description":"* Fixed: Some Android phones may not connect on Bluetooth - regression in 1.1.4","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.5/api-reference/","date_released":"2022-04-08T08:00:56.518Z"},"1.1.6":{"description":"- Fixed: a correctness issue in replication when peer permissions changed in the middle of a replication exchange.\\n- Fixed: error when querying a collection and there was a type mismatch for a field being used in a comparison in the query. \\n- Fixed: restarting an app too quickly could lead to multiple connection attempts to rejoin peers in the mesh.\\n- Fixed: apps using `OnlinePlaygroundV2` identities could experience a one minute delay before peer-to-peer sync occurs.\\n- Changed: improvements to Ditto mesh performance via fastest-available-transport prioritization.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.6/api-reference/","date_released":"2022-05-09T12:04:39.209Z"},"1.1.7":{"description":"Synchronized version bump release.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.7/api-reference/","date_released":"2022-05-13T14:18:18.405Z"},"1.1.8":{"description":"- Fixed: Ditto with `OnlinePlaygroundV2` identity would fail to sync with the Big Peer if internet access isn\'t available at the time when Ditto is instantiated.\\n\\n- Fixed: crash when starting LAN transport.\\n\\n- Fixed: crash when Ditto would try to stop BLE scanning.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.8/api-reference/","date_released":"2022-06-03T07:13:20.810Z"},"1.1.9-alpha1":{"description":"* Added: deviceName property to Ditto class #5692","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.9-alpha1/api-reference/","date_released":"2022-06-09T03:12:41.864Z"},"1.1.9":{"description":"- Changed: reduced CRDT memory overhead.\\n\\n- Changed: HTTP/WebSocket service now allows any origin for CORS, so it may be used from a webapp on localhost.\\n\\n- Fixed: a peer using an online identity would fail to sync peer-to-peer after app restarts.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.9/api-reference/","date_released":"2022-06-16T01:27:09.702Z"},"1.1.10":{"description":"* Changed: reduced total memory overhead during sync.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.10/api-reference/","date_released":"2022-07-07T19:53:12.942Z"},"2.0.0-alpha1":{"description":"This is a preview release of Ditto v2. Full changelog will be provided with the official release.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/2.0.0-alpha1/api-reference/","date_released":"2022-07-20T11:55:36.278Z"},"2.0.0":{"description":"- Note: peers running `2.0.0` are able to sync with peers running at least version `1.1.8` of the SDK.\\n- Added: support for explicitly typing values as registers. This is via 2 new types: `DittoRegister` and `DittoMutableRegister`, and new `registerValue` value accessors added to `DittoDocumentPath` and `DittoMutableDocumentPath`.\\n- Added: `DittoCounter` and `DittoMutableCounter` types resembling the CRDT type underneath, which replace the old counter mechanics. A new `counter` value accessor has been added to `DittoDocumentPath` and `DittoMutableDocumentPath`, which returns a `DittoCounter` or a `DittoMutableCounter` respectively, if one is present at the document path specified.\\n- Added: support for accessing and creating RGAs (Replicated Growable Arrays), which was the default CRDT type for arrays in Ditto v1. There are 2 new types: `DittoRGA` and `DittoMutableRGA` in v2, and new `rga` value accessors added to `DittoDocumentPath` and `DittoMutableDocumentPath`. Note that these are deprecated though and arrays should instead be used in registers (which is now the default).\\n- Changed: arrays now default to being `Register` arrays. This means that when you want to update a property in a document that\'s an array you need to set the whole value as the new array. You can\'t perform mutating operations on an array in a document other than to fully replace it.\\n- Changed: renamed identity `OnlinePlaygroundV2` to just `OnlinePlayground`, which replaces the previously deprecated `OnlinePlayground`.\\n- Changed: renamed `Ditto` method `tryStartSync()` to just `startSync()`, which replaces the previously deprecated `startSync()`.\\n- Removed: deprecated `DittoRemotePeerV2` property `meshRole`, please `queryOverlapGroup` instead.\\n- Removed: deprecated type `DittoPeersObserver`, please use `DittoObserver` instead.\\n- Removed: deprecated `DittoDocumentID` method `toNative()`, please use property `value` instead.\\n- Removed: deprecated `DittoScopedWriteTransaction` method `find(query:)`, please use `find()` instead.\\n- Removed: deprecated `DittoScopedWriteTransaction` methods `insert()` and `insertWithStrategy()`, please use `upsert()` and `upsertWithStrategy()` instead.\\n- Removed: deprecated `DittoCollection` methods `insert()` and `insertWithStrategy()`, please use `upsert()` and `upsertWithStrategy()` instead.\\n- Removed: deprecated identities `Development` and `Online`, please use the available ones instead.\\n- Removed: deprecated `Ditto` methods `setAccessLicense()` and `setLicenseToken()`, please use `setOfflineOnlyLicenseToken()` instead.\\n- Removed: deprecated `DittoAuthenticator` method `isAuthenticated()` and property `userID`, please use `status` instead.\\n- Changed: all Ditto error cases are now capitalized.\\n- Changed: `failedToInitialiseDittoDirectory` is now named `FailedToInitializeDittoDirectory`\\n- Removed: `DittoWriteStrategy.Overwrite` write strategy.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/2.0.0/api-reference/","date_released":"2022-08-03T14:54:09.476Z"},"2.0.1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/android/Ditto/2.0.1/api-reference/","date_released":"2022-08-14T04:57:21.616Z"},"2.0.2":{"description":"- Added support for Wi-Fi Aware\\n- Changed: performing an `.exec()` call, outside the scope of a `store.write { }` block, no longer tries to obtain a write transaction and instead uses a read transaction.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/2.0.2/api-reference/","date_released":"2022-08-27T01:58:42.458Z"},"2.0.3":{"description":"- Changed: presence data is no longer synced with the big peer.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/2.0.3/api-reference/","date_released":"2022-08-31T17:20:10.069Z"},"2.0.4":{"description":"- Fixed: prevent a crash on devices where Wifi Aware is not available.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/2.0.4/api-reference/","date_released":"2022-09-01T18:31:12.160Z"},"2.0.5":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/android/Ditto/2.0.5/api-reference/","date_released":"2022-09-08T22:20:09.225Z"},"1.1.11":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/android/Ditto/1.1.11/api-reference/","date_released":"2022-09-09T23:11:14.193Z"},"2.0.6":{"description":"- Fixed: Ensure Ditto internal auth client is shut down correctly when it\'s no longer needed","api_reference_docs_url":"https://software.ditto.live/android/Ditto/2.0.6/api-reference/","date_released":"2022-09-15T23:46:31.617Z"},"2.0.7":{"description":"- Changed: New lock file ensures we have only 1 SDK instance per working dir\\n- Fixed: Reduced the amount of disk space used by sync metadata by up to 50% in some cases","api_reference_docs_url":"https://software.ditto.live/android/Ditto/2.0.7/api-reference/","date_released":"2022-09-23T03:02:34.821Z"},"2.0.8":{"description":"- Added: `close()` method to `Ditto` class so that we can shut an instance down before recreating it\\n- Added: Updated permissions to request `NEARBY_WIFI_DEVICES` on Android 13\\n- Changed: Improved error messages if concurrent Ditto instances attempt to use the same persistence directory","api_reference_docs_url":"https://software.ditto.live/android/Ditto/2.0.8/api-reference/","date_released":"2022-10-28T00:14:53.152Z"},"2.1.0":{"description":"- Added: `appId` and `persistenceDirectory` properties to `Ditto` class.\\n- Deprecated: `observe()` and `observeWithNextSignal()` methods of `DittoPendingCollectionsOperation`, `DittoPendingCursorOperation` and `DittoPendingIDSpecificOperation`. Please use the corresponding `observeLocal()` and `observeLocalWithNextSignal()` variants along with a separate call to `subscribe()` instead. https://docs.ditto.live/android/common/concepts/syncing-data#subscribe","api_reference_docs_url":"https://software.ditto.live/android/Ditto/2.1.0/api-reference/","date_released":"2022-11-02T23:51:32.170Z"},"3.0.0-alpha1":{"description":"- Removed: the `DittoRGA` constructor. You cannot create new RGAs.\\n- Removed: the deprecated `DittoMutableRGA` type. You cannot mutate existing RGAs.\\n- Renamed: `siteID` property -> `siteId` in `Ditto` class\\n- Renamed: `DittoDocumentID` -> `DittoDocumentId`\\n- Renamed: `DittoDocumentIDPath` -> `DittoDocumentIdPath`\\n- Renamed: `appID` property -> `appId` in `DittoIdentity` nested classes\\n- Renamed: `siteID` property -> `siteId` in `DittoIdentity` nested classes\\n- Renamed: `DittoPendingIDSpecificOperation` -> `DittoPendingIdSpecificOperation`\\n- Renamed: `docID` property `docId` in `DittoPendingIdSpecificOperation` class\\n- Renamed: `DittoWriteTransactionPendingIDSpecificOperation` -> `DittoWriteTransactionPendingIdSpecificOperation`\\n- Renamed: `docID` property -> `docId` in `DittoWriteTransactionPendingIdSpecificOperation` class\\n- Renamed: `NoIDPresentInDocument` -> `NoIdPresentInDocument` in `DittoError.StoreErrorReason` class\\n- Renamed: `InvalidLiveQueryID` -> `InvalidLiveQueryId` in `DittoError.StoreErrorReason` class\\n- Renamed: `findByID()` method `findById()` in `DittoCollection` class\\n- Renamed: `docID` property -> `docId` in `DittoUpdateResult` nested classes\\n- Renamed: `docID` property -> `docId` in `DittoMutableDocumentPath` class\\n- Added: `close()` method to `DittoLiveQuery`, adding `Closeable` conformance.\\n- Added: `close()` method to `DittoAttachmentFetcher`, adding `Closeable` conformance.\\n- Deprecated: `DittoLiveQuery.stop()`, please use the newly added `DittoLiveQuery.close()` instead.\\n- Deprecated: `DittoAttachmentFetcher.stop()`, Please use the newly added `DittoAttachmentFetcher.close()` instead.\\n- Fixed: The `Closeable` returned from `observeStatus` is now held weakly allowing it to be garbage-collected when the reference goes out of scope.\\n- Removed: `observe()` and `observeWithNextSignal()` methods of `DittoPendingCollectionsOperation`, `DittoPendingCursorOperation`, and `DittoPendingIdSpecificOperation`. Please use the corresponding `observeLocal()` and `observeLocalWithNextSignal()` variants along with a separate call to `subscribe()` instead. See https://docs.ditto.live/android/common/concepts/syncing-data#subscribe\\n- Deprecated: `DittoRemotePeer`, `DittoRemotePeerV2`, `DittoPeerV2Parser`, `DittoPeersObserverV1`, `DittoPeersObserverV2`, `DittoPeersObserverV1Callback`, and `DittoPeersObserverV2Callback` types.\\n- Changed: performance improvements.\\n- Added `disableSyncWithV2` method to `Ditto`. This allows you to explicitly opt-in to disabling the ability to sync with Ditto peers running any version of the SDK in the v2 series of releases. Assuming this succeeds then this peer will only be able to sync with other peers using SDKs in the v3 series of releases. Note that this disabling of sync spreads to peers that sync with a peer that has disabled, or has (transitively) had disabled, syncing with v2 SDK peers.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/3.0.0-alpha1/api-reference/","date_released":"2022-12-01T20:01:08.479Z"},"3.0.0-alpha2":{"description":"- Fixed: WiFi Aware stability when WiFi is turned on/off.\\n- Improved: reliability if app crashes occur while persisting authentication data.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/3.0.0-alpha2/api-reference/","date_released":"2022-12-06T16:01:43.035Z"},"3.0.0-alpha3":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/android/Ditto/3.0.0-alpha3/api-reference/","date_released":"2022-12-12T13:19:14.644Z"},"3.0.0":{"description":"- Removed: the `DittoRGA` constructor. You cannot create new RGAs.\\n- Removed: the deprecated `DittoMutableRGA` type. You cannot mutate existing RGAs.\\n- Renamed: `siteID` property -> `siteId` in `Ditto` class\\n- Renamed: `DittoDocumentID` -> `DittoDocumentId`\\n- Renamed: `DittoDocumentIDPath` -> `DittoDocumentIdPath`\\n- Renamed: `appID` property -> `appId` in `DittoIdentity` nested classes\\n- Renamed: `siteID` property -> `siteId` in `DittoIdentity` nested classes\\n- Renamed: `DittoPendingIDSpecificOperation` -> `DittoPendingIdSpecificOperation`\\n- Renamed: `docID` property `docId` in `DittoPendingIdSpecificOperation` class\\n- Renamed: `DittoWriteTransactionPendingIDSpecificOperation` -> `DittoWriteTransactionPendingIdSpecificOperation`\\n- Renamed: `docID` property -> `docId` in `DittoWriteTransactionPendingIdSpecificOperation` class\\n- Renamed: `NoIDPresentInDocument` -> `NoIdPresentInDocument` in `DittoError.StoreErrorReason` class\\n- Renamed: `InvalidLiveQueryID` -> `InvalidLiveQueryId` in `DittoError.StoreErrorReason` class\\n- Renamed: `findByID()` method `findById()` in `DittoCollection` class\\n- Renamed: `docID` property -> `docId` in `DittoUpdateResult` nested classes\\n- Renamed: `docID` property -> `docId` in `DittoMutableDocumentPath` class\\n- Added: `close()` method to `DittoLiveQuery`, adding `Closeable` conformance.\\n- Added: `close()` method to `DittoAttachmentFetcher`, adding `Closeable` conformance.\\n- Deprecated: `DittoLiveQuery.stop()`, please use the newly added `DittoLiveQuery.close()` instead.\\n- Deprecated: `DittoAttachmentFetcher.stop()`, Please use the newly added `DittoAttachmentFetcher.close()` instead.\\n- Fixed: The `Closeable` returned from `observeStatus` is now held weakly allowing it to be garbage-collected when the reference goes out of scope.\\n- Removed: `observe()` and `observeWithNextSignal()` methods of `DittoPendingCollectionsOperation`, `DittoPendingCursorOperation`, and `DittoPendingIdSpecificOperation`. Please use the corresponding `observeLocal()` and `observeLocalWithNextSignal()` variants along with a separate call to `subscribe()` instead. See https://docs.ditto.live/android/common/concepts/syncing-data#subscribe\\n- Deprecated: `DittoRemotePeer`, `DittoRemotePeerV2`, `DittoPeerV2Parser`, `DittoPeersObserverV1`, `DittoPeersObserverV2`, `DittoPeersObserverV1Callback`, and `DittoPeersObserverV2Callback` types.\\n- Changed: performance improvements.\\n- Added: `disableSyncWithV2` method to `Ditto`. This allows you to explicitly opt-in to disabling the ability to sync with Ditto peers running any version of the SDK in the v2 series of releases. Assuming this succeeds then this peer will only be able to sync with other peers using SDKs in the v3 series of releases. Note that this disabling of sync spreads to peers that sync with a peer that has disabled, or has (transitively) had disabled, syncing with v2 SDK peers.\\n- Improved: reliability if app crashes occur while persisting authentication data.\\n- Fixed: WiFi Aware stability when WiFi is turned on/off.\\n- Improved: log increased detail to help debug blocked write transactions.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/3.0.0/api-reference/","date_released":"2022-12-16T13:38:16.056Z"},"3.0.1":{"description":"- Added: `DiskUsage` class which can be used to monitor disk usage.\\n- Added: `diskUsage` property to `Ditto` class for access to a `DiskUsage` instance.\\n- Added: `DiskUsageItem` class which contains data about the space used by files in the Ditto working directory.\\n- Added: `routingHint` property to `DittoGlobalConfig` class.\\n- Added: `NO_PREFERRED_ROUTE_HINT` constant, used internally by `DittoGlobalConfig` if no routing hint is specified.\\n\\n- Changed: better readability of data sizes and durations in logs.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/3.0.1/api-reference/","date_released":"2023-01-14T02:57:17.847Z"},"4.0.0-alpha2":{"description":"* Added: `disableSyncWithV3` functionality to `Ditto`. Calling this will permanently remove the ability for the device that it is called on to sync with devices running v3 of the SDK. It also means that the device will then start performing AddWins removes when calling `remove()`. Any other device running v4 of the SDK that syncs with a device that has called `disableSyncWithV3` (or has themselves synced with another device that has called `disableSyncWithV3`, etc - if any chain of syncing exists that involves a device that has called `disableSyncWithV3`) will also no longer be able to sync with v3 peers and will perform AddWins removes when calling `remove()`.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/4.0.0-alpha2/api-reference/","date_released":"2023-01-16T22:16:17.836Z"},"3.0.2":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/android/Ditto/3.0.2/api-reference/","date_released":"2023-01-20T21:20:59.567Z"},"3.0.3-alpha2":{"description":"- Resolved an issue where presence evictions could deadlock on startup with large numbers of peers","api_reference_docs_url":"https://software.ditto.live/android/Ditto/3.0.3-alpha2/api-reference/","date_released":"2023-01-23T18:05:04.218Z"},"3.0.3":{"description":"- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/3.0.3/api-reference/","date_released":"2023-01-26T14:35:21.149Z"},"4.0.0-beta1":{"description":"- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.\\n- Fixed: AddWins removes will now be used if `disableSyncWithV3` has been called on the `Ditto` object or the a peer has synced with another peer that has called `disableSyncWithV3`, or they have synced with another peer that has called `disableSyncWithV3`, etc.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/4.0.0-beta1/api-reference/","date_released":"2023-01-26T23:37:37.230Z"},"3.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/android/Ditto/3.0.4/api-reference/","date_released":"2023-01-28T00:10:06.407Z"},"3.0.5":{"description":"- Changed: some threads spawned by the SDK no longer wait up to 30 seconds before being stopped.\\n- Changed: added more logging when a peer is unable to connect to another peer because of no overlapping supported protocol versions.\\n- Fixed: replication hanging under some circumstances, especially WebSocket connections to Big Peer","api_reference_docs_url":"https://software.ditto.live/android/Ditto/3.0.5/api-reference/","date_released":"2023-03-01T05:31:26.129Z"},"3.0.6":{"description":"- Fixed: Issue where Ditto instance using `OnlinePlayground` identity doesn\'t shut down properly\\n- Fixed: Potential crash on Windows and Linux from invoking `startSync()` if LAN transport is enabled.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/3.0.6/api-reference/","date_released":"2023-03-16T01:00:24.190Z"},"4.0.0":{"description":"- Added: AddWins removes will now be used if `disableSyncWithV3` has been called on the `Ditto` object or the a peer has synced with another peer that has called `disableSyncWithV3`, or they have synced with another peer that has called `disableSyncWithV3`, etc.\\n- Changed: If a problem occurs with an app\'s authentication webhook, the Small Peer that is trying to authenticate will log more detailed information for the developer.\\n- Changed: old multi-hop connections are now automatically disconnected when direct connections are established with peers, freeing up unneeded resources faster.\\n- Changed: reduced severity level for some routine log statements which were previously emitted at a WARN level.\\n- Fixed: some threads spawned by the SDK no longer wait up to 30 seconds before being stopped.\\n- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.\\n- Fixed: replication hanging under some circumstances, especially WebSocket connections to Big Peer\\n- Fixed: potential crash when stopping and restarting WiFi transport very rapidly\\n- Fixed: attempt to sync with the cloud before the user requests it with `startSync()`\\n- Removed: made a number of erroneously public constants and types internal or private.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/4.0.0/api-reference/","date_released":"2023-03-22T22:48:53.414Z"},"4.0.1":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/4.0.1/api-reference/","date_released":"2023-04-06T18:54:11.831Z"},"3.0.7":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/android/Ditto/3.0.7/api-reference/","date_released":"2023-04-07T16:28:10.249Z"}}},"cpp-ios":{"DittoKit":{"latest":{"description":"* Initial release of the SDK","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoKit/0.1.0/api-reference/","date_released":"2019-12-05T16:36:03.940Z"},"0.1.0":{"description":"* Initial release of the SDK","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoKit/0.1.0/api-reference/","date_released":"2019-12-05T16:36:03.940Z"}},"DittoSyncKit":{"latest":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"},"1.0.0-alpha5":{"description":"* Added a new intermediate security identity for a shared secret key. This is a simplistic authentication mode which is normally only suitable for private apps where all the users and devices are trusted. \\n* Fixed an issue that prevented Counter values from syncing correctly\\n* Renamed DittoAttachmentStatus to DittoAttachmentFetchEvent and subsequently Incomplete status to Progre\\nss.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha5/api-reference/","date_released":"2020-11-23T21:22:41.601Z"},"1.0.0-alpha6":{"description":"* Performance and stability improvements.\\n* Fix default data insertion such that merge semantics are consistent and\\n  duplicate data isn\'t created.\\n* Fixed a bug where documents containing attachments syncing to an instance of\\n  the C++ SDK could lead to a crash.\\n* Upgrade nlohmann json header from 3.7.0 to 3.9.1.\\n* Added `set_custom_log_cb` and `set_log_file` method calls to `Log` class to\\n  allow provision of a custom logging callback function, and a file path\\n  that logs should be directed to.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha6/api-reference/","date_released":"2020-12-15T01:00:39.148Z"},"1.0.0-alpha7":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"}},"Ditto":{"1.0.0-alpha8":{"description":"* Site IDs, which make up part of a Ditto identity object, are now unsigned,\\n64-bit integers instead of unsigned 32-bit integers.\\n* Fix a crash that could occur if an offset with a value greater than the number\\nof matching documents was provided.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.0-alpha8/api-reference/","date_released":"2021-01-22T15:09:01.907Z"},"latest":{"description":"* Added a Linux x86_64 version of the C++ to the group of published C++ SDKs.\\n* Improved debug logging.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"},"1.0.0-alpha9":{"description":"* Fixed a bug where mDNS advertising may continue after Ditto is stopped.\\n* Fixed a hang that could occur creating an attachment fetcher while requesting many attachments at once.\\n* Fixed sync failure when there are multiple overlapping subscriptions or live queries with the same query string for the same collection.\\n* Fixed a potential crash and other sync failures that could occur under certain conditions.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.0-alpha9/api-reference/","date_released":"2021-02-05T00:58:10.294Z"},"1.0.0":{"description":"* This release is not compatible with any previous SDK releases. There are a\\nnumber of breaking changes both in terms of the SDK API and in terms of the\\ninternal systems used by the SDK to perform operations such as synchronization.\\nIf you have previously made use of the Ditto SDK and wish to update to this\\nversion then note that you will need to delete all existing Ditto data otherwise\\nyou will run into errors. If you have existing data that you need to keep then\\nplease contact us and we can advise you as to how you can migrate your data.\\n* The most notable API breaking changes are:\\n  * Document IDs are no longer restricted to just strings. You can now create\\n    a document ID that is a string, integer, boolean, array, map, or null. This\\n    means that when making `find_by_id` or `insert` calls you now need to\\n    provide a `DocumentId` object rather than a string. Similarly, when you\\n    access a document\'s ID it will now return a `DocumentId` object instead of a\\n    string.\\n  * The `start()` and `stop()` functions on the `Ditto` object have been renamed\\n    to `start_sync()` and `stop_sync()` respectively. They now also don\'t accept\\n    any arguments. If you wish to specify which transports you would like the\\n    Ditto SDK to make use of (along with any configuration that they might\\n    require) you now need to use the `set_transport_config` function on the\\n    `Ditto` object, and pass to that a transport config object. The default\\n    transports that will be enabled are still the same as they were in previous\\n    releases of the SDK though, so if you have no custom requirements then you\\n    can simply change your `start()` call to `start_sync()`.\\n* Lots of performance improvements and bug fixes.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.0/api-reference/","date_released":"2021-04-22T00:29:50.320Z"},"1.0.1":{"description":"* If you provide an invalid query then you will now get a better error message.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.1/api-reference/","date_released":"2021-05-04T16:02:44.151Z"},"1.0.2":{"description":"* Add support for subscripting `DocumentId`s in order to get nested values when\\na document ID is based on an array or a map.\\n* Deprecated `.to_native()` on `DocumentId`. You should use `.value()` instead.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.2/api-reference/","date_released":"2021-05-20T21:39:10.588Z"},"1.0.3":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.3/api-reference/","date_released":"2021-06-10T16:34:52.104Z"},"1.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.4/api-reference/","date_released":"2021-06-11T22:36:42.265Z"},"1.0.5":{"description":"* Added a new `find` function that accepts a query containing placeholders in\\n  the form of `$args.my_arg` along with a map of query arguments in the form of\\n  `{ \\"my_arg\\": \\"some value\\" }`. The placeholders in the query will be replaced\\n  by a query-appropriate representation of the relevant value from the map of\\n  query arguments.\\n\\n  For example, a query of `color == $args.color` with a query arguments map of\\n  `{ \\"color\\": \\"red\\" }` would internally be treated as a query of:\\n  `color == \\"red\\"`.\\n* Added the ability to get a hash and/or a mnemonic (string) representation of\\n  the matching documents from a live query event. This means you can do\\n  something like this:\\n\\n  ```cpp\\n  auto live_query = collection.find_all().observe(LiveQueryEventHandler{\\n        [&](std::vector<Document> docs, LiveQueryEvent event) {\\n            event.hash(docs); // e.g. `1950015808188223905`\\n            event.hash_mnemonic(docs); // e.g. `locate-quality-tina--helena-remote-cat`\\n            // ...\\n      });\\n  ```\\n* Fix for using floats in queries.\\n* Accessing the `store` property of a `Ditto` instance will no longer throw an\\n  error if you have not yet activated your `Ditto` instance with a valid license\\n  token.\\n* Deprecated `set_access_license` and added a new function, `set_license_token`,\\n  which will throw an appropriate exception if your provided license token is\\n  expired or invalid somehow.\\n* Deprecated `start_sync` and added a new function, `try_start_sync`, which will\\n  throw an exception if your `Ditto` instance hasn\'t yet been activated via a\\n  successful call to `set_license_token`.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.5/api-reference/","date_released":"2021-06-25T22:36:18.096Z"},"1.0.6":{"description":"* Add `value` accessor on `DocumentPath`, `MutableDocumentPath`, and\\n`DocumentIdPath` types to allow accessing a nested value in a document/ID as a\\n`nlohmann::json`.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.6/api-reference/","date_released":"2021-07-08T18:22:41.809Z"},"1.0.7":{"description":"* Improve SDK API documentation extensively\\n* Fix crash that can occur if a Ditto `Identity` is passed by value\\n* Fix bug where sync may fail if an unusually long `deviceName` is configured","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.7/api-reference/","date_released":"2021-07-22T23:38:10.554Z"},"1.0.8":{"description":"* Added a Linux x86_64 version of the C++ to the group of published C++ SDKs.\\n* Improved debug logging.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"}}},"dotnet":{"DittoSharp":{"latest":{"description":"* Fixed an issue where extensive writes can cause a session time-out","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.4.0-alpha5/api-reference/","date_released":"2020-09-25T04:21:37.749Z"},"0.1.0-alpha3":{"description":"* Sorted out the packaging so that installing the SDK doesn\'t require any extra\\n  actions after installation.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.1.0-alpha3/api-reference/","date_released":"2020-06-29T21:04:19.973Z"},"0.1.0-alpha4":{"description":"* Added the licenses of the dependencies used by the SDK to the NuGet package","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.1.0-alpha4/api-reference/","date_released":"2020-06-30T09:37:48.340Z"},"0.1.1-alpha1":{"description":"Compatibility update.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.1.1-alpha1/api-reference/","date_released":"2020-07-18T15:38:20.478Z"},"0.1.1-alpha2":{"description":"Further compatibility updates.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.1.1-alpha2/api-reference/","date_released":"2020-07-20T08:48:07.767Z"},"0.3.1-alpha1":{"description":"Compatibility update for 0.3.1 releases.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.3.1-alpha1/api-reference/","date_released":"2020-07-20T21:11:27.277Z"},"0.3.4-alpha1":{"description":"* Fixed a bug with query compilation where integer literals in the query would\\nlead to a query compilation failure.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.3.4-alpha1/api-reference/","date_released":"2020-08-11T07:45:19.205Z"},"0.3.5-alpha1":{"description":"* Fixed an issue where inserting data as default data (setting the `isDefault`\\nparameter to true) could lead to data that would not merge as expected.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.3.5-alpha1/api-reference/","date_released":"2020-09-04T20:25:28.669Z"},"0.4.0-alpha1":{"description":"* Note that this is a release with breaking changes, even just in terms of\\nclients running 0.4.0 not being able to communicate with clients running 0.3.X\\nreleases.\\n* Fixes for memory leaks.\\n* Performance improvements.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.4.0-alpha1/api-reference/","date_released":"2020-09-09T21:18:55.927Z"},"0.4.0-alpha2":{"description":"* Fix a potential crash when working with attachments.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.4.0-alpha2/api-reference/","date_released":"2020-09-11T09:25:30.221Z"},"0.4.0-alpha3":{"description":"* Fix disposal/clean-up of `DittoAttachmentFetcher` objects.\\n* Add support for Linux 64-bit platforms.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.4.0-alpha3/api-reference/","date_released":"2020-09-16T23:24:20.678Z"},"0.4.0-alpha4":{"description":"* Fixes an issue where deletes might not propagate correctly in a multi-hop mesh","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.4.0-alpha4/api-reference/","date_released":"2020-09-18T01:01:44.857Z"},"0.4.0-alpha5":{"description":"* Fixed an issue where extensive writes can cause a session time-out","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSharp/0.4.0-alpha5/api-reference/","date_released":"2020-09-25T04:21:37.749Z"}},"DittoSyncKit":{"latest":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"},"1.0.0-alpha1":{"description":"* Note that this is a release with breaking changes and clients using releases\\nin the 1.0 series will not be able to communicate with clients running a version\\nthat is anything less than 1.0. This should hopefully not be an issue because\\nthis release of the SDK has changed the name to be DittoSyncKit as opposed to\\nDittoSharp and the namespace has gone from DittoSharp to Ditto.SyncKit.\\n* Lots of performance improvements and some bug fixes.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha1/api-reference/","date_released":"2020-10-09T17:53:42.857Z"},"1.0.0-alpha2":{"description":"Fixed several potential issues with attachment fetching that may result in the fetch callback not firing.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha2/api-reference/","date_released":"2020-10-14T18:01:39.315Z"},"1.0.0-alpha3":{"description":"* Added new observeWithNextSignal API to allow the application to control the delivery of the next observe callback ev\\nent.\\n* Fixed several issues related to attachments that could delay sync.\\n* Simplified log statements","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha3/api-reference/","date_released":"2020-11-04T08:48:18.691Z"},"1.0.0-alpha4":{"description":"* Fix issue where attachments could stop being fetched incorrectly.\\n* Introduce a `DittoLogger` class with various log-related functionality to make\\n  logging easier and more feature-rich.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha4/api-reference/","date_released":"2020-11-09T18:02:18.392Z"},"1.0.0-alpha5":{"description":"* Added a new intermediate security identity for a shared secret key. This is a simplistic authentication mode which is normally only suitable for private apps where all the users and devices are trusted. \\n* Fixed an issue that prevented Counter values from syncing correctly\\n* Renamed DittoAttachmentStatus to DittoAttachmentFetchEvent and subsequently Incomplete status to Progre\\nss.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha5/api-reference/","date_released":"2020-11-23T20:30:04.206Z"},"1.0.0-alpha6":{"description":"* Performance and stability improvements.\\n* Fix default data insertion such that merge semantics are consistent and\\n  duplicate data isn\'t created.","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha6/api-reference/","date_released":"2020-12-15T01:00:39.148Z"},"1.0.0-alpha7":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/dotnet/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"}},"Ditto":{"1.0.0-alpha8":{"description":"* Site IDs, which make up part of a Ditto identity object, are now unsigned,\\n64-bit integers instead of unsigned 32-bit integers.\\n* Fix a crash that could occur if an offset with a value greater than the number\\nof matching documents was provided.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.0-alpha8/api-reference/","date_released":"2021-01-22T15:09:01.907Z"},"latest":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/4.0.1/api-reference/","date_released":"2023-04-06T18:54:11.831Z"},"1.0.0-alpha9":{"description":"* The exact version of the Ditto SDK can now be retrieved using the `ditto.SDKVersion` property.\\n* Fixed a bug where mDNS advertising may continue after Ditto is stopped.\\n* Fixed a hang that could occur creating an attachment fetcher while requesting many attachments at once.\\n* Fixed sync failure when there are multiple overlapping subscriptions or live queries with the same query string for the same collection.\\n* Fixed a potential crash and other sync failures that could occur under certain conditions.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.0-alpha9/api-reference/","date_released":"2021-02-05T00:58:10.294Z"},"1.0.0":{"description":"* This release is not compatible with any previous SDK releases. There are a\\nnumber of breaking changes both in terms of the SDK API and in terms of the\\ninternal systems used by the SDK to perform operations such as synchronization.\\nIf you have previously made use of the Ditto SDK and wish to update to this\\nversion then note that you will need to delete all existing Ditto data otherwise\\nyou will run into errors. If you have existing data that you need to keep then\\nplease contact us and we can advise you as to how you can migrate your data.\\n* The most notable API breaking changes are:\\n  * Document IDs are no longer restricted to just strings. You can now create\\n    a document ID that is a string, integer, boolean, array, map, or null. This\\n    means that when making `FindByID` or `insert` calls you now need to provide\\n    a `DittoDocumentID` object rather than a string. Similarly, when you access\\n    a document\'s ID it will now return a `DittoDocumentID` object instead of a\\n    string.\\n  * The `Start()` and `Stop()` functions on the `Ditto` object have been renamed\\n    to `StartSync()` and `StopSync()` respectively. They now also don\'t accept\\n    any arguments. If you wish to specify which transports you would like the\\n    Ditto SDK to make use of (along with any configuration that they might\\n    require) you now need to use the `SetTransportConfig` function on the\\n    `Ditto` object, and pass to that a transport config object. The default\\n    transports that will be enabled are still the same as they were in previous\\n    releases of the SDK though, so if you have no custom requirements then you\\n    can simply change your `Start()` call to `StartSync()`.\\n* Lots of performance improvements and bug fixes.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.0/api-reference/","date_released":"2021-04-22T00:29:50.320Z"},"1.0.1":{"description":"* If you provide an invalid query then you will now get a better error message.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.1/api-reference/","date_released":"2021-05-04T16:02:44.151Z"},"1.0.2":{"description":"* Add support for subscripting `DITDocumentID`s in order to get nested values\\nwhen a document ID is based on an array or a dictionary.\\n* Deprecated `.ToNative()` on `DittoDocumentID`. You should use `.Value`\\ninstead.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.2/api-reference/","date_released":"2021-05-20T21:39:10.588Z"},"1.0.3":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.3/api-reference/","date_released":"2021-06-10T16:34:52.104Z"},"1.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.4/api-reference/","date_released":"2021-06-11T22:36:42.265Z"},"1.0.5":{"description":"* Added a new `find` function that accepts a query containing placeholders in\\n  the form of `$args.my_arg` along with a map of query arguments in the form of\\n  `{ \\"my_arg\\": \\"some value\\" }`. The placeholders in the query will be replaced\\n  by a query-appropriate representation of the relevant value from the map of\\n  query arguments.\\n\\n  For example, a query of `color == $args.color` with a query arguments map of\\n  `{ \\"color\\": \\"red\\" }` would internally be treated as a query of:\\n  `color == \\"red\\"`.\\n* Added the ability to get a hash and/or a mnemonic (string) representation of\\n  the matching documents from a live query event. This means you can do\\n  something like this:\\n\\n  ```dotnet\\n  var liveQuery = collection.FindAll().Observe((docs, event) =>\\n  {\\n      event.Hash(docs); // e.g. `1950015808188223905`\\n      event.HashMnemonic(docs); // e.g. `locate-quality-tina--helena-remote-cat`\\n      // ...\\n  });\\n  ```\\n* Fix for using floats in queries.\\n* Accessing the `store` property of a `Ditto` instance will no longer throw an\\n  error if you have not yet activated your `Ditto` instance with a valid license\\n  token.\\n* Deprecated `SetAccessLicense` and added a new function, `SetLicenseToken`,\\n  which will throw an appropriate exception if your provided license token is\\n  expired or invalid somehow.\\n* Deprecated `StartSync` and added a new function, `TryStartSync`, which will\\n  throw an exception if your `Ditto` instance hasn\'t yet been activated via a\\n  successful call to `SetLicenseToken`.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.5/api-reference/","date_released":"2021-06-25T22:36:18.096Z"},"1.0.6":{"description":"* Add `Value` accessor on `DittoDocumentPath`, `DittoMutableDocumentPath`, and\\n`DittoDocumentIDPath` types to allow accessing a nested value in a document/ID\\nas an `object`.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.6/api-reference/","date_released":"2021-07-08T18:22:41.809Z"},"1.0.7":{"description":"* Fix bug where sync may fail if an unusually long `deviceName` is configured","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.7/api-reference/","date_released":"2021-07-22T23:38:10.554Z"},"1.0.8":{"description":"* Improved debug logging.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"},"1.0.9":{"description":"* Fixed an issue where `Ditto.dll` would fail to be loaded.\\n* Updated the `SharedKey` identity to allow a custom working directory to be provided.\\n* Fixed `default` construction of `DittoIdentity` in `new Ditto()`.\\n* Added support for getting information about all of the collections that the device is aware of. This is achieved by accessing `collections()` through the store object and then using the same sort of API used when getting documents in collections, i.e. `Exec/Observe/etc`.\\n* Added multicast as a transport option to the `LAN` config part of `TransportConfig`.\\n* Added new identity types: `Online` and `OnlinePlayground.` An `Online` identity should be used when running Ditto in secure production mode, logging on to Ditto Cloud, or using an on-premises authentication server. User permissions are centrally managed. Sync will not work until a successful login has occurred. An `OnlinePlayground` identity should be used when you want to test a Ditto Cloud app without authentication (\\"Playground mode\\"). This mode offers no security and must only be used for development.\\n* The `Production` identity has been renamed to `Manual`.\\n* Added a `DittoAuthenticator` type, accessible via the `Ditto` object, which allows you to perform login operations when you\'re using an `Online` identity.\\n* Similarly, added a `DittoAuthenticationDelegate` type that needs to be used when using an `Online` identity.\\n* Report an error if more than one Ditto instance is started using the same working directory.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.9/api-reference/","date_released":"2021-09-03T22:38:24.690Z"},"1.0.10":{"description":"* Fix to stop a change in site ID from leading to an unnecessary error.\\n* Improve handling of persisted authentication data. Note that this might lead\\n  to a one-off change to a peer\'s site ID if you weren\'t and continue to not be\\n  specifying an explicit site ID when creating your identity.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.10/api-reference/","date_released":"2021-09-10T16:21:51.194Z"},"1.0.11":{"description":"- Fixed `Update` call when chained to a `FindByID` call where no document with the provided ID exists.\\n- Added `WriteStrategy` enum.\\n- Added method `InsertWithStrategy()` to `DittoCollection`, allowing to specify the behavior when inserting a document with an ID that matches the ID of a document already in the store.\\n- Added `IsAuthenticated()` method and `UserId` property to `DittoAuthenticator`.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.11/api-reference/","date_released":"2021-10-08T05:09:27.624Z"},"1.0.12":{"description":"- Added `global` section to `TransportConfig` allowing P2P sync to be contained within certain groups of devices by putting them in the same \\"sync group\\".","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.12/api-reference/","date_released":"2021-10-18T10:00:50.921Z"},"1.0.13":{"description":"- Changed `DittoIdentity`\'s `appID` construction parameter to be of type `string` instead of `Guid`.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.13/api-reference/","date_released":"2021-10-18T17:02:38.549Z"},"1.0.14":{"description":"* Add support for array projections to DittoQL.\\n* Deprecate the `Online` identity in favor of the new `OnlineWithAuthentication`\\n  identity.\\n* Deprecate the `Development` identity in favor of the new `OfflinePlayground`\\n  identity.\\n* Deprecate the `Authenticator` property on `Ditto` in favor of an `Auth`\\n  property.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.14/api-reference/","date_released":"2021-10-25T08:31:34.911Z"},"1.0.15-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.15-alpha1/api-reference/","date_released":"2021-10-27T10:33:50.885Z"},"1.0.15":{"description":"* Ensure that when performing a `sort` that if a document that matches the\\n  filter specified via the accompanying `find` call doesn\'t have the key\\n  specified in the `sort` expression then it won\'t lead to an error. Now, if\\n  you\'re sorting in a descending order then the documents without the key\\n  specified in the `sort` will appear at the end of the set of results, after\\n  all of the documents that do have the key present. If you\'re sorting in an\\n  ascending order then the documents without the `sort` key will appear first in\\n  the set of documents, before all of the documents that do contain the `sort`\\n  key.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.15/api-reference/","date_released":"2021-11-05T22:03:49.597Z"},"1.0.16":{"description":"* Fix an issue with live queries that involved a limit, no offset, at least one\\n  document being deleted, and some other conditions being met. Live queries that\\n  met these conditions could report incorrect sets of matching documents.\\n* Fix an issue that could potentially lead to an infinite loop in the\\n  replication system, meaning no sync progress would be made.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.16/api-reference/","date_released":"2021-11-19T22:39:48.766Z"},"1.0.17":{"description":"* Fix an issue with write strategies not working correctly. Unexpected results\\n  could occur when performing sequences of operations on documents.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.17/api-reference/","date_released":"2021-11-26T00:11:42.917Z"},"1.0.18-alpha1":{"description":"* Fixed an issue where document IDs that were specified inside the document\'s\\n  value as opposed to being specified explicitly (as a separate argument to\\n  `insert`) weren\'t being processed correctly, potentially leading to bugs with\\n  merge and overwrite behaviors.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.18-alpha1/api-reference/","date_released":"2021-12-08T17:25:36.987Z"},"1.0.18-alpha2":{"description":"* Improve attachment sync performance.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.18-alpha2/api-reference/","date_released":"2021-12-14T16:32:13.955Z"},"1.0.18":{"description":"* Reduced the opportunity for rapid memory growth in some scenarios.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.18/api-reference/","date_released":"2021-12-20T13:22:16.631Z"},"1.0.19":{"description":"- Fixed: collections were not appearing in the data browser under certain permission configurations.\\n- Fixed: race condition when subscriptions were configured from multiple threads in parallel (sometimes leading to a crash).","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.0.19/api-reference/","date_released":"2021-12-23T20:42:05.711Z"},"1.1.0":{"description":"- Changed: improved peer-to-peer algorithms to create meshes that are more efficient and diverse.\\n- Changed: improved routing algorithms for more efficiency.\\n- Changed: improved performance of query parsing.\\n- Added: property `IsSyncActive` to class `Ditto`.\\n- Added: method `Logout()` to class `DittoAuthenticator`.\\n- Added: set of APIs to observe authentication status (see API reference for `DittoAuthenticator` and `DittoAuthenticationDelegate`).\\n- Added: method `Upsert()` to classes `DittoCollection` and `DittoScopedWriteTransaction` (as a replacement for `Insert()` & friends) which by default merges the newly inserted document if one with the same ID already exists.\\n- Added: property `DeviceName` to class `Ditto`.\\n- Deprecated: properties `IsAuthenticated` and `UserID` of class `DittoAuthenticator` in favor of newly introduced property `Status`.\\n- Deprecated: methods `Insert()` & frinds of classes `DittoCollection` and `DittoScopedWriteTransaction` in favor of newly introduced `Upsert()`.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.0/api-reference/","date_released":"2022-01-28T11:21:11.093Z"},"1.1.1":{"description":"- Changed: Optimized the performance of accessing the value of a `Document`\\n- Added: Experimental mesh roles API\\n  - Added: `SetMeshRole()` method to `DittoExperimental` class\\n  - Added: `SetPriorityForMeshRole()` to `DittoExperimental` class","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.1/api-reference/","date_released":"2022-02-12T05:38:19.843Z"},"1.1.2":{"description":"- Added: method `SetOfflineOnlyLicenseToken()` to class `Ditto` as replacement for now deprecated `SetLicenseToken()`.\\n- Deprecated: `SetLicenseToken()` of class `Ditto`, please use newly added `SetOfflineOnlyLicenseToken()` instead.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.2/api-reference/","date_released":"2022-02-28T14:36:18.966Z"},"1.1.3":{"description":"- Added: `OnlinePlaygroundV2` identity allowing for basic authentication for playgrounds\\n\\n- Deprecated: `OnlinePlayground` identity, use newly added `OnlinePlaygroundV2` instead\\n\\n- Fixed: document IDs are now validated when synced and removed if invalid (some of our early versions of the SDK stored malformed IDs under certain circumstances)","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.3/api-reference/","date_released":"2022-03-22T10:13:57.389Z"},"1.1.4":{"description":"- Changed: improved replication performance in some scenarios.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.4/api-reference/","date_released":"2022-04-08T06:25:26.110Z"},"1.1.5":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.5/api-reference/","date_released":"2022-04-08T08:00:56.519Z"},"1.1.6":{"description":"- Fixed: a correctness issue in replication when peer permissions changed in the middle of a replication exchange.\\n- Fixed: error when querying a collection and there was a type mismatch for a field being used in a comparison in the query. \\n- Fixed: restarting an app too quickly could lead to multiple connection attempts to rejoin peers in the mesh.\\n- Fixed: apps using `OnlinePlaygroundV2` identities could experience a one minute delay before peer-to-peer sync occurs.\\n- Changed: improvements to Ditto mesh performance via fastest-available-transport prioritization.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.6/api-reference/","date_released":"2022-05-09T12:04:39.210Z"},"1.1.7":{"description":"Synchronized version bump release.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.7/api-reference/","date_released":"2022-05-13T14:18:18.406Z"},"1.1.8":{"description":"- Fixed: Ditto with `OnlinePlaygroundV2` identity would fail to sync with the Big Peer if internet access isn\'t available at the time when Ditto is instantiated.\\n\\n- Fixed: cloud sync would stop working when setting a newly created transport config.\\n\\n- Added: a new `DittoTransportConditionChanged` event handler to `Ditto`, allowing to observe the status of network transports.\\n\\n- Deprecated: `DittoIdentity.token` and replaced with `DittoIdentity.Token`.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.8/api-reference/","date_released":"2022-06-03T07:13:20.811Z"},"1.1.9-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.9-alpha1/api-reference/","date_released":"2022-06-09T03:12:41.865Z"},"1.1.9":{"description":"- Changed: reduced CRDT memory overhead.\\n\\n- Changed: HTTP/WebSocket service now allows any origin for CORS, so it may be used from a webapp on localhost.\\n\\n- Changed: a Small Peer may now act as an authentication service on its HTTP transport.\\n\\n- Fixed: a peer using an online identity would fail to sync peer-to-peer after app restarts.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.9/api-reference/","date_released":"2022-06-16T01:27:09.703Z"},"1.1.10":{"description":"* Changed: reduced total memory overhead during sync.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.10/api-reference/","date_released":"2022-07-07T19:53:12.943Z"},"2.0.0-alpha1":{"description":"This is a preview release of Ditto v2. Full changelog will be provided with the official release.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/2.0.0-alpha1/api-reference/","date_released":"2022-07-20T11:55:36.278Z"},"2.0.0":{"description":"- Note: peers running `2.0.0` are able to sync with peers running at least version `1.1.8` of the SDK.\\n- Added: support for explicitly typing values as registers. This is via 2 new types: `DittoRegister` and `DittoMutableRegister`, and new `Register` value accessors added to `DittoDocumentPath` and `DittoMutableDocumentPath`.\\n- Added: `DittoCounter` and `DittoMutableCounter` types resembling the CRDT type underneath, which replace the old counter mechanics. A new `Counter` value accessor has been added to `DittoDocumentPath` and `DittoMutableDocumentPath`, which returns a `DittoCounter` or a `DittoMutableCounter` respectively, if one is present at the document path specified.\\n- Added: support for accessing and creating RGAs (Replicated Growable Arrays), which was the default CRDT type for arrays in Ditto v1. There are 2 new types: `DittoRGA` and `DittoMutableRGA` in v2, and new `RGA` value accessors added to `DittoDocumentPath` and `DittoMutableDocumentPath`. Note that these are deprecated though and arrays should instead be used in registers (which is now the default).\\n- Changed: arrays now default to being `Register` arrays. This means that when you want to update a property in a document that\'s an array you need to set the whole value as the new array. You can\'t perform mutating operations on an array in a document other than to fully replace it.\\n- Removed: deprecated `Ditto` property `Authenticator`. Please use the `Auth` property instead.\\n- Changed: renamed `Ditto` method `TryStartSync()` to `StartSync()`, which replaces the previously deprecated `StartSync()` method.\\n- Removed: deprecated `Ditto` methods `SetAccessLicense()` and `SetLicenseToken()`. Please use `SetOfflineOnlyLicenseToken()` instead.\\n- Removed: deprecated `DittoAuthenticator` property `UserId`. Please use `Status.UserID` instead.\\n- Removed: deprecated `DittoAuthenticator` method `IsAuthenticated()`. Please use `Status.IsAuthenticated()` instead.\\n- Removed: deprecated `DittoIdentity` property `token`. Please use `Token` instead.\\n- Changed: renamed `DittoIdentity` method `OnlinePlaygroundV2()` to `OnlinePlayground()`.\\n- Removed: deprecated identities `Development()` and `Online()`. Please use the available identities instead.\\n- Removed: deprecated `DittoDocumentID` method `ToNative()`. Please use the `Value` property instead.\\n- Removed: deprecated `DittoMutableDocumentPath` method `ReplaceWithCounter()`. Please use `Set(DittoCounter)` instead.\\n- Removed: deprecated `DittoMutableDocumentPath` method `Increment()`. Please use `DittoMutableCounter::Increment` instead.\\n- Removed: deprecated `DittoScopedWriteTransaction` methods `Insert()` and `InsertWithStrategy()`. Please use `Upsert()` instead.\\n- Removed: `DittoCollection` methods `Insert()` and `InsertWithStrategy()`. Please use `Upsert()` instead.\\n- Changed: `DittoCollection.Upsert` and `DittoScopedWriteTransaction.Upsert` are no longer `unsafe`.\\n- Removed: `DittoWriteStrategy.Overwrite`.\\n\\n### Known issues\\n\\n- Nested `DittoRGA` instances will not work properly.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/2.0.0/api-reference/","date_released":"2022-08-03T14:54:09.477Z"},"2.0.1":{"description":"- Fixed: `DittoCounter` constructors are now public.\\n- Added: support for Xamarin.iOS (physical devices).\\n- Added: support for peer-to-peer transports on macOS (Bluetooth LE & AWDL).","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/2.0.1/api-reference/","date_released":"2022-08-14T04:57:21.617Z"},"2.0.2":{"description":"- Changed: performing an `.exec()` call, outside the scope of a `Store.Write({ })` block, no longer tries to obtain a write transaction and instead uses a read transaction.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/2.0.2/api-reference/","date_released":"2022-08-27T01:58:42.458Z"},"2.0.3":{"description":"- Changed: presence data is no longer synced with the big peer.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/2.0.3/api-reference/","date_released":"2022-08-31T17:20:10.069Z"},"2.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/2.0.4/api-reference/","date_released":"2022-09-01T18:31:12.160Z"},"2.0.5":{"description":"- Fixed: a very rare deadlock when running on macOS or iOS and starting sync immediately after creating the Ditto instance.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/2.0.5/api-reference/","date_released":"2022-09-08T22:20:09.225Z"},"1.1.11":{"description":"- Fixed: a very rare deadlock when running on macOS or iOS and starting sync immediately after creating the Ditto instance.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/1.1.11/api-reference/","date_released":"2022-09-09T23:11:14.194Z"},"2.0.6":{"description":"- Fixed: Ensure Ditto internal auth client is shut down correctly when it\'s no longer needed\\n- Added: Bluetooth LE transport for P2P connections on Windows\\n- Added: Bluetooth LE transport for P2P connections on Linux","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/2.0.6/api-reference/","date_released":"2022-09-15T23:46:31.617Z"},"2.0.7":{"description":"- Changed: New lock file ensures we have only 1 SDK instance per working dir\\n- Fixed: Reduced the amount of disk space used by sync metadata by up to 50% in some cases","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/2.0.7/api-reference/","date_released":"2022-09-23T03:02:34.821Z"},"2.0.8":{"description":"- Added: `AppId()` method to `Ditto` class\\n- Added: `PersistenceDirectory` method to `Ditto` class\\n- Fixed: Windows BLE connections are more stable and recover better","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/2.0.8/api-reference/","date_released":"2022-10-28T00:14:53.152Z"},"2.1.0":{"description":"- Added: `IDisposable` conformance to `Ditto`. Sync shutdown and resource cleanup can now be done by calling `Dispose()`\\n- Deprecated: `Observe` and `ObserveWithNextSignal` methods of `DittoPendingCollectionsOperation`, `DittoPendingCursorOperation` and `DittoPendingIDSpecificOperation`. Use the corresponding `ObserveLocal` or `ObserveLocalWithNextSignal` along with a separate call to `Subscribe` instead. See https://docs.ditto.live/csharp/common/concepts/syncing-data#subscribe","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/2.1.0/api-reference/","date_released":"2022-11-02T23:51:32.170Z"},"3.0.0-alpha1":{"description":"- Removed: the `DittoRGA` constructor. You cannot create new RGAs.\\n- Removed: the deprecated `DittoMutableRGA` type. You cannot mutate existing RGAs.\\n- Renamed: `DittoDocumentID` -> `DittoDocumentId`\\n- Renamed: `DittoDocumentIDPath` -> `DittoDocumentIdPath`\\n- Renamed: `DittoPendingIDSpecificOperation ` -> `DittoPendingIdSpecificOperation`\\n- Renamed: `DittoWriteTransactionPendingIDSpecificOperation` -> `DittoWriteTransactionPendingIdSpecificOperation`\\n- Renamed: `DittoAuthenticator` property `UserID ` -> `UserId`\\n- Renamed: `DittoIdentity` field `AppID` -> `AppId`\\n- Renamed: `appId` and `siteId` parameters in `DittoIdentity` constructors\\n- Renamed: `userId` parameter in `DittoAuthenticationStatus` constructor\\n- Renamed: `DittoDocumentIDCBORConverter` -> `DittoDocumentIdCBORConverter`\\n- Added: `Dispose()` method to `DittoAuthenticationStatusObserver`, making it `IDisposable`.\\n- Deprecated: `DittoAuthenticationStatusObserver.Stop()`, please use the newly added `DittoAuthenticationStatusObserver.Dispose()` method.\\n- Removed: the `PersistenceDir` argument from all `Identity` class methods.\\n- Added: property `Presence` to the class Ditto.\\n- Added: `DittoPresence` type with `observe` and `exec` methods.\\n- Added: `DittoPresenceGraph` type, which represents local and remote peers in the Ditto network.\\n- Added: `DittoConnectionType` type.\\n- Deprecated: `ObservePeers` method.\\n- Removed: `Observe()` and `ObserveWithNextSignal()` methods of `DittoPendingCollectionsOperation`, `DittoPendingCursorOperation`, and `DittoPendingIdSpecificOperation`. Please use the corresponding `ObserveLocal()` and `ObserveLocalWithNextSignal()` variants along with a separate call to `Subscribe()` instead. See https://docs.ditto.live/csharp/common/concepts/syncing-data#subscribe\\n- Added: `DittoDiskUsage` type with `Observe` and `Exec` methods.\\n- Added: `DiskUsage` property to `Ditto`.\\n- Added: `DiskUsage` property to `DittoStore`.\\n- Changed: performance improvements.\\n- Added `disableSyncWithV2` method to `Ditto`. This allows you to explicitly opt-in to disabling the ability to sync with Ditto peers running any version of the SDK in the v2 series of releases. Assuming this succeeds then this peer will only be able to sync with other peers using SDKs in the v3 series of releases. Note that this disabling of sync spreads to peers that sync with a peer that has disabled, or has (transitively) had disabled, syncing with v2 SDK peers.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/3.0.0-alpha1/api-reference/","date_released":"2022-12-01T20:01:08.479Z"},"3.0.0-alpha2":{"description":"- Improved: reliability if app crashes occur while persisting authentication data.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/3.0.0-alpha2/api-reference/","date_released":"2022-12-06T16:01:43.035Z"},"3.0.0-alpha3":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/3.0.0-alpha3/api-reference/","date_released":"2022-12-12T13:19:14.644Z"},"3.0.0":{"description":"- Removed: the `DittoRGA` constructor. You cannot create new RGAs.\\n- Removed: the deprecated `DittoMutableRGA` type. You cannot mutate existing RGAs.\\n- Renamed: `DittoDocumentID` -> `DittoDocumentId`\\n- Renamed: `DittoDocumentIDPath` -> `DittoDocumentIdPath`\\n- Renamed: `DittoPendingIDSpecificOperation ` -> `DittoPendingIdSpecificOperation`\\n- Renamed: `DittoWriteTransactionPendingIDSpecificOperation` -> `DittoWriteTransactionPendingIdSpecificOperation`\\n- Renamed: `DittoAuthenticator` property `UserID ` -> `UserId`\\n- Renamed: `DittoIdentity` field `AppID` -> `AppId`\\n- Renamed: `appId` and `siteId` parameters in `DittoIdentity` constructors\\n- Renamed: `userId` parameter in `DittoAuthenticationStatus` constructor\\n- Renamed: `DittoDocumentIDCBORConverter` -> `DittoDocumentIdCBORConverter`\\n- Added: `Dispose()` method to `DittoAuthenticationStatusObserver`, making it `IDisposable`.\\n- Deprecated: `DittoAuthenticationStatusObserver.Stop()`, please use the newly added `DittoAuthenticationStatusObserver.Dispose()` method.\\n- Removed: the `PersistenceDir` argument from all `Identity` class methods.\\n- Added: property `Presence` to the class Ditto.\\n- Added: `DittoPresence` type with `observe` and `exec` methods.\\n- Added: `DittoPresenceGraph` type, which represents local and remote peers in the Ditto network.\\n- Added: `DittoConnectionType` type.\\n- Deprecated: `ObservePeers` method.\\n- Removed: `Observe()` and `ObserveWithNextSignal()` methods of `DittoPendingCollectionsOperation`, `DittoPendingCursorOperation`, and `DittoPendingIdSpecificOperation`. Please use the corresponding `ObserveLocal()` and `ObserveLocalWithNextSignal()` variants along with a separate call to `Subscribe()` instead. See https://docs.ditto.live/csharp/common/concepts/syncing-data#subscribe\\n- Added: `DittoDiskUsage` type with `Observe` and `Exec` methods.\\n- Added: `DiskUsage` property to `Ditto`.\\n- Added: `DiskUsage` property to `DittoStore`.\\n- Changed: performance improvements.\\n- Added: `disableSyncWithV2` method to `Ditto`. This allows you to explicitly opt-in to disabling the ability to sync with Ditto peers running any version of the SDK in the v2 series of releases. Assuming this succeeds then this peer will only be able to sync with other peers using SDKs in the v3 series of releases. Note that this disabling of sync spreads to peers that sync with a peer that has disabled, or has (transitively) had disabled, syncing with v2 SDK peers.\\n- Improved: reliability if app crashes occur while persisting authentication data.\\n- Improved: log increased detail to help debug blocked write transactions.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/3.0.0/api-reference/","date_released":"2022-12-16T13:38:16.056Z"},"3.0.1":{"description":"- Added: `RoutingHint ` property to `DittoGlobal` class.\\n- Added: `NO_PREFERRED_ROUTE_HINT` property to `DittoGlobal`, used internally by `DittoGlobal ` if no routing hint is specified.\\n- Changed: better readability of data sizes and durations in logs.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/3.0.1/api-reference/","date_released":"2023-01-14T02:57:17.847Z"},"4.0.0-alpha2":{"description":"* Added: `DisableSyncWithV3` functionality to `Ditto`. Calling this will permanently remove the ability for the device that it is called on to sync with devices running v3 of the SDK. It also means that the device will then start performing AddWins removes when calling `remove()`. Any other device running v4 of the SDK that syncs with a device that has called `disableSyncWithV3` (or has themselves synced with another device that has called `disableSyncWithV3`, etc - if any chain of syncing exists that involves a device that has called `disableSyncWithV3`) will also no longer be able to sync with v3 peers and will perform AddWins removes when calling `remove()`.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/4.0.0-alpha2/api-reference/","date_released":"2023-01-16T22:16:17.836Z"},"3.0.2":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/3.0.2/api-reference/","date_released":"2023-01-20T21:20:59.567Z"},"3.0.3-alpha2":{"description":"- Resolved an issue where presence evictions could deadlock on startup with large numbers of peers","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/3.0.3-alpha2/api-reference/","date_released":"2023-01-23T18:05:04.218Z"},"3.0.3":{"description":"- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/3.0.3/api-reference/","date_released":"2023-01-26T14:35:21.149Z"},"4.0.0-beta1":{"description":"- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.\\n- Fixed: AddWins removes will now be used if `disableSyncWithV3` has been called on the `Ditto` object or the a peer has synced with another peer that has called `disableSyncWithV3`, or they have synced with another peer that has called `disableSyncWithV3`, etc.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/4.0.0-beta1/api-reference/","date_released":"2023-01-26T23:37:37.230Z"},"3.0.4":{"description":"- Added: `NoPreferredRouteHint` property to `DittoGlobal` class\\n- Deprecated: `NO_PREFERRED_ROUTE_HINT` property in `DittoGlobal` class","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/3.0.4/api-reference/","date_released":"2023-01-28T00:10:06.407Z"},"3.0.5":{"description":"- Added: more specific `DittoFFIException` subclass of existing `DittoException`, which are thrown when there problems from the Ditto FFI layer.\\n- Changed: some threads spawned by the SDK no longer wait up to 30 seconds before being stopped.\\n- Changed: added more logging when a peer is unable to connect to another peer because of no overlapping supported protocol versions.\\n- Fixed: replication hanging under some circumstances, especially WebSocket connections to Big Peer","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/3.0.5/api-reference/","date_released":"2023-03-01T05:31:26.130Z"},"3.0.6":{"description":"- Fixed: .NET peers could be unable to properly decode attachment tokens from peers using the Rust SDK.\\n- Fixed: incorrect cleanup of SDK objects which can lead to crashes\\n- Fixed: Issue where Ditto instance using `OnlinePlayground` identity doesn\'t shut down properly\\n- Fixed: Potential crash on Windows and Linux from invoking `startSync()` if LAN transport is enabled.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/3.0.6/api-reference/","date_released":"2023-03-16T01:00:24.190Z"},"4.0.0":{"description":"- Added: AddWins removes will now be used if `disableSyncWithV3` has been called on the `Ditto` object or the a peer has synced with another peer that has called `disableSyncWithV3`, or they have synced with another peer that has called `disableSyncWithV3`, etc.\\n- Changed: If a problem occurs with an app\'s authentication webhook, the Small Peer that is trying to authenticate will log more detailed information for the developer.\\n- Changed: old multi-hop connections are now automatically disconnected when direct connections are established with peers, freeing up unneeded resources faster.\\n- Changed: reduced severity level for some routine log statements which were previously emitted at a WARN level.\\n- Fixed: some threads spawned by the SDK no longer wait up to 30 seconds before being stopped.\\n- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.\\n- Fixed: replication hanging under some circumstances, especially WebSocket connections to Big Peer\\n- Fixed: a possible crash if Ditto is configured with an invalid App ID. An error message is emitted instead.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/4.0.0/api-reference/","date_released":"2023-03-22T22:48:53.414Z"},"4.0.1":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/4.0.1/api-reference/","date_released":"2023-04-06T18:54:11.831Z"},"3.0.7":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/dotnet/Ditto/3.0.7/api-reference/","date_released":"2023-04-07T16:28:10.249Z"}}},"js":{"Ditto":{"1.0.8":{"description":"* Initial public *Beta* release of the JS SDK with the following constraints:\\n  * Web only for now. Node & Electron support will follow shortly.\\n  * Counters work only partially. Full support is in development.\\n  * No support for batch operations yet.\\n  * No support for attachments yet.\\n\\n* Known bugs and issues:\\n  * `runGarbageCollection()` doesn\'t work and throws an exception.\\n  * `observeWithNextSignal()` & `observeLocalWithNextSignal()` do not work and\\n    throw an exception.\\n  * Longer running queries might block the JS event loop.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"},"latest":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/4.0.1/api-reference/","date_released":"2023-04-06T18:54:11.832Z"},"1.0.9":{"description":"* Added support for attachments.\\n* When calling `insert` you should no longer nest the document\'s content under the `value` key. Instead the object that you provide to `insert` will directly be used to form the contents of the document.\\n* Similarly, when using `observe` or `exec` functionality you will no longer have a `Document` type returned to you and instead will have a `DocumentLike` object, which represents the document\'s contents, returned to you. You can directly subscript this object to get values at the specified key path of the document.\\n* Enabled support for loading `ditto.wasm` from Ditto\'s CDN.\\n* Allow passing a \\"raw\\" primitive type, instead of requiring a `DocumentID`, to the `insert` and `findByID` functions.\\n* Added support for getting information about all of the collections that the device is aware of. This is achieved by accessing `collections()` through the store object and then using the same sort of API used when getting documents in collections, i.e. `exec/observe/etc`.\\n* Added multicast as a transport option to the `LAN` config part of `TransportConfig`.\\n* Added new identity types: `Online` and `OnlinePlayground.` An `Online` identity should be used when running Ditto in secure production mode, logging on to Ditto Cloud, or using an on-premises authentication server. User permissions are centrally managed. Sync will not work until a successful login has occurred. An `OnlinePlayground` identity should be used when you want to test a Ditto Cloud app without authentication (\\"Playground mode\\"). This mode offers no security and must only be used for development.\\n* The `Production` identity has been renamed to `Manual`.\\n* Added an `Authenticator` type, accessible via the `Ditto` object, which allows you to perform login operations when you\'re using an `Online` identity.\\n* Similarly, added an `AuthenticationHandler` type that needs to be used when using an `Online` identity.\\n* Report an error if more than one Ditto instance is started using the same working directory.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.9/api-reference/","date_released":"2021-09-03T22:38:24.690Z"},"1.0.10":{"description":"* Fix to stop a change in site ID from leading to an unnecessary error.\\n* Improve handling of persisted authentication data. Note that this might lead\\n  to a one-off change to a peer\'s site ID if you weren\'t and continue to not be\\n  specifying an explicit site ID when creating your identity.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.10/api-reference/","date_released":"2021-09-10T16:21:51.194Z"},"1.0.11":{"description":"- Fixed exception when creating a `Ditto` instance without providing a `path`.\\n- Added `WriteStrategy` type.\\n- Added option `writeStrategy` to method `insert()` of `Collection`, allowing to specify the behavior when inserting a document with an ID that matches the ID of a document already in the store.\\n- Added Node support for macOS/x86_64, Linux/x86_64 and Linux/ARMhf. Support for more OS/arch combinations will follow.\\n- Added method `value()` to `DocumentPath` and `MutableDocumentPath` allowing to access the value at the key-path represented by the receiver.\\n- Added static method `valueAt()` and corresponding (convenience) instance method `_valueAt()` to `Document` and `MutableDocument` allowing to access the value at a given key-path.\\n- Added static method `replaceWithCounterAt()` and corresponding (convenience) instance method `_replaceWithCounterAt()` to `MutableDocument` allowing to turn a property at a given key-path into a counter.\\n- Added static method `incrementCounterAt()` and corresponding (convenience) instance method `_incrementCounterAt()` to `MutableDocument` allowing to increment a counter property at a given key-path.\\n- Added `isAuthenticated()` method and `userID` property to `Authenticator`.\\n- Changed `at()` method of `DocumentPath` and `MutableDocumentPath` to also take a number (index).\\n- Changed `MutableDocument` proxy to return `undefined` for non-existing paths.\\n- Changed property `siteID` of relevant `Identity` variants to be optional and allow `0` to be passed.\\n- Deprecated `appName` in favor of `appID` for identities of type `development` and `sharedKey`.\\n- Deprecated `atIndex()` method of `DocumentPath` and `MutableDocumentPath` in favor of `at()`.\\n- Deprecated option `isDefault` for method `insert()` of `Collection` in favor of `writeStrategy`.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.11/api-reference/","date_released":"2021-10-08T05:09:27.624Z"},"1.0.12":{"description":"- Added `global` section to `TransportConfig` allowing P2P sync to be contained within certain groups of devices by putting them in the same \\"sync group\\".\\n- Fixed issues with key-paths containing dashes.\\n- Fixed issues with key-paths containing multiple subscript operators.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.12/api-reference/","date_released":"2021-10-18T10:00:50.921Z"},"1.0.13":{"description":"- Fixed serialization errors during authentication when running in the browser.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.13/api-reference/","date_released":"2021-10-18T17:02:38.549Z"},"1.0.14":{"description":"* Add support for array projections to DittoQL.\\n* Deprecate the `Online` identity in favor of the new `OnlineWithAuthentication`\\n  identity.\\n* Deprecate the `Development` identity in favor of the new `OfflinePlayground`\\n  identity.\\n* Add validation of all queries specified as part of `find()` calls.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.14/api-reference/","date_released":"2021-10-25T08:31:34.911Z"},"1.0.15-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.15-alpha1/api-reference/","date_released":"2021-10-27T10:33:50.886Z"},"1.0.15":{"description":"* Ensure that when performing a `sort` that if a document that matches the\\n  filter specified via the accompanying `find` call doesn\'t have the key\\n  specified in the `sort` expression then it won\'t lead to an error. Now, if\\n  you\'re sorting in a descending order then the documents without the key\\n  specified in the `sort` will appear at the end of the set of results, after\\n  all of the documents that do have the key present. If you\'re sorting in an\\n  ascending order then the documents without the `sort` key will appear first in\\n  the set of documents, before all of the documents that do contain the `sort`\\n  key.\\n* Fix a potential deadlock in relation to logging.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.15/api-reference/","date_released":"2021-11-05T22:03:49.598Z"},"1.0.16":{"description":"* Fix an issue with live queries that involved a limit, no offset, at least one\\n  document being deleted, and some other conditions being met. Live queries that\\n  met these conditions could report incorrect sets of matching documents.\\n* Fix an issue that could potentially lead to an infinite loop in the\\n  replication system, meaning no sync progress would be made.\\n* Expose `CollectionsEvent` as part of the public API.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.16/api-reference/","date_released":"2021-11-19T22:39:48.766Z"},"1.0.17":{"description":"* Fix an issue with write strategies not working correctly. Unexpected results\\n  could occur when performing sequences of operations on documents.\\n* Removed the `DocumentID` type and replaced it with `DocumentIDValue`.\\n* Fixed the `sort(...)` functionality not having an effect for live queries.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.17/api-reference/","date_released":"2021-11-26T00:11:42.918Z"},"1.0.18-alpha1":{"description":"* Fixed a bug where Ditto Cloud sync was not enabled by default for\\n  `Online`-based identities.\\n* Fixed an issue where document IDs that were specified inside the document\'s\\n  value as opposed to being specified explicitly (as a separate argument to\\n  `insert`) weren\'t being processed correctly, potentially leading to bugs with\\n  merge and overwrite behaviors.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.18-alpha1/api-reference/","date_released":"2021-12-08T17:25:36.988Z"},"1.0.18-alpha2":{"description":"* Improve attachment sync performance.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.18-alpha2/api-reference/","date_released":"2021-12-14T16:32:13.956Z"},"1.0.18":{"description":"* Reduced the opportunity for rapid memory growth in some scenarios.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.18/api-reference/","date_released":"2021-12-20T13:22:16.631Z"},"1.0.19":{"description":"- Fixed: collections were not appearing in the data browser under certain permission configurations.\\n- Fixed: race condition when subscriptions were configured from multiple threads in parallel (sometimes leading to a crash).\\n- Fixed: missing canonicalization step for IDs of inserted documents leading to multiple instances of documents with the \\"same\\" ID being stored in the DB.\\n\\n**IMPORTANT**: This fix only applies to newly inserted documents, documents inserted with an older version of the JavaScript SDK may still have multiple instances in the DB and replicated to other peers. We\'ll provide a proper migration for these in follow-up releases.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.0.19/api-reference/","date_released":"2021-12-23T20:42:05.711Z"},"1.1.0":{"description":"- Changed: improved peer-to-peer algorithms to create meshes that are more efficient and diverse.\\n- Changed: improved routing algorithms for more efficiency.\\n- Changed: improved performance of query parsing.\\n- Added: property `isSyncActive` to class `Ditto`.\\n- Added: method `logout()` to class `Authenticator`.\\n- Added: set of APIs to observe authentication status (see API reference for `Authenticator` and `AuthenticationHandler`).\\n- Added: method `upsert()` to class `Authenticator` (as a replacement for `insert()`) which by default merges the newly inserted document if one with the same ID already exists.\\n- Fixed: crashes when many insertions or removals were in flight (only WebAssembly were affected, i.e. when running in the browser).\\n- Fixed: high memory consumption and main thread blocking in certain edge cases.\\n- Fixed: type signature and API documentation for methods `loginWithToken()` and `loginWithCredentials()` of class `Authenticator`, where the second parameter should be `portal` instead of options. (The actual implementation itself was correct.)\\n- Deprecated: property `isSyncEnabled` of class `Ditto` in favor of the newly introduced `isSyncActive`.\\n- Deprecated: properties `isAuthenticated` and `userID` of class `Authenticator` in favor of newly introduced property `status`.\\n- Deprecated: method `insert()` in favor of newly introduced `upsert()`.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.0/api-reference/","date_released":"2022-01-28T11:21:11.095Z"},"1.1.1":{"description":"- Changed: Optimized the performance of accessing the value of a `Document`\\n- Changed: Make `identity` optional for `Ditto` constructor\\n- Added: `toJSON()` to `Document` and `MutableDocument`\\n- Added: Support for observing transport condition of websocket connections\\n- Fixed: Node process from exiting prematurely\\n- Fixed: Obscure exception if `appID` is not given for certain identities","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.1/api-reference/","date_released":"2022-02-12T05:38:19.845Z"},"1.1.2":{"description":"- Added: method `setOfflineOnlyLicenseToken()` to class `Ditto` as replacement for now deprecated `setLicenseToken()`.\\n- Deprecated: method `setLicenseToken()` of class `Ditto`, please use newly added `setOfflineOnlyLicenseToken()` instead.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.2/api-reference/","date_released":"2022-02-28T14:36:18.966Z"},"1.1.3":{"description":"- Added: `onlinePlaygroundV2` identity type and corresponding `IdentityOnlinePlaygroundV2` allowing for basic authentication for playgrounds\\n\\n- Deprecated: `onlinePlayground` identity type and corresponding `IdentityOnlinePlayground`, use newly added `ONLINE_PLAYGROUND_V2` and `IdentityOnlinePlaygroundV2` instead\\n\\n- Fixed: multiple retain cycles preventing `Ditto` instances from being properly garbage collected\\n\\n- Fixed: document IDs are now validated when synced and removed if invalid (some of our early versions of the SDK stored malformed IDs under certain circumstances)","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.3/api-reference/","date_released":"2022-03-22T10:13:57.390Z"},"1.1.4":{"description":"- Changed: improved replication performance in some scenarios.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.4/api-reference/","date_released":"2022-04-08T06:25:26.111Z"},"1.1.5":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.5/api-reference/","date_released":"2022-04-08T08:00:56.520Z"},"1.1.6":{"description":"- Fixed: a correctness issue in replication when peer permissions changed in the middle of a replication exchange.\\n- Fixed: error when querying a collection and there was a type mismatch for a field being used in a comparison in the query. \\n- Fixed: restarting an app too quickly could lead to multiple connection attempts to rejoin peers in the mesh.\\n- Fixed: apps using `OnlinePlaygroundV2` identities could experience a one minute delay before peer-to-peer sync occurs.\\n- Fixed: compatibility with packagers that perform static analysis to locate native Node modules, such as [Electron Forge](https://www.electronforge.io).\\n- Fixed: issues when inserting a value at a specific index in an array via `MutableDocument.pathAt()`.\\n- Changed: improvements to Ditto mesh performance via fastest-available-transport prioritization.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.6/api-reference/","date_released":"2022-05-09T12:04:39.211Z"},"1.1.7":{"description":"- Fixed: module not found warnings when bundling for the Web (via Webpack & other bundlers).","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.7/api-reference/","date_released":"2022-05-13T14:18:18.407Z"},"1.1.8":{"description":"- Fixed: Ditto with `onlinePlaygroundV2` identity would fail to sync with the Big Peer if internet access isn\'t available at the time when Ditto is instantiated.\\n\\n- Fixed: memory leak when observing collections.\\n\\n- Fixed: memory leak when observing peers.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.8/api-reference/","date_released":"2022-06-03T07:13:20.812Z"},"1.1.9-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.9-alpha1/api-reference/","date_released":"2022-06-09T03:12:41.866Z"},"1.1.9":{"description":"- Changed: reduced CRDT memory overhead.\\n\\n- Changed: HTTP/WebSocket service now allows any origin for CORS, so it may be used from a webapp on localhost.\\n\\n- Fixed: a peer using an online identity would fail to sync peer-to-peer after app restarts.\\n\\n- Changed: P2P transports were disabled by default for the JS SDK, while enabled for all other SDKs. Starting with this release, all P2P transports, that are available in the current environment, are enabled by default (i.e. on Node/Electron running on macOS, no P2P transports when running in the browser).","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.9/api-reference/","date_released":"2022-06-16T01:27:09.703Z"},"1.1.10":{"description":"* Changed: reduced total memory overhead during sync.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.10/api-reference/","date_released":"2022-07-07T19:53:12.943Z"},"2.0.0-alpha1":{"description":"This is a preview release of Ditto v2. Full changelog will be provided with the official release.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/2.0.0-alpha1/api-reference/","date_released":"2022-07-20T11:55:36.280Z"},"2.0.0":{"description":"- Added: `DocumentID` class representing a document ID.\\n- Added: property `id` to `Document` returning `DocumentID` (as opposed to `DocumentIDValue`).\\n- Changed: method `findByID()` of `Collection` to also accept `DocumentID` (in addition to `DocumentIDValue`).\\n- Changed: method `upsert()` of `Collection` to return `Promise<DocumentID>` instead of `Promise<DocumentIDValue>`.\\n- Changed type of property `docID` of `UpdateResult` from `DocumentIDValue` to `DocumentID` and adapted all `UpdateResult` factory methods.\\n- Changed: method `get()` of `UpdateResultsMap` to also accept `DocumentID` (in addition to `DocumentIDValue`).\\n- Changed: method `keys()` of `UpdateResultsMap` to return an array of `DocumentID`s instead of `DocumentIDValue`s.\\n- Removed: property `_id` from `Document` and `MutableDocument`, please use `id` and `DocumentID.value` instead.\\n- Removed: static method `stringForID()` of `Document`, please use `DocumentID.toString()` instead.\\n- Removed: static method `base64StringForID()` of `Document`, please use `DocumentID.toBase64String()` instead.\\n- Note: peers running `2.0.0` are able to sync with peers running at least version `1.1.8` of the SDK.\\n- Added: support for explicitly typing values as CRDT registers. This is via 2 new types: `Register` and `MutableRegister`, and a new `register` accessor added to `DocumentPath` and `MutableDocumentPath`.\\n- Changed: the `Counter` type has been split up into a `Counter` and `MutableCounter` type, which now resemble the CRDT type underneath and replace the old counter mechanics. A new `counter` accessor has been added to `DocumentPath` and `MutableDocumentPath`, which returns a `Counter` or a `MutableCounter` respectively, if one is present at the document path specified.\\n- Added: support for accessing and creating RGAs (Replicated Growable Arrays), which was the default CRDT type for arrays in Ditto v1. There are 2 new types: `RGA` and `MutableRGA` in v2, and a new `rga` accessor added to `DocumentPath` and `MutableDocumentPath`. Note that this API has only been added for backwards compatibility with existing data and code. Instead, arrays in registers (`new Register([1, 2, 3])`) should be used going forward (which is now the default).\\n- Changed: arrays now default to being `Register` arrays. This means that when you want to update a property in a document that\'s an array you need to set the whole value as the new array. You can\'t perform mutating operations on an array in a document other than to fully replace it.\\n- Changed: `DocumentPath` and `MutableDocumentPath` method `value()`  is now a computed property `value`.\\n- Removed: `MutableDocumentPath` methods `push()`, `pop()`, `insert()`, please use the `.rga` accessor and the mutation methods of `MutableRGA` instead.\\n- Added: property `path` to `Document` and `MutableDocument` which will give you a `DocumentPath` and `MutableDocumentPath` instance for a document pointing at the root of the document contents. Those can then be used to further traverse, query, and update specific parts of a document.\\n- Added: property `value` to `Document` and `MutableDocument`, allowing you to get a dictionary representation of the document\'s contents.\\n- Added: convenience method `at()` to `Document` and `MutableDocument`, which is equivalent to calling `.path.at()`.\\n- Removed type `DocumentLike` and `MutableDocumentLike`, plus the corresponding proxy-based document access & update API, please use `Document` and `DocumentPath` explicitly from now on to query and update a document.\\n- Removed: static `Document` and `MutableDocument` method `pathAt()`, please use the newly introduced instance method `at()` instead.\\n- Removed: static `Document` and `MutableDocument` method `valueAt()`, please use the newly introduced instance method `at()` followed by `value()` instead.\\n- Removed: static `Document` and `MutableDocument` method `value()`, please use newly introduced instance property `value` instead.\\n- Removed: static `Document` and `MutableDocument` method `id()`, please use instance property `_id` instead.\\n- Removed: deprecated static `Logger` method `shared()`, please use the `Logger` class directly instead.\\n- Removed: deprecated identities of type `development`, `production`, and `online`, please use the available ones, matching your use-case, instead.\\n- Removed: deprecated `DocumentPath` & `MutableDocumentPath` method `atIndex()`, please use `at()` instead.\\n- Removed: deprecated `Identity` property `appName`, please use `appID` instead.\\n- Removed: deprecated `Ditto` property `isSyncEnabled`, please use `isSyncActive` instead.\\n- Removed: deprecated static `Ditto` property `webAssemblyModule`, please pass it via the `init()` function instead.\\n- Removed: deprecated `Ditto` methods `setLicenseToken()`, `setAccessLicense()`, please use `setOfflineOnlyLicenseToken()` instead.\\n- Removed: deprecated `Collection` method `insert()`, please use `upsert()` instead.\\n- Removed: deprecated `Authenticator` properties `isAuthenticated` and `userID`, please use `status` instead.\\n- Changed: renamed `onlinePlaygroundV2` identity to just `onlinePlayground` which replaces the previously deprecated `onlinePlayground`.\\n- Changed: removed `Ditto` method `tryStartSync()`, which was an alias for `startSync()`. Please use `startSync()` directly instead.\\n- Removed: `overwrite` write strategy.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/2.0.0/api-reference/","date_released":"2022-08-03T14:54:09.477Z"},"2.0.1":{"description":"- Fixed: inserting a `DittoCounter` into a document and then syncing with a big peer before the counter had ever been incremented would cause an error on the big peer.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/2.0.1/api-reference/","date_released":"2022-08-14T04:57:21.617Z"},"2.0.2":{"description":"- Fixed: when calling `document.value` the returned object will include the document\'s ID under the `_id` key","api_reference_docs_url":"https://software.ditto.live/js/Ditto/2.0.2/api-reference/","date_released":"2022-08-27T01:58:42.460Z"},"2.0.3":{"description":"- Fixed: when calling `document.value` the returned object will include the document\'s ID under the `_id` key\\n- Changed: the status observer returned by `observeStatus()` of `Authenticator` has to be kept alive in order for the observation to remain active. The observation stops automatically as soon as the `Observer` object is garbage collected. We recommend to always call the `stop()` method on the `Observer` manually as soon as the observation isn\'t needed, do not rely on the garbage collector for this. The reason for the change is consistency across all of our SDKs.\\n- Changed: the attachment fetcher returned by `fetchAttachment()` of `Collection` has to be kept alive in order for the fetching to continue and finish. The fetching stops automatically as soon as the `AttachmentFetcher` object is garbage collected. The reason for the change is consistency across all of our SDKs.\\n- Changed: method `toString()` of `DocumentID` now returns human readable strings, which are not query compatible. Use newly introduced `toQueryCompatibleString()` method instead.\\n- Added: method `toQueryCompatibleString()` to `DocumentID` as a replacement for `toString()`.\\n- Changed: presence data is no longer synced with the big peer.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/2.0.3/api-reference/","date_released":"2022-08-31T17:20:10.071Z"},"2.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/js/Ditto/2.0.4/api-reference/","date_released":"2022-09-01T18:31:12.162Z"},"2.0.5":{"description":"- Fixed: a very rare deadlock when running on Node/macOS and starting sync immediately after creating the Ditto instance.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/2.0.5/api-reference/","date_released":"2022-09-08T22:20:09.225Z"},"1.1.11":{"description":"- Fixed: a very rare deadlock when running on Node/macOS and starting sync immediately after creating the Ditto instance.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/1.1.11/api-reference/","date_released":"2022-09-09T23:11:14.194Z"},"2.0.6":{"description":"- Fixed: Ensure Ditto internal auth client is shut down correctly when it\'s no longer needed","api_reference_docs_url":"https://software.ditto.live/js/Ditto/2.0.6/api-reference/","date_released":"2022-09-15T23:46:31.618Z"},"2.0.7":{"description":"- Changed: New lock file ensures we have only 1 SDK instance per working dir\\n- Fixed: Reduced the amount of disk space used by sync metadata by up to 50% in some cases","api_reference_docs_url":"https://software.ditto.live/js/Ditto/2.0.7/api-reference/","date_released":"2022-09-23T03:02:34.821Z"},"2.0.8":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/js/Ditto/2.0.8/api-reference/","date_released":"2022-10-28T00:14:53.152Z"},"2.1.0":{"description":"- Added: missing methods `observeLocal()` and `observeLocalWithNextSignal()` to `PendingCollectionsOperation` (now on par with `PendingCursorOperation` and `PendingIDSpecificOperation`).\\n- Deprecated: method `observe()` and `observeWithNextSignal()` of `PendingCursorOperation`, `PendingIDSpecificOperation` and `PendingCollectionsOperation`. Please use the corresponding `observeLocal()` and `observeLocalWithNextSignal()` variants together along with a separate call to `subscribe()` instead. See https://docs.ditto.live/javascript/common/concepts/syncing-data#subscribe","api_reference_docs_url":"https://software.ditto.live/js/Ditto/2.1.0/api-reference/","date_released":"2022-11-02T23:51:32.170Z"},"3.0.0-alpha1":{"description":"- Removed: the `RGA` constructor. You cannot create new RGAs.\\n- Removed: the deprecated `MutableRGA` type. You cannot mutate existing RGAs.\\n- Fixed: `LiveQuery`\'s `isStopped` getter implementation.\\n- Removed: `observe()` and `observeWithNextSignal()` methods of `PendingCollectionsOperation`, `PendingCursorOperation`, and `PendingIdSpecificOperation`. Please use the corresponding `observeLocal()` and `observeLocalWithNextSignal()` variants along with a separate call to `subscribe()` instead. See https://docs.ditto.live/javascript/common/concepts/syncing-data#subscribe\\n- Added: class `Presence` as an entry point for all of presence functionality, accessible via the `presence` property on the `Ditto` object.\\n- Added: type `PresenceGraph` and related sub-types `Address`, `Connection`, `ConnectionType`, and `Peer`.\\n- Deprecated: `observePeers()` method of `Ditto`, please use `observe()` of `Presence` instead, which you can get via `ditto.presence`.\\n- Deprecated: `RemotePeer`, replaced by `Peer`.\\n- Changed: performance improvements.\\n- Added `disableSyncWithV2` method to `Ditto`. This allows you to explicitly opt-in to disabling the ability to sync with Ditto peers running any version of the SDK in the v2 series of releases. Assuming this succeeds then this peer will only be able to sync with other peers using SDKs in the v3 series of releases. Note that this disabling of sync spreads to peers that sync with a peer that has disabled, or has (transitively) had disabled, syncing with v2 SDK peers.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/3.0.0-alpha1/api-reference/","date_released":"2022-12-01T20:01:08.479Z"},"3.0.0-alpha2":{"description":"- Improved: reliability if app crashes occur while persisting authentication data.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/3.0.0-alpha2/api-reference/","date_released":"2022-12-06T16:01:43.036Z"},"3.0.0-alpha3":{"description":"* Initial (alpha) support for Node.js on Windows","api_reference_docs_url":"https://software.ditto.live/js/Ditto/3.0.0-alpha3/api-reference/","date_released":"2022-12-12T13:19:14.644Z"},"3.0.0":{"description":"- Removed: the `RGA` constructor. You cannot create new RGAs.\\n- Removed: the deprecated `MutableRGA` type. You cannot mutate existing RGAs.\\n- Fixed: `LiveQuery`\'s `isStopped` getter implementation.\\n- Removed: `observe()` and `observeWithNextSignal()` methods of `PendingCollectionsOperation`, `PendingCursorOperation`, and `PendingIdSpecificOperation`. Please use the corresponding `observeLocal()` and `observeLocalWithNextSignal()` variants along with a separate call to `subscribe()` instead. See https://docs.ditto.live/javascript/common/concepts/syncing-data#subscribe\\n- Added: class `Presence` as an entry point for all of presence functionality, accessible via the `presence` property on the `Ditto` object.\\n- Added: type `PresenceGraph` and related sub-types `Address`, `Connection`, `ConnectionType`, and `Peer`.\\n- Deprecated: `observePeers()` method of `Ditto`, please use `observe()` of `Presence` instead, which you can get via `ditto.presence`.\\n- Deprecated: `RemotePeer`, replaced by `Peer`.\\n- Changed: performance improvements.\\n- Added: `disableSyncWithV2` method to `Ditto`. This allows you to explicitly opt-in to disabling the ability to sync with Ditto peers running any version of the SDK in the v2 series of releases. Assuming this succeeds then this peer will only be able to sync with other peers using SDKs in the v3 series of releases. Note that this disabling of sync spreads to peers that sync with a peer that has disabled, or has (transitively) had disabled, syncing with v2 SDK peers.\\n- Added: initial (alpha) support for Node.js on Windows.\\n- Improved: reliability if app crashes occur while persisting authentication data.\\n- Improved: log increased detail to help debug blocked write transactions.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/3.0.0/api-reference/","date_released":"2022-12-16T13:38:16.057Z"},"3.0.1":{"description":"- Added: `routingHint` property to `TransportConfigGlobal ` class.\\n- Added: `NO_PREFERRED_ROUTE_HINT` constant, used internally by `TransportConfigGlobal ` if no routing hint is specified.\\n- Changed: better readability of data sizes and durations in logs.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/3.0.1/api-reference/","date_released":"2023-01-14T02:57:17.847Z"},"4.0.0-alpha2":{"description":"* Added: `disableSyncWithV3` functionality to `Ditto`. Calling this will permanently remove the ability for the device that it is called on to sync with devices running v3 of the SDK. It also means that the device will then start performing AddWins removes when calling `remove()`. Any other device running v4 of the SDK that syncs with a device that has called `disableSyncWithV3` (or has themselves synced with another device that has called `disableSyncWithV3`, etc - if any chain of syncing exists that involves a device that has called `disableSyncWithV3`) will also no longer be able to sync with v3 peers and will perform AddWins removes when calling `remove()`.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/4.0.0-alpha2/api-reference/","date_released":"2023-01-16T22:16:17.836Z"},"3.0.2":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/js/Ditto/3.0.2/api-reference/","date_released":"2023-01-20T21:20:59.567Z"},"3.0.3-alpha2":{"description":"- Resolved an issue where presence evictions could deadlock on startup with large numbers of peers","api_reference_docs_url":"https://software.ditto.live/js/Ditto/3.0.3-alpha2/api-reference/","date_released":"2023-01-23T18:05:04.218Z"},"3.0.3":{"description":"- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/3.0.3/api-reference/","date_released":"2023-01-26T14:35:21.149Z"},"4.0.0-beta1":{"description":"- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.\\n- Fixed: AddWins removes will now be used if `disableSyncWithV3` has been called on the `Ditto` object or the a peer has synced with another peer that has called `disableSyncWithV3`, or they have synced with another peer that has called `disableSyncWithV3`, etc.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/4.0.0-beta1/api-reference/","date_released":"2023-01-26T23:37:37.230Z"},"3.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/js/Ditto/3.0.4/api-reference/","date_released":"2023-01-28T00:10:06.407Z"},"3.0.5":{"description":"- Changed: some threads spawned by the SDK no longer wait up to 30 seconds before being stopped.\\n- Changed: added more logging when a peer is unable to connect to another peer because of no overlapping supported protocol versions.\\n- Fixed: replication hanging under some circumstances, especially WebSocket connections to Big Peer","api_reference_docs_url":"https://software.ditto.live/js/Ditto/3.0.5/api-reference/","date_released":"2023-03-01T05:31:26.130Z"},"3.0.6":{"description":"- Fixed: Issue where Ditto instance using `OnlinePlayground` identity doesn\'t shut down properly\\n- Fixed: Potential crash on Windows and Linux from invoking `startSync()` if LAN transport is enabled.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/3.0.6/api-reference/","date_released":"2023-03-16T01:00:24.190Z"},"4.0.0":{"description":"- Added: AddWins removes will now be used if `disableSyncWithV3` has been called on the `Ditto` object or the a peer has synced with another peer that has called `disableSyncWithV3`, or they have synced with another peer that has called `disableSyncWithV3`, etc.\\n- Added: transaction support, which can be accessed through the Ditto store\'s\xa0`write()`\xa0method.\\n- Added: static method\xa0`isEnvironmentSupported()`\xa0to\xa0`Ditto`\xa0returning\xa0`true`\xa0if the current environment supports Ditto, otherwise returning\xa0`false`.\\n- Changed: If a problem occurs with an app\'s authentication webhook, the Small Peer that is trying to authenticate will log more detailed information for the developer.\\n- Changed: old multi-hop connections are now automatically disconnected when direct connections are established with peers, freeing up unneeded resources faster.\\n- Changed: reduced severity level for some routine log statements which were previously emitted at a WARN level.\\n- Changed: the\xa0`Ditto`\xa0constructor now validates the JavaScript environment (using the newly introduced\xa0`isEnvironmentSupported()`\xa0method) to make sure all required APIs are available and throws an error if this is not the case.\\n- Fixed: some threads spawned by the SDK no longer wait up to 30 seconds before being stopped.\\n- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.\\n- Fixed: replication hanging under some circumstances, especially WebSocket connections to Big Peer\\n- Fixed: a possible crash if Ditto is configured with an invalid App ID. An error message is emitted instead.\\n- Fixed: when enabling a P2P transport that is not available in an environment, `startSync()` would throw an exception. Catching that exception and just swallowing it would lead to an inconsistent sync state causing more errors down the line. This has been fixed by running the availability checks before applying any state changes, so the exception will make the method return before introducing inconsistent state in the first place.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/4.0.0/api-reference/","date_released":"2023-03-22T22:48:53.414Z"},"4.0.1":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/4.0.1/api-reference/","date_released":"2023-04-06T18:54:11.832Z"},"3.0.7":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/js/Ditto/3.0.7/api-reference/","date_released":"2023-04-07T16:28:10.249Z"}}},"cpp":{"DittoKit":{"latest":{"description":"* Initial release of the SDK","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoKit/0.1.0/api-reference/","date_released":"2019-12-05T16:36:03.940Z"},"0.1.0":{"description":"* Initial release of the SDK","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoKit/0.1.0/api-reference/","date_released":"2019-12-05T16:36:03.940Z"}},"DittoSyncKit":{"latest":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"},"1.0.0-alpha5":{"description":"* Added a new intermediate security identity for a shared secret key. This is a simplistic authentication mode which is normally only suitable for private apps where all the users and devices are trusted. \\n* Fixed an issue that prevented Counter values from syncing correctly\\n* Renamed DittoAttachmentStatus to DittoAttachmentFetchEvent and subsequently Incomplete status to Progre\\nss.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha5/api-reference/","date_released":"2020-11-23T21:22:41.601Z"},"1.0.0-alpha6":{"description":"* Performance and stability improvements.\\n* Fix default data insertion such that merge semantics are consistent and\\n  duplicate data isn\'t created.\\n* Fixed a bug where documents containing attachments syncing to an instance of\\n  the C++ SDK could lead to a crash.\\n* Upgrade nlohmann json header from 3.7.0 to 3.9.1.\\n* Added `set_custom_log_cb` and `set_log_file` method calls to `Log` class to\\n  allow provision of a custom logging callback function, and a file path\\n  that logs should be directed to.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha6/api-reference/","date_released":"2020-12-15T01:00:39.148Z"},"1.0.0-alpha7":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/DittoSyncKit/1.0.0-alpha7/api-reference/","date_released":"2021-01-04T11:12:22.654Z"}},"Ditto":{"1.0.0-alpha8":{"description":"* Site IDs, which make up part of a Ditto identity object, are now unsigned,\\n64-bit integers instead of unsigned 32-bit integers.\\n* Fix a crash that could occur if an offset with a value greater than the number\\nof matching documents was provided.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.0-alpha8/api-reference/","date_released":"2021-01-22T15:09:01.907Z"},"1.0.0-alpha9":{"description":"* Fixed a bug where mDNS advertising may continue after Ditto is stopped.\\n* Fixed a hang that could occur creating an attachment fetcher while requesting many attachments at once.\\n* Fixed sync failure when there are multiple overlapping subscriptions or live queries with the same query string for the same collection.\\n* Fixed a potential crash and other sync failures that could occur under certain conditions.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.0-alpha9/api-reference/","date_released":"2021-02-05T00:58:10.294Z"},"1.0.0":{"description":"* This release is not compatible with any previous SDK releases. There are a\\nnumber of breaking changes both in terms of the SDK API and in terms of the\\ninternal systems used by the SDK to perform operations such as synchronization.\\nIf you have previously made use of the Ditto SDK and wish to update to this\\nversion then note that you will need to delete all existing Ditto data otherwise\\nyou will run into errors. If you have existing data that you need to keep then\\nplease contact us and we can advise you as to how you can migrate your data.\\n* The most notable API breaking changes are:\\n  * Document IDs are no longer restricted to just strings. You can now create\\n    a document ID that is a string, integer, boolean, array, map, or null. This\\n    means that when making `find_by_id` or `insert` calls you now need to\\n    provide a `DocumentId` object rather than a string. Similarly, when you\\n    access a document\'s ID it will now return a `DocumentId` object instead of a\\n    string.\\n  * The `start()` and `stop()` functions on the `Ditto` object have been renamed\\n    to `start_sync()` and `stop_sync()` respectively. They now also don\'t accept\\n    any arguments. If you wish to specify which transports you would like the\\n    Ditto SDK to make use of (along with any configuration that they might\\n    require) you now need to use the `set_transport_config` function on the\\n    `Ditto` object, and pass to that a transport config object. The default\\n    transports that will be enabled are still the same as they were in previous\\n    releases of the SDK though, so if you have no custom requirements then you\\n    can simply change your `start()` call to `start_sync()`.\\n* Lots of performance improvements and bug fixes.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.0/api-reference/","date_released":"2021-04-22T00:29:50.320Z"},"1.0.1":{"description":"* If you provide an invalid query then you will now get a better error message.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.1/api-reference/","date_released":"2021-05-04T16:02:44.151Z"},"1.0.2":{"description":"* Add support for subscripting `DocumentId`s in order to get nested values when\\na document ID is based on an array or a map.\\n* Deprecated `.to_native()` on `DocumentId`. You should use `.value()` instead.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.2/api-reference/","date_released":"2021-05-20T21:39:10.588Z"},"1.0.3":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.3/api-reference/","date_released":"2021-06-10T16:34:52.104Z"},"1.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.4/api-reference/","date_released":"2021-06-11T22:36:42.265Z"},"1.0.5":{"description":"* Added a new `find` function that accepts a query containing placeholders in\\n  the form of `$args.my_arg` along with a map of query arguments in the form of\\n  `{ \\"my_arg\\": \\"some value\\" }`. The placeholders in the query will be replaced\\n  by a query-appropriate representation of the relevant value from the map of\\n  query arguments.\\n\\n  For example, a query of `color == $args.color` with a query arguments map of\\n  `{ \\"color\\": \\"red\\" }` would internally be treated as a query of:\\n  `color == \\"red\\"`.\\n* Added the ability to get a hash and/or a mnemonic (string) representation of\\n  the matching documents from a live query event. This means you can do\\n  something like this:\\n\\n  ```cpp\\n  auto live_query = collection.find_all().observe(LiveQueryEventHandler{\\n        [&](std::vector<Document> docs, LiveQueryEvent event) {\\n            event.hash(docs); // e.g. `1950015808188223905`\\n            event.hash_mnemonic(docs); // e.g. `locate-quality-tina--helena-remote-cat`\\n            // ...\\n      });\\n  ```\\n* Fix for using floats in queries.\\n* Accessing the `store` property of a `Ditto` instance will no longer throw an\\n  error if you have not yet activated your `Ditto` instance with a valid license\\n  token.\\n* Deprecated `set_access_license` and added a new function, `set_license_token`,\\n  which will throw an appropriate exception if your provided license token is\\n  expired or invalid somehow.\\n* Deprecated `start_sync` and added a new function, `try_start_sync`, which will\\n  throw an exception if your `Ditto` instance hasn\'t yet been activated via a\\n  successful call to `set_license_token`.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.5/api-reference/","date_released":"2021-06-25T22:36:18.096Z"},"1.0.6":{"description":"* Add `value` accessor on `DocumentPath`, `MutableDocumentPath`, and\\n`DocumentIdPath` types to allow accessing a nested value in a document/ID as a\\n`nlohmann::json`.","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.6/api-reference/","date_released":"2021-07-08T18:22:41.809Z"},"1.0.7":{"description":"* Improve SDK API documentation extensively\\n* Fix crash that can occur if a Ditto `Identity` is passed by value\\n* Fix bug where sync may fail if an unusually long `deviceName` is configured","api_reference_docs_url":"https://software.ditto.live/cpp-ios/Ditto/1.0.7/api-reference/","date_released":"2021-07-22T23:38:10.554Z"},"1.0.8":{"description":"* Added a Linux x86_64 version of the C++ to the group of published C++ SDKs.\\n* Improved debug logging.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.8/api-reference/","date_released":"2021-08-02T16:19:41.134Z"},"1.0.9":{"description":"* Added support for getting information about all of the collections that the device is aware of. This is achieved by accessing `collections()` through the store object and then using the same sort of API used when getting documents in collections, i.e. `exec/observe/etc`.\\n* Added multicast as a transport option to the `LAN` config part of `TransportConfig`.\\n* Added new identity types: `ONLINE` and `ONLINE_PLAYGROUND.` An `Online` identity should be used when running Ditto in secure production mode, logging on to Ditto Cloud, or using an on-premises authentication server. User permissions are centrally managed. Sync will not work until a successful login has occurred. An `ONLINE_PLAYGROUND` identity should be used when you want to test a Ditto Cloud app without authentication (\\"Playground mode\\"). This mode offers no security and must only be used for development.\\n* The `PRODUCTION` identity has been renamed to `MANUAL`.\\n* Added an `Authenticator` type, accessible via the `Ditto` object, which allows you to perform login operations when you\'re using an `Online` identity.\\n* Similarly, added an `AuthenticationDelegate` type that needs to be used when using an `Online` identity.\\n* Report an error if more than one Ditto instance is started using the same working directory.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.9/api-reference/","date_released":"2021-09-03T22:38:24.690Z"},"latest":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/4.0.1/api-reference/","date_released":"2023-04-06T18:54:11.832Z"},"1.0.10":{"description":"* Fix to stop a change in site ID from leading to an unnecessary error.\\n* Improve handling of persisted authentication data. Note that this might lead\\n  to a one-off change to a peer\'s site ID if you weren\'t and continue to not be\\n  specifying an explicit site ID when creating your identity.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.10/api-reference/","date_released":"2021-09-10T16:21:51.194Z"},"1.0.11":{"description":"- Added `WriteStrategy` enum.\\n- Added method `insert_with_strategy()` to `Collection`, allowing to specify the behavior when inserting a document with an ID that matches the ID of a document already in the store.\\n- Added `is_authenticated()` and `user_id()` methods to `Authenticator`.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.11/api-reference/","date_released":"2021-10-08T05:09:27.624Z"},"1.0.12":{"description":"- Added `global` section to `TransportConfig` allowing P2P sync to be contained within certain groups of devices by putting them in the same \\"sync group\\".","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.12/api-reference/","date_released":"2021-10-18T10:00:50.921Z"},"1.0.13":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.13/api-reference/","date_released":"2021-10-18T17:02:38.549Z"},"1.0.14":{"description":"* Add support for array projections to DittoQL.\\n* Deprecate the `Online` identity in favor of the new `OnlineWithAuthentication`\\n  identity.\\n* Deprecate the `Development` identity in favor of the new `OfflinePlayground`\\n  identity.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.14/api-reference/","date_released":"2021-10-25T08:31:34.911Z"},"1.0.15-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.15-alpha1/api-reference/","date_released":"2021-10-27T10:33:50.885Z"},"1.0.15":{"description":"* Ensure that when performing a `sort` that if a document that matches the\\n  filter specified via the accompanying `find` call doesn\'t have the key\\n  specified in the `sort` expression then it won\'t lead to an error. Now, if\\n  you\'re sorting in a descending order then the documents without the key\\n  specified in the `sort` will appear at the end of the set of results, after\\n  all of the documents that do have the key present. If you\'re sorting in an\\n  ascending order then the documents without the `sort` key will appear first in\\n  the set of documents, before all of the documents that do contain the `sort`\\n  key.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.15/api-reference/","date_released":"2021-11-05T22:03:49.597Z"},"1.0.16":{"description":"* Fix an issue with live queries that involved a limit, no offset, at least one\\n  document being deleted, and some other conditions being met. Live queries that\\n  met these conditions could report incorrect sets of matching documents.\\n* Fix an issue that could potentially lead to an infinite loop in the\\n  replication system, meaning no sync progress would be made.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.16/api-reference/","date_released":"2021-11-19T22:39:48.766Z"},"1.0.17":{"description":"* Fix an issue with write strategies not working correctly. Unexpected results\\n  could occur when performing sequences of operations on documents.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.17/api-reference/","date_released":"2021-11-26T00:11:42.918Z"},"1.0.18-alpha1":{"description":"* Fixed an issue where document IDs that were specified inside the document\'s\\n  value as opposed to being specified explicitly (as a separate argument to\\n  `insert`) weren\'t being processed correctly, potentially leading to bugs with\\n  merge and overwrite behaviors.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.18-alpha1/api-reference/","date_released":"2021-12-08T17:25:36.988Z"},"1.0.18-alpha2":{"description":"* Improve attachment sync performance.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.18-alpha2/api-reference/","date_released":"2021-12-14T16:32:13.956Z"},"1.0.18":{"description":"* Reduced the opportunity for rapid memory growth in some scenarios.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.18/api-reference/","date_released":"2021-12-20T13:22:16.631Z"},"1.0.19":{"description":"- Fixed: collections were not appearing in the data browser under certain permission configurations.\\n- Fixed: race condition when subscriptions were configured from multiple threads in parallel (sometimes leading to a crash).","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.0.19/api-reference/","date_released":"2021-12-23T20:42:05.711Z"},"1.1.0":{"description":"- Changed: improved peer-to-peer algorithms to create meshes that are more efficient and diverse.\\n- Changed: improved routing algorithms for more efficiency.\\n- Changed: improved performance of query parsing.\\n- Added: accessor `get_is_sync_active()` to class `Ditto`.\\n- Added: method `logout()` to class `Authenticator`.\\n- Added: set of APIs to observe authentication status (see API reference for `Authenticator` and `AuthenticationCallback`).\\n- Added: method `upsert()` to classes `Collection` and `ScopedWriteTransaction` (as a replacement for `insert()` & friends) which by default merges the newly inserted document if one with the same ID already exists.\\n- Added: (missing) accessor `get_auth()` to class `Ditto`.\\n- Deprecated: accessors `is_authenticated()` and `user_id()` of class `Authenticator` in favor of newly introduced accessor `get_status()`.\\n- Deprecated: methods `insert()` & frinds of classes `Collection` and `ScopedWriteTransaction` in favor of newly introduced `upsert()`.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.0/api-reference/","date_released":"2022-01-28T11:21:11.093Z"},"1.1.1":{"description":"- Changed: Optimized the performance of accessing the value of a `Document`","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.1/api-reference/","date_released":"2022-02-12T05:38:19.844Z"},"1.1.2":{"description":"- Added: method `set_offline_only_license_token()` to class `Ditto` as replacement for now deprecated `set_license_token()`.\\n- Deprecated: method `set_license_token()` of class `Ditto`, please use newly added `set_offline_only_license_token()` instead.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.2/api-reference/","date_released":"2022-02-28T14:36:18.966Z"},"1.1.3":{"description":"- Added: `ONLINE_PLAYGROUND_V2` identity type and corresponding `OnlinePlaygroundV2Identity` allowing for basic authentication for playgrounds\\n\\n- Deprecated: `ONLINE_PLAYGROUND` identity type and corresponding `OnlinePlaygroundIdentity`, use newly added `ONLINE_PLAYGROUND_V2` and `OnlinePlaygroundV2Identity` instead\\n\\n- Changed: improved const correctness for a lot of the C++ API\\n\\n- Fixed: document IDs are now validated when synced and removed if invalid (some of our early versions of the SDK stored malformed IDs under certain circumstances)","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.3/api-reference/","date_released":"2022-03-22T10:13:57.389Z"},"1.1.4":{"description":"- Changed: improved replication performance in some scenarios.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.4/api-reference/","date_released":"2022-04-08T06:25:26.111Z"},"1.1.5":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.5/api-reference/","date_released":"2022-04-08T08:00:56.520Z"},"1.1.6":{"description":"- Fixed: a correctness issue in replication when peer permissions changed in the middle of a replication exchange.\\n- Fixed: error when querying a collection and there was a type mismatch for a field being used in a comparison in the query. \\n- Fixed: restarting an app too quickly could lead to multiple connection attempts to rejoin peers in the mesh.\\n- Fixed: apps using `OnlinePlaygroundV2` identities could experience a one minute delay before peer-to-peer sync occurs.\\n- Fixed: cloud sync would stop working when setting a newly created transport config.\\n- Changed: improvements to Ditto mesh performance via fastest-available-transport prioritization.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.6/api-reference/","date_released":"2022-05-09T12:04:39.211Z"},"1.1.7":{"description":"Synchronized version bump release.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.7/api-reference/","date_released":"2022-05-13T14:18:18.407Z"},"1.1.8":{"description":"- Fixed: Ditto with `OnlinePlaygroundV2` identity would fail to sync with the Big Peer if internet access isn\'t available at the time when Ditto is instantiated.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.8/api-reference/","date_released":"2022-06-03T07:13:20.812Z"},"1.1.9-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.9-alpha1/api-reference/","date_released":"2022-06-09T03:12:41.866Z"},"1.1.9":{"description":"- Changed: reduced CRDT memory overhead.\\n\\n- Changed: HTTP/WebSocket service now allows any origin for CORS, so it may be used from a webapp on localhost.\\n\\n- Fixed: a peer using an online identity would fail to sync peer-to-peer after app restarts.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.9/api-reference/","date_released":"2022-06-16T01:27:09.703Z"},"1.1.10":{"description":"* Changed: reduced total memory overhead during sync.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.10/api-reference/","date_released":"2022-07-07T19:53:12.943Z"},"2.0.0-alpha1":{"description":"This is a preview release of Ditto v2. Full changelog will be provided with the official release.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/2.0.0-alpha1/api-reference/","date_released":"2022-07-20T11:55:36.278Z"},"2.0.0":{"description":"- Note: peers running `2.0.0` are able to sync with peers running at least version `1.1.8` of the SDK.\\n- Added: support for explicitly typing values as registers. This is via 2 new types: `Register` and `MutableRegister`, and new `get_register` value accessors added to `DocumentPath` and `MutableDocumentPath`.\\n- Added: `Counter` and `MutableCounter` types resembling the CRDT type underneath, which replace the old counter mechanics. A new `get_counter` value accessor has been added to `DocumentPath` and `MutableDocumentPath`, which returns a `Counter` or a `MutableCounter` respectively, if one is present at the document path specified.\\n- Added: support for accessing and creating RGAs (Replicated Growable Arrays), which was the default CRDT type for arrays in Ditto v1. There are 2 new types: `Rga` and `MutableRga` in v2, and new `get_rga` value accessors added to `DocumentPath` and `MutableDocumentPath`. Note that these are deprecated though and arrays should instead be used in registers (which is now the default).\\n- Changed: arrays now default to being `Register` arrays. This means that when you want to update a property in a document that\'s an array you need to set the whole value as the new array. You can\'t perform mutating operations on an array in a document other than to fully replace it.\\n- Removed: deprecated `DevelopmentIdentity`, use `OfflinePlayground` instead.\\n- Removed: deprecated `OnlineIdentity`, use `OnlineWithAuthenticationIdentity` instead.\\n- Removed: `OnlinePlaygroundV2Identity`. Use` OnlinePlaygroundIdentity` instead.\\n- Removed: deprecated `insert` and `insert_with_strategy`. Use `upsert` instead.\\n- Changed: `observe`, `observe_local`,` observe_with_next_signal`, and `observe_local_with_next_signal` methods previously used `CollectionsEventHandler` parameters. They now use `CollectionsEventCallback` parameters instead.\\n- Removed: `try_start_sync`. Use `start_sync` instead.\\n- Removed: deprecated `set_license_token` and `set_access_token`. Use `set_offline_only_license_token` instead.\\n- Removed: deprecated `user_id` and `is_authenticated` properties from `Authenticator`. Use `get_status().get_user_id()` and `get_status().is_authenticated()` instead.\\n- Removed: deprecated `DocumentId` method `to_native`, please use `value` instead.\\n- Removed: `WriteStrategy::overwrite` write strategy.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/2.0.0/api-reference/","date_released":"2022-08-03T14:54:09.477Z"},"2.0.1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/2.0.1/api-reference/","date_released":"2022-08-14T04:57:21.617Z"},"2.0.2":{"description":"- Changed: performing an `.exec()` call, outside the scope of a `Store::write({ })` block, no longer tries to obtain a write transaction and instead uses a read transaction.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/2.0.2/api-reference/","date_released":"2022-08-27T01:58:42.458Z"},"2.0.3":{"description":"- Changed: presence data is no longer synced with the big peer.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/2.0.3/api-reference/","date_released":"2022-08-31T17:20:10.069Z"},"2.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/2.0.4/api-reference/","date_released":"2022-09-01T18:31:12.160Z"},"2.0.5":{"description":"- Fixed: a very rare deadlock when running on macOS and starting sync immediately after creating the Ditto instance.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/2.0.5/api-reference/","date_released":"2022-09-08T22:20:09.225Z"},"1.1.11":{"description":"- Fixed: a very rare deadlock when running on macOS and starting sync immediately after creating the Ditto instance.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/1.1.11/api-reference/","date_released":"2022-09-09T23:11:14.194Z"},"2.0.6":{"description":"- Fixed: Ensure Ditto internal auth client is shut down correctly when it\'s no longer needed","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/2.0.6/api-reference/","date_released":"2022-09-15T23:46:31.618Z"},"2.0.7":{"description":"- Changed: New lock file ensures we have only 1 SDK instance per working dir\\n- Fixed: Reduced the amount of disk space used by sync metadata by up to 50% in some cases","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/2.0.7/api-reference/","date_released":"2022-09-23T03:02:34.821Z"},"2.0.8":{"description":"- Deprecated: `observe` method. Use `observe_local` and `subscribe` instead.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/2.0.8/api-reference/","date_released":"2022-10-28T00:14:53.152Z"},"2.1.0":{"description":"- Deprecated: `observe` and `observe_with_next_signal` methods of `PendingCollectionsOperation`, `PendingCursorOperation` and `PendingIDSpecificOperation`. Please use the corresponding `observe_local` or `observe_local_with_next_signal` along with a separate call to `subscribe` instead. See https://docs.ditto.live/cpp/common/concepts/syncing-data#subscribe","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/2.1.0/api-reference/","date_released":"2022-11-02T23:51:32.170Z"},"3.0.0-alpha1":{"description":"- Removed: the `Rga` constructor. You cannot create new RGAs.\\n- Removed: the deprecated `Rga` type. You cannot mutate existing RGAs.\\n- Removed: the `persistence_dir` argument from all `Identity` class methods.\\n- Added: `get_application_id` method to `Ditto` class.\\n- Added: `get_persistence_directory` method to `Ditto` class.\\n- Added: `get_presence` to `Ditto`.\\n- Added: `Presence` type with `observe` and `exec` methods.\\n- Added: `PresenceGraph` type, which represents local and remote peers in the Ditto network.\\n- Removed: `observe` and `observe_with_next_signal` methods of `PendingCollectionsOperation`, `PendingCursorOperation`, and `PendingIDSpecificOperation`. Please use the corresponding `observe_local` or `observe_local_with_next_signal` along with a separate call to `subscribe` instead. See https://docs.ditto.live/cpp/common/concepts/syncing-data#subscribe\\n- Changed: `subscribe()` calls now return a `shared_ptr<Subscription>` instead of a `Subscription`.\\n- Changed: performance improvements.\\n- Added `disable_sync_with_v2` method to `Ditto`. This allows you to explicitly opt-in to disabling the ability to sync with Ditto peers running any version of the SDK in the v2 series of releases. Assuming this succeeds then this peer will only be able to sync with other peers using SDKs in the v3 series of releases. Note that this disabling of sync spreads to peers that sync with a peer that has disabled, or has (transitively) had disabled, syncing with v2 SDK peers.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/3.0.0-alpha1/api-reference/","date_released":"2022-12-01T20:01:08.479Z"},"3.0.0-alpha2":{"description":"- Improved: reliability if app crashes occur while persisting authentication data.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/3.0.0-alpha2/api-reference/","date_released":"2022-12-06T16:01:43.035Z"},"3.0.0-alpha3":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/3.0.0-alpha3/api-reference/","date_released":"2022-12-12T13:19:14.644Z"},"3.0.0":{"description":"- Removed: the `Rga` constructor. You cannot create new RGAs.\\n- Removed: the deprecated `Rga` type. You cannot mutate existing RGAs.\\n- Removed: the `persistence_dir` argument from all `Identity` class methods.\\n- Added: `get_application_id` method to `Ditto` class.\\n- Added: `get_persistence_directory` method to `Ditto` class.\\n- Added: `get_presence` to `Ditto`.\\n- Added: `Presence` type with `observe` and `exec` methods.\\n- Added: `PresenceGraph` type, which represents local and remote peers in the Ditto network.\\n- Removed: `observe` and `observe_with_next_signal` methods of `PendingCollectionsOperation`, `PendingCursorOperation`, and `PendingIDSpecificOperation`. Please use the corresponding `observe_local` or `observe_local_with_next_signal` along with a separate call to `subscribe` instead. See https://docs.ditto.live/cpp/common/concepts/syncing-data#subscribe\\n- Changed: `subscribe()` calls now return a `shared_ptr<Subscription>` instead of a `Subscription`.\\n- Changed: performance improvements.\\n- Added: `disable_sync_with_v2` method to `Ditto`. This allows you to explicitly opt-in to disabling the ability to sync with Ditto peers running any version of the SDK in the v2 series of releases. Assuming this succeeds then this peer will only be able to sync with other peers using SDKs in the v3 series of releases. Note that this disabling of sync spreads to peers that sync with a peer that has disabled, or has (transitively) had disabled, syncing with v2 SDK peers.\\n- Improved: reliability if app crashes occur while persisting authentication data.\\n- Improved: log increased detail to help debug blocked write transactions.\\n- Added: `close` method to `Ditto` class to stop an existing instance.\\n- Added: `DiskUsage` class to monitor disk usage.\\n- Added: `get_disk_usage` method to `Ditto` class.\\n- Added: `get_disk_usage` method to `Store` class.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/3.0.0/api-reference/","date_released":"2022-12-16T13:38:16.056Z"},"3.0.1":{"description":"- Added: `routing_hint` property to `Global` class.\\n- Added: `NO_PREFERRED_ROUTE_HINT` constant, used internally by `TransportConfig` if no routing hint is specified.\\n- Changed: better readability of data sizes and durations in logs.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/3.0.1/api-reference/","date_released":"2023-01-14T02:57:17.847Z"},"4.0.0-alpha2":{"description":"* Added: `disable_sync_with_v3` functionality to `Ditto`. Calling this will permanently remove the ability for the device that it is called on to sync with devices running v3 of the SDK. It also means that the device will then start performing AddWins removes when calling `remove()`. Any other device running v4 of the SDK that syncs with a device that has called `disable_sync_with_v3` (or has themselves synced with another device that has called `disable_sync_with_v3`, etc - if any chain of syncing exists that involves a device that has called `disable_sync_with_v3`) will also no longer be able to sync with v3 peers and will perform AddWins removes when calling `remove()`.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/4.0.0-alpha2/api-reference/","date_released":"2023-01-16T22:16:17.836Z"},"3.0.2":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/3.0.2/api-reference/","date_released":"2023-01-20T21:20:59.567Z"},"3.0.3-alpha2":{"description":"- Resolved an issue where presence evictions could deadlock on startup with large numbers of peers","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/3.0.3-alpha2/api-reference/","date_released":"2023-01-23T18:05:04.218Z"},"3.0.3":{"description":"- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/3.0.3/api-reference/","date_released":"2023-01-26T14:35:21.149Z"},"4.0.0-beta1":{"description":"- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.\\n- Fixed: AddWins removes will now be used if `disableSyncWithV3` has been called on the `Ditto` object or the a peer has synced with another peer that has called `disableSyncWithV3`, or they have synced with another peer that has called `disableSyncWithV3`, etc.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/4.0.0-beta1/api-reference/","date_released":"2023-01-26T23:37:37.230Z"},"3.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/3.0.4/api-reference/","date_released":"2023-01-28T00:10:06.407Z"},"3.0.5":{"description":"- Changed: some threads spawned by the SDK no longer wait up to 30 seconds before being stopped.\\n- Changed: added more logging when a peer is unable to connect to another peer because of no overlapping supported protocol versions.\\n- Fixed: replication hanging under some circumstances, especially WebSocket connections to Big Peer","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/3.0.5/api-reference/","date_released":"2023-03-01T05:31:26.130Z"},"3.0.6":{"description":"- Fixed: Issue where Ditto instance using `OnlinePlayground` identity doesn\'t shut down properly\\n- Fixed: Potential crash on Windows and Linux from invoking `startSync()` if LAN transport is enabled.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/3.0.6/api-reference/","date_released":"2023-03-16T01:00:24.190Z"},"4.0.0":{"description":"- Added: AddWins removes will now be used if `disableSyncWithV3` has been called on the `Ditto` object or the a peer has synced with another peer that has called `disableSyncWithV3`, or they have synced with another peer that has called `disableSyncWithV3`, etc.\\n- Changed: If a problem occurs with an app\'s authentication webhook, the Small Peer that is trying to authenticate will log more detailed information for the developer.\\n- Changed: old multi-hop connections are now automatically disconnected when direct connections are established with peers, freeing up unneeded resources faster.\\n- Changed: reduced severity level for some routine log statements which were previously emitted at a WARN level.\\n- Fixed: some threads spawned by the SDK no longer wait up to 30 seconds before being stopped.\\n- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.\\n- Fixed: replication hanging under some circumstances, especially WebSocket connections to Big Peer\\n- Fixed: a possible crash if Ditto is configured with an invalid App ID. An error message is emitted instead.\\n- Removed: unused `ReplacedText` value from `UpdateResultType` enum.\\n- Removed: unused `UpdateResultReplacedWithCounter` type.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/4.0.0/api-reference/","date_released":"2023-03-22T22:48:53.414Z"},"4.0.1":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/4.0.1/api-reference/","date_released":"2023-04-06T18:54:11.832Z"},"3.0.7":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/cpp/Ditto/3.0.7/api-reference/","date_released":"2023-04-07T16:28:10.249Z"}}},"rustsdk":{"Ditto":{"1.0.14":{"description":"* Add support for array projections to DittoQL.\\n* Deprecate the `Online` identity in favor of the new `OnlineWithAuthentication`\\n  identity.\\n* Deprecate the `Development` identity in favor of the new `OfflinePlayground`\\n  identity.\\n* Permit `FnMut` event handlers for live queries.\\n* Add support for the Presence V2 API via `Ditto::observe_peers_v2`.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.14/api-reference/","date_released":"2021-10-25T08:31:34.911Z"},"latest":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/4.0.1/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2023-04-06T18:54:11.832Z"},"1.0.15-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.15-alpha1/api-reference/","date_released":"2021-10-27T10:33:50.888Z"},"1.0.15":{"description":"* Ensure that when performing a `sort` that if a document that matches the\\n  filter specified via the accompanying `find` call doesn\'t have the key\\n  specified in the `sort` expression then it won\'t lead to an error. Now, if\\n  you\'re sorting in a descending order then the documents without the key\\n  specified in the `sort` will appear at the end of the set of results, after\\n  all of the documents that do have the key present. If you\'re sorting in an\\n  ascending order then the documents without the `sort` key will appear first in\\n  the set of documents, before all of the documents that do contain the `sort`\\n  key.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.15/api-reference/","date_released":"2021-11-05T22:03:49.598Z"},"1.0.16":{"description":"* Fix an issue with live queries that involved a limit, no offset, at least one\\n  document being deleted, and some other conditions being met. Live queries that\\n  met these conditions could report incorrect sets of matching documents.\\n* Fix an issue that could potentially lead to an infinite loop in the\\n  replication system, meaning no sync progress would be made.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.16/api-reference/","date_released":"2021-11-19T22:39:48.766Z"},"1.0.17":{"description":"* Fix an issue with write strategies not working correctly. Unexpected results\\n  could occur when performing sequences of operations on documents.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.17/api-reference/","date_released":"2021-11-26T00:11:42.918Z"},"1.0.18-alpha1":{"description":"* Fixed an issue where document IDs that were specified inside the document\'s\\n  value as opposed to being specified explicitly (as a separate argument to\\n  `insert`) weren\'t being processed correctly, potentially leading to bugs with\\n  merge and overwrite behaviors.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.18-alpha1/api-reference/","date_released":"2021-12-08T17:25:36.988Z"},"1.0.18-alpha2":{"description":"* Improve attachment sync performance.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.18-alpha2/api-reference/","date_released":"2021-12-14T16:32:13.956Z"},"1.0.18":{"description":"* Reduced the opportunity for rapid memory growth in some scenarios.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.18/api-reference/","date_released":"2021-12-20T13:22:16.632Z"},"1.0.19":{"description":"- Fixed: collections were not appearing in the data browser under certain permission configurations.\\n- Fixed: race condition when subscriptions were configured from multiple threads in parallel (sometimes leading to a crash).","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.0.19/api-reference/","date_released":"2021-12-23T20:42:05.711Z"},"1.1.0":{"description":"- Changed: improved peer-to-peer algorithms to create meshes that are more efficient and diverse.\\n- Changed: improved routing algorithms for more efficiency.\\n- Changed: improved performance of query parsing.","api_reference_docs_url":"https://software.ditto.live/rustsdk/Ditto/1.1.0/api-reference/","date_released":"2022-01-28T11:21:11.095Z"},"1.1.1":{"description":"- Changed: Optimized the performance of accessing the value of a `Document`\\n- Added: Experimental mesh roles API\\n  - Added: `set_mesh_role()` method to `Peer` class\\n  - Added: `set_priority_for_mesh_role()` to `Peer` class\\n- Fixed: An incorrect error from `find_by_id(\\"some_id\\").exec()` when a document wasn\'t found.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/1.1.1/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-02-12T05:38:19.845Z"},"1.1.2":{"description":"- Added: method `set_offline_only_license_token()` to type `Ditto` as replacement for now deprecated `set_license_token()`.\\n- Deprecated: method `set_license_token()` of type `Ditto`, please use newly added `set_offline_only_license_token()` instead.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/1.1.2/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-02-28T14:36:18.966Z"},"1.1.3":{"description":"- Added: `OnlinePlaygroundV2` identity allowing for basic authentication for playgrounds\\n\\n- Deprecated: `OnlinePlayground` identity, use newly added `OnlinePlaygroundV2` instead\\n\\n- Fixed: document IDs are now validated when synced and removed if invalid (some of our early versions of the SDK stored malformed IDs under certain circumstances)","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/1.1.3/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-03-22T10:13:57.390Z"},"1.1.4":{"description":"- Changed: improved replication performance in some scenarios.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/1.1.4/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-04-08T06:25:26.112Z"},"1.1.5":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/1.1.5/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-04-08T08:00:56.520Z"},"1.1.6":{"description":"- Fixed: a correctness issue in replication when peer permissions changed in the middle of a replication exchange.\\n- Fixed: error when querying a collection and there was a type mismatch for a field being used in a comparison in the query. \\n- Fixed: restarting an app too quickly could lead to multiple connection attempts to rejoin peers in the mesh.\\n- Fixed: apps using `OnlinePlaygroundV2` identities could experience a one minute delay before peer-to-peer sync occurs.\\n- Fixed: issues with serialization and deserialization of `DocumentId`s.\\n- Added: a new typealias named `LogLevel` for `CLogLevel`.\\n- Added: `upsert()` and `upsert_with_strategy()` to `Collection`. If you want to provide an explicit `DocumentId` for your document you should specify it under the `\\"_id\\"` key at the root of your document.\\n- Added: `observe_v2()` and `observe_local_v2()` to `PendingIdSpecificOperation`.\\n- Added: `SingleDocumentEventHandler` and `SingleDocumentLiveQueryEvent` as counterparts to `EventHandler` and `LiveQueryEvent`.\\n- Deprecated: `insert()` and `insert_with_strategy()`. Please use the newly introduced `upsert()` and `upsert_with_strategy()` instead.\\n- Deprecated: `observe()` and `observe_local()`. Please use the newly introduced `observe_v2()` and `observe_local_v2()` instead.\\n- Changed: improved compatibility with the 1.60.0 Rust toolchain, which is now the recommended toolchain.\\n- Changed: improvements to Ditto mesh performance via fastest-available-transport prioritization.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/1.1.6/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-05-09T12:04:39.211Z"},"1.1.7":{"description":"Synchronized version bump release.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/1.1.7/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-05-13T14:18:18.407Z"},"1.1.8":{"description":"- Fixed: Ditto with `OnlinePlaygroundV2` identity would fail to sync with the Big Peer if internet access isn\'t available at the time when Ditto is instantiated.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/1.1.8/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-06-03T07:13:20.812Z"},"1.1.9-alpha1":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/1.1.9-alpha1/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-06-09T03:12:41.866Z"},"1.1.9":{"description":"- Changed: reduced CRDT memory overhead.\\n\\n- Changed: HTTP/WebSocket service now allows any origin for CORS, so it may be used from a webapp on localhost.\\n\\n- Fixed: a peer using an online identity would fail to sync peer-to-peer after app restarts.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/1.1.9/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-06-16T01:27:09.703Z"},"1.1.10":{"description":"* Changed: reduced total memory overhead during sync.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/1.1.10/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-07-07T19:53:12.943Z"},"2.0.0-alpha1":{"description":"This is a preview release of Ditto v2. Full changelog will be provided with the official release.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/2.0.0-alpha1/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-07-20T11:55:36.280Z"},"2.0.0":{"description":"- Note: peers running `2.0.0` are able to sync with peers running at least version `1.1.8` of the SDK.\\n- Added: support for explicitly typing values as registers. This is via 2 new types: `DittoRegister` and `DittoMutableRegister`, and new value accessors added to `DittoDocumentPath` and `DittoMutableDocumentPath`.\\n- Added: `DittoCounter` and `DittoMutableCounter` types resembling the CRDT type underneath, which replace the old counter mechanics. A new value accessor has been added to `DittoDocumentPath` and `DittoMutableDocumentPath`, which returns a `DittoCounter` or a `DittoMutableCounter` respectively, if one is present at the document path specified.\\n- Added: support for accessing and creating RGAs (Replicated Growable Arrays), which was the default CRDT type for arrays in Ditto v1. There are 2 new types: `DittoRga` and `DittoMutableRga` in v2, and new value accessors added to `DittoDocumentPath` and `DittoMutableDocumentPath`. Note that these are deprecated though and arrays should instead be used in registers (which is now the default).\\n- Changed: arrays now default to being `Register` arrays. This means that when you want to update a property in a document that\'s an array you need to set the whole value as the new array. You can\'t perform mutating operations on an array in a document other than to fully replace it.\\n- Removed: deprecated identity class `Online`; use `OnlineWithAuthentication` instead.\\n- Removed: deprecated identity class `Development`; use `OfflinePlayground` instead.\\n- Changed: deprecated class `OnlinePlaygroundV2`; use `OnlinePlayground` instead.\\n- Removed: `DittoAuthenticator` method `login_with_token`; use `login_with_token_and_feedback` instead.\\n- Removed : DittoAuthenticator` method `login_with_credentials`; use `login_with_token_and_feedback` instead.\\n- Removed: `Ditto` method `set_license_token`; use `set_offline_only_license_token` instead.\\n- Removed: `Ditto` method `set_access_license`; use `set_offline_only_license_token` instead.\\n- Changed: deprecated `Ditto` method `observe_peers_v2`; use `observe_peers` instead.\\n- Removed: all deprecated variants of `Collection` method `insert:...`; use the corresponding `upsert:...`. variants instead.\\n- Changed: deprecated all `PendingIdSpecificOperation` method `observe_v2` variants. Use the corresponding `observe` variant instead.\\n- Removed: `WriteStrategy::Overwrite` write strategy.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/2.0.0/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-08-03T14:54:09.477Z"},"2.0.1":{"description":"- Changed: `DittoCounter`, `DittoRegister`, and `DittoRga` are now exported in the prelude.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/2.0.1/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-08-14T04:57:21.617Z"},"2.0.2":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/2.0.2/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-08-27T01:58:42.460Z"},"2.0.3":{"description":"- Changed: presence data is no longer synced with the big peer.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/2.0.3/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-08-31T17:20:10.071Z"},"2.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/2.0.4/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-09-01T18:31:12.162Z"},"2.0.5":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/2.0.5/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-09-08T22:20:09.225Z"},"1.1.11":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/1.1.11/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-09-09T23:11:14.194Z"},"2.0.6":{"description":"- Fixed: Ensure Ditto internal auth client is shut down correctly when it\'s no longer needed","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/2.0.6/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-09-15T23:46:31.618Z"},"2.0.7":{"description":"- Changed: New lock file ensures we have only 1 SDK instance per working dir\\n- Fixed: Reduced the amount of disk space used by sync metadata by up to 50% in some cases","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/2.0.7/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-09-23T03:02:34.821Z"},"2.0.8":{"description":"- Added: `persistence_directory` method to `ditto` class\\n- Added: `application_id` method to `ditto` class\\n- Fixed: Windows BLE connections are more stable and recover better","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/2.0.8/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-10-28T00:14:53.152Z"},"2.1.0":{"description":"- Added: mDNS capability for Windows\\n- Deprecated: `observe` method of `PendingCursorOperation`, `PendingIdSpecificOperation` and `PendingCollectionsOperation`. Please use the corresponding `observe_local` along with a separate call to `subscribe` instead. See https://docs.ditto.live/rust/common/concepts/syncing-data#subscribe\\n- Fixed: an issue where duplicate WebSocket connections could be created to the same URL","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/2.1.0/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-11-02T23:51:32.170Z"},"3.0.0-alpha1":{"description":"- Removed: the `DittoRga` constructor. You cannot create new RGAs.\\n- Removed: the deprecated `DittoMutableRga` type. You cannot mutate existing RGAs.\\n- Deprecated: method `Ditto::observe_peers_v2`.\\n- Added: `Presence` type with `observe` and `exec` methods.\\n- Added: `PresenceGraph` type, which represents local and remote peers in the Ditto network.\\n- Added: `presence` method to Ditto class to get a `Presence` instance.\\n- Removed: `observe` method of `PendingCollectionsOperation`, `PendingCursorOperation`, and `PendingIdSpecificOperation`. Please use the corresponding `observe_local` along with a separate call to `subscribe` instead. See https://docs.ditto.live/rust/common/concepts/syncing-data#subscribe\\n- Changed: performance improvements.\\n- Added: `disk_usage_observe` and `disk_usage_exec` methods to `Ditto`, `Store` and `DittoAuthenticator`.\\n- Added `disable_sync_with_v2` method to `Ditto`. This allows you to explicitly opt-in to disabling the ability to sync with Ditto peers running any version of the SDK in the v2 series of releases. Assuming this succeeds then this peer will only be able to sync with other peers using SDKs in the v3 series of releases. Note that this disabling of sync spreads to peers that sync with a peer that has disabled, or has (transitively) had disabled, syncing with v2 SDK peers.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/3.0.0-alpha1/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-12-01T20:01:08.479Z"},"3.0.0-alpha2":{"description":"- Fixed: a potential crash with the `.observe\u2026` family of functions due to a race condition during shutdown.\\n- Improved: reliability if app crashes occur while persisting authentication data.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/3.0.0-alpha2/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-12-06T16:01:43.036Z"},"3.0.0-alpha3":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/3.0.0-alpha3/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-12-12T13:19:14.644Z"},"3.0.0":{"description":"- Removed: the `DittoRga` constructor. You cannot create new RGAs.\\n- Removed: the deprecated `DittoMutableRga` type. You cannot mutate existing RGAs.\\n- Deprecated: method `Ditto::observe_peers_v2`.\\n- Added: `Presence` type with `observe` and `exec` methods.\\n- Added: `PresenceGraph` type, which represents local and remote peers in the Ditto network.\\n- Added: `presence` method to Ditto class to get a `Presence` instance.\\n- Removed: `observe` method of `PendingCollectionsOperation`, `PendingCursorOperation`, and `PendingIdSpecificOperation`. Please use the corresponding `observe_local` along with a separate call to `subscribe` instead. See https://docs.ditto.live/rust/common/concepts/syncing-data#subscribe\\n- Changed: performance improvements.\\n- Added: `disk_usage_observe` and `disk_usage_exec` methods to `Ditto`, `Store` and `DittoAuthenticator`.\\n- Added: `disable_sync_with_v2` method to `Ditto`. This allows you to explicitly opt-in to disabling the ability to sync with Ditto peers running any version of the SDK in the v2 series of releases. Assuming this succeeds then this peer will only be able to sync with other peers using SDKs in the v3 series of releases. Note that this disabling of sync spreads to peers that sync with a peer that has disabled, or has (transitively) had disabled, syncing with v2 SDK peers.\\n- Improved: reliability if app crashes occur while persisting authentication data.\\n- Fixed: a potential crash with the .observe\u2026 family of functions due to a race condition during shutdown.\\n- Improved: log increased detail to help debug blocked write transactions.\\n- Added: `close` method to Ditto.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/3.0.0/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2022-12-16T13:38:16.057Z"},"3.0.1":{"description":"- Deprecated: `Ditto::root_dir` and `Ditto::data_dir`. Use `Ditto::persistence_directory` instead.\\n- Deprecated: `DittoRoot::data_dir` methods. Use `DittoRoot::root_dir` methods instead.\\n- Changed: better readability of data sizes and durations in logs.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/3.0.1/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2023-01-14T02:57:17.847Z"},"4.0.0-alpha2":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/4.0.0-alpha2/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2023-01-16T22:16:17.836Z"},"3.0.2":{"description":"- Fix regression in presence v3 where disconnected peer on end of chain isn\'t pruned","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/3.0.2/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2023-01-20T21:20:59.567Z"},"3.0.3-alpha2":{"description":"- Resolved an issue where presence evictions could deadlock on startup with large numbers of peers","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/3.0.3-alpha2/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2023-01-23T18:05:04.218Z"},"3.0.3":{"description":"- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.\\n- Fixed: issue that could cause potential segfault with respect to a problematic binary layout assumption of the tokio runtime.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/3.0.3/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2023-01-26T14:35:21.149Z"},"4.0.0-beta1":{"description":"- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.\\n- Fixed: issue that could cause potential segfault with respect to a problematic binary layout assumption of the tokio runtime.\\n- Fixed: AddWins removes will now be used if `disableSyncWithV3` has been called on the `Ditto` object or the a peer has synced with another peer that has called `disableSyncWithV3`, or they have synced with another peer that has called `disableSyncWithV3`, etc.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/4.0.0-beta1/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2023-01-26T23:37:37.230Z"},"3.0.4":{"description":"* Synchronized version bump release","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/3.0.4/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2023-01-28T00:10:06.407Z"},"3.0.5":{"description":"- Changed: some threads spawned by the SDK no longer wait up to 30 seconds before being stopped.\\n- Changed: added more logging when a peer is unable to connect to another peer because of no overlapping supported protocol versions.\\n- Fixed: replication hanging under some circumstances, especially WebSocket connections to Big Peer","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/3.0.5/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2023-03-01T05:31:26.130Z"},"3.0.6":{"description":"- Fixed: Rust peers could be unable to properly decode attachment tokens from peers using other SDKs.\\n- Fixed: Issue where Ditto instance using `OnlinePlayground` identity doesn\'t shut down properly\\n- Fixed: Potential crash on Windows and Linux from invoking `startSync()` if LAN transport is enabled.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/3.0.6/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2023-03-16T01:00:24.191Z"},"4.0.0":{"description":"- Added: AddWins removes will now be used if `disableSyncWithV3` has been called on the `Ditto` object or the a peer has synced with another peer that has called `disableSyncWithV3`, or they have synced with another peer that has called `disableSyncWithV3`, etc.\\n- Changed: If a problem occurs with an app\'s authentication webhook, the Small Peer that is trying to authenticate will log more detailed information for the developer.\\n- Changed: old multi-hop connections are now automatically disconnected when direct connections are established with peers, freeing up unneeded resources faster.\\n- Changed: reduced severity level for some routine log statements which were previously emitted at a WARN level.\\n- Fixed: some threads spawned by the SDK no longer wait up to 30 seconds before being stopped.\\n- Fixed: an issue which could cause Ditto to hang if more than 500 peers were encountered.\\n- Fixed: replication hanging under some circumstances, especially WebSocket connections to Big Peer\\n- Fixed: a possible crash if Ditto is configured with an invalid App ID. An error message is emitted instead.\\n- Fixed: some cases of linkage error when linking statically (the default, or through `LIBDITTO_STATIC=1`) using a non-1.66.1 toolchain. For the remaining cases, `LIBDITTO_STATIC=0` is to be used. If linking statically is paramount, then the experimental `LIBDITTO_STATIC_AMEND_WITH=objcopy` env var can be used to let dittolive-ditto-sys attempt an automatic fix of the issue.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/4.0.0/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2023-03-22T22:48:53.414Z"},"4.0.1":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/4.0.1/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2023-04-06T18:54:11.832Z"},"3.0.7":{"description":"- Fixed: Resolved an issue with logging when the stdout is not available.","api_reference_docs_url":"https://software.ditto.live/rust/Ditto/3.0.7/x86_64-unknown-linux-gnu/docs/dittolive_ditto/index.html","date_released":"2023-04-07T16:28:10.249Z"}}}}')}}]);